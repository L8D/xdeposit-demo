{"id":"7804699a31858d68730014a81a208372","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@freemarket/core/contracts/IWorkflowRunner.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport './model/AssetAmount.sol';\nimport './model/Workflow.sol';\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\n\n/// @notice An interface defining the entry point to the engine for executing workflows.\ninterface IWorkflowRunner {\n  /// @notice Initiate the execution of a workflow.\n  /// @param workflow The workflow to execute.\n  function executeWorkflow(Workflow calldata workflow) external payable;\n\n  /// @notice Continue a workflow that started on a different chain.\n  /// @notice This is not callable by 3rd parties, only approved bridge integrations call this method.\n  function continueWorkflow(\n    address userAddress,\n    uint256 nonce,\n    Workflow memory workflow,\n    AssetAmount[] memory startingAssets\n  ) external payable;\n}\n"},"@freemarket/core/contracts/IWorkflowStep.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"./model/Asset.sol\";\nimport \"./model/AssetAmount.sol\";\nimport \"./model/WorkflowStepResult.sol\";\n\n/// @title The interface between WorkflowRunner and each Step implementation.abi\n/// @author Marty Saxton\n/// @notice All steps must implement this interface.\ninterface IWorkflowStep {\n    /// @notice called by WorkflowRunner to execute a workflow step.\n    /// @param assetAmounts AssetAmounts to be used by the step\n    /// @param argData Step specific arguments in ABI encoding\n    /// @return the outcome of the step invocation\n    function execute(AssetAmount[] calldata assetAmounts, bytes calldata argData)\n        external\n        payable\n        returns (WorkflowStepResult memory);\n}\n"},"@freemarket/core/contracts/model/Asset.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"./AssetType.sol\";\n\nstruct Asset {\n    AssetType assetType;\n    address assetAddress; // 0x0 for ETH, the ERC20 address.  If it's an account balance, this could represent the token of the account\n}\n"},"@freemarket/core/contracts/model/AssetAmount.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport './Asset.sol';\n\nstruct AssetAmount {\n  Asset asset;\n  uint256 amount;\n}\n"},"@freemarket/core/contracts/model/AssetType.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nenum AssetType {\n    Native,\n    ERC20,\n    ERC721\n}\n"},"@freemarket/core/contracts/model/BridgePayload.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\nimport './Workflow.sol';\n\n// The payload passed form the source chain to the destination chains to continue a multi-chain workflow\nstruct BridgePayload {\n  // the end user's address on the destination chain\n  address userAddress;\n  // a (statistically) unique id to correlate the sending chain's workflow segment with the target chain's workflow segment\n  uint256 nonce;\n  // the 'continuation' workflow that executes on the target chain\n  Workflow workflow;\n}\n"},"@freemarket/core/contracts/model/Workflow.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport './WorkflowStep.sol';\n\n// The main workflow data structure.\nstruct Workflow {\n  // The address of the WorkflowRunner contract, allowing the caller to specify an older version of the runner.\n  // If this is the zero address, the most current version of the runner will be used.\n  // If a non-zero address is specified, it must be a whitelisted address of a previous WorkflowRunner contract.\n  address workflowRunnerAddress;\n  // The nodes in the directed graph of steps.\n  // The start step is defined to be at index 0.\n  // The 'edges' in the graph are defined within each WorkflowStep,\n  // but can be overriden in the return value of a step.\n  WorkflowStep[] steps;\n}\n"},"@freemarket/core/contracts/model/WorkflowStep.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"./WorkflowStepInputAsset.sol\";\n\n// Parameters for a workflow step\nstruct WorkflowStep {\n    // The logical identifer of the step (e.g., 10 represents WrapEtherStep).\n    uint16 stepTypeId;\n    // The contract address of a specific version of the action.\n    // Individual step contracts may be upgraded over time, and this allows\n    // workflows 'freeze' the version of contract for this step\n    // A value of address(0) means use the latest and greatest version  of\n    // this step based only on stepTypeId.\n    address stepAddress;\n    // The input assets to this step.\n    WorkflowStepInputAsset[] inputAssets;\n    // Additional step-specific parameters for this step, typically serialized in standard abi encoding.\n    bytes argData;\n    // The index of the next step in the directed graph of steps. (see the Workflow.steps array)\n    int16 nextStepIndex;\n}\n"},"@freemarket/core/contracts/model/WorkflowStepInputAsset.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport './Asset.sol';\n\n// an input asset to a WorkflowStep\nstruct WorkflowStepInputAsset {\n  // if true, the source of the asset is the caller of the workflow, otherwise it is the output of some previous step\n  bool sourceIsCaller;\n  // if true 'amount' is treated as a percent, with 4 decimals of precision (1000000 represents 100%)\n  bool amountIsPercent;\n  // the input asset\n  Asset asset;\n  // the amount of the input asset\n  uint256 amount;\n}\n"},"@freemarket/core/contracts/model/WorkflowStepResult.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport './AssetAmount.sol';\n\n// The return value from the execution of a step.\nstruct WorkflowStepResult {\n  // The amounts of each input asset that resulted from the step execution.\n  AssetAmount[] inputAssetAmounts;\n  // The amounts of each output asset that resulted from the step execution.\n  AssetAmount[] outputAssetAmounts;\n  // The index of the next step in a workflow.\n  // This value allows the step to override the default nextStepIndex\n  // statically defined\n  // -1 means terminate the workflow\n  // -2 means do not override the statically defined nextStepIndex in WorkflowStep\n  int16 nextStepIndex;\n  // the fee to be withheald out of the output assets (in decibips)\n  // -1 means use the default fee\n  int24 fee;\n}\n"},"@freemarket/step-sdk/contracts/LibActionHelpers.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport '@freemarket/core/contracts/model/AssetType.sol';\nimport '@freemarket/core/contracts/model/WorkflowStepResult.sol';\n\nlibrary LibActionHelpers {\n  function singleAssetResult(AssetType assetType, address assetAddress, uint256 amount) internal pure returns (WorkflowStepResult memory) {\n    Asset memory asset = Asset(assetType, assetAddress);\n    AssetAmount[] memory ouputAssetAmounts = new AssetAmount[](1);\n    ouputAssetAmounts[0] = AssetAmount(asset, amount);\n    return WorkflowStepResult(new AssetAmount[](0), ouputAssetAmounts, -2, -1);\n  }\n\n  function singleTokenResult(address assetAddress, uint256 amount) internal pure returns (WorkflowStepResult memory) {\n    return singleAssetResult(AssetType.ERC20, assetAddress, amount);\n  }\n\n  function noOutputAssetsResult() internal pure returns (WorkflowStepResult memory) {\n    return singleAssetResult(AssetType.Native, address(0), 0);\n  }\n}\n"},"@freemarket/step-sdk/contracts/LibStepResultBuilder.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport '@freemarket/core/contracts/model/AssetType.sol';\nimport '@freemarket/core/contracts/model/WorkflowStepResult.sol';\n\nstruct StepResultBuilder {\n  uint256 inputIndex;\n  uint256 outputIndex;\n  WorkflowStepResult result;\n}\n\nlibrary LibStepResultBuilder {\n  function create(uint256 inputAssetCount, uint256 outputAssetCount) internal pure returns (StepResultBuilder memory) {\n    AssetAmount[] memory inputAssetAmounts = new AssetAmount[](inputAssetCount);\n    AssetAmount[] memory ouputAssetAmounts = new AssetAmount[](outputAssetCount);\n    return StepResultBuilder(0, 0, WorkflowStepResult(inputAssetAmounts, ouputAssetAmounts, -2, -1));\n  }\n\n  function addInputToken(\n    StepResultBuilder memory builder,\n    address tokenAddress,\n    uint256 amount\n  ) internal pure returns (StepResultBuilder memory) {\n    builder.result.inputAssetAmounts[builder.inputIndex++] = AssetAmount(Asset(AssetType.ERC20, tokenAddress), amount);\n    return builder;\n  }\n\n  function addInputAssetAmount(\n    StepResultBuilder memory builder,\n    AssetAmount memory assetAmount\n  ) internal pure returns (StepResultBuilder memory) {\n    builder.result.inputAssetAmounts[builder.inputIndex++] = assetAmount;\n    return builder;\n  }\n\n  function addOutputToken(\n    StepResultBuilder memory builder,\n    address tokenAddress,\n    uint256 amount\n  ) internal pure returns (StepResultBuilder memory) {\n    builder.result.outputAssetAmounts[builder.outputIndex++] = AssetAmount(Asset(AssetType.ERC20, tokenAddress), amount);\n    return builder;\n  }\n\n  function addInputNative(StepResultBuilder memory builder, uint256 amount) internal pure returns (StepResultBuilder memory) {\n    builder.result.inputAssetAmounts[builder.inputIndex++] = AssetAmount(Asset(AssetType.Native, address(0)), amount);\n    return builder;\n  }\n\n  function addOutputNative(StepResultBuilder memory builder, uint256 amount) internal pure returns (StepResultBuilder memory) {\n    builder.result.outputAssetAmounts[builder.outputIndex++] = AssetAmount(Asset(AssetType.Native, address(0)), amount);\n    return builder;\n  }\n\n  function addOutputAssetAmount(\n    StepResultBuilder memory builder,\n    AssetAmount memory assetAmount\n  ) internal pure returns (StepResultBuilder memory) {\n    builder.result.outputAssetAmounts[builder.outputIndex++] = assetAmount;\n    return builder;\n  }\n\n  function setNextStepIndex(StepResultBuilder memory builder, int16 nextStepIndex) internal pure returns (StepResultBuilder memory) {\n    builder.result.nextStepIndex = nextStepIndex;\n    return builder;\n  }\n\n  function setFee(StepResultBuilder memory builder, int24 feeInDeciBips) internal pure returns (StepResultBuilder memory) {\n    builder.result.fee = feeInDeciBips;\n    return builder;\n  }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/IStargateFactory.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.13;\n\ninterface IStargateFactory {\n  function getPool(uint256) external view returns (address);\n\n  function allPools(uint256 index) external view returns (address);\n}\n"},"contracts/IStargateFeeLibrary.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity ^0.8.13;\n\nstruct SwapObj {\n  uint256 amount;\n  uint256 eqFee;\n  uint256 eqReward;\n  uint256 lpFee;\n  uint256 protocolFee;\n  uint256 lkbRemove;\n}\n\ninterface IStargateFeeLibrary {\n  function getFees(\n    uint256 _srcPoolId,\n    uint256 _dstPoolId,\n    uint16 _dstChainId,\n    address _from,\n    uint256 _amountSD\n  ) external view returns (SwapObj memory);\n\n  function getVersion() external view returns (string memory);\n}\n"},"contracts/IStargatePool.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.13;\n\ninterface IStargatePool {\n  function token() external view returns (address);\n\n  function feeLibrary() external view returns (address);\n}\n"},"contracts/IStargateReceiver.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.13;\n\ninterface IStargateReceiver {\n  function sgReceive(\n    uint16 _srcChainId, // the remote chainId sending the tokens\n    bytes memory _srcAddress, // the remote Bridge address\n    uint256 _nonce,\n    address _token, // the token contract on the local chain\n    uint256 amountLD, // the qty of local _token contract tokens\n    bytes memory payload\n  ) external;\n}\n"},"contracts/IStargateRouter.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity ^0.8.13;\n\n// abicoder v2 is enabled by default: https://docs.soliditylang.org/en/v0.8.0/080-breaking-changes.html\n// pragma abicoder v2;\n\ninterface IStargateRouter {\n  function factory() external view returns (address);\n\n  struct lzTxObj {\n    uint256 dstGasForCall;\n    uint256 dstNativeAmount;\n    bytes dstNativeAddr;\n  }\n\n  function addLiquidity(\n    uint256 _poolId,\n    uint256 _amountLD,\n    address _to\n  ) external;\n\n  function swap(\n    uint16 _dstChainId,\n    uint256 _srcPoolId,\n    uint256 _dstPoolId,\n    address payable _refundAddress,\n    uint256 _amountLD,\n    uint256 _minAmountLD,\n    lzTxObj memory _lzTxParams,\n    bytes calldata _to,\n    bytes calldata _payload\n  ) external payable;\n\n  function redeemRemote(\n    uint16 _dstChainId,\n    uint256 _srcPoolId,\n    uint256 _dstPoolId,\n    address payable _refundAddress,\n    uint256 _amountLP,\n    uint256 _minAmountLD,\n    bytes calldata _to,\n    lzTxObj memory _lzTxParams\n  ) external payable;\n\n  function instantRedeemLocal(\n    uint16 _srcPoolId,\n    uint256 _amountLP,\n    address _to\n  ) external returns (uint256);\n\n  function redeemLocal(\n    uint16 _dstChainId,\n    uint256 _srcPoolId,\n    uint256 _dstPoolId,\n    address payable _refundAddress,\n    uint256 _amountLP,\n    bytes calldata _to,\n    lzTxObj memory _lzTxParams\n  ) external payable;\n\n  function sendCredits(\n    uint16 _dstChainId,\n    uint256 _srcPoolId,\n    uint256 _dstPoolId,\n    address payable _refundAddress\n  ) external payable;\n\n  function quoteLayerZeroFee(\n    uint16 _dstChainId,\n    uint8 _functionType,\n    bytes calldata _toAddress,\n    bytes calldata _transferAndCallPayload,\n    lzTxObj memory _lzTxParams\n  ) external view returns (uint256, uint256);\n}\n"},"contracts/MockStargateRouter.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity ^0.8.13;\n\nimport './IStargateRouter.sol';\n\ncontract MockStargateRouter is IStargateRouter {\n  struct MockStargateRouterSwapArgs {\n    uint16 dstChainId;\n    uint256 srcPoolId;\n    uint256 dstPoolId;\n    address payable refundAddress;\n    uint256 amount;\n    uint256 minAmountOut;\n    bytes to;\n    lzTxObj lzTxParams;\n    bytes payload;\n  }\n\n  MockStargateRouterSwapArgs[] internal swapInvocations;\n\n  function getSwapInvocations() public view returns (MockStargateRouterSwapArgs[] memory) {\n    return swapInvocations;\n  }\n\n  function getSwapInvocationAt(uint256 i) public view returns (MockStargateRouterSwapArgs memory) {\n    return swapInvocations[i];\n  }\n\n  function getSwapInvocationCount() public view returns (uint256) {\n    return swapInvocations.length;\n  }\n\n  function clear() public {\n    while (swapInvocations.length > 0) {\n      swapInvocations.pop();\n    }\n  }\n\n  function addLiquidity(\n    uint256 _poolId,\n    uint256 _amountLD,\n    address _to\n  ) external {}\n\n  function swap(\n    uint16 _dstChainId,\n    uint256 _srcPoolId,\n    uint256 _dstPoolId,\n    address payable _refundAddress,\n    uint256 _amountLD,\n    uint256 _minAmountLD,\n    lzTxObj memory _lzTxParams,\n    bytes calldata _to,\n    bytes calldata _payload\n  ) external payable {\n    swapInvocations.push(\n      MockStargateRouterSwapArgs(_dstChainId, _srcPoolId, _dstPoolId, _refundAddress, _amountLD, _minAmountLD, _to, _lzTxParams, _payload)\n    );\n  }\n\n  function redeemRemote(\n    uint16 _dstChainId,\n    uint256 _srcPoolId,\n    uint256 _dstPoolId,\n    address payable _refundAddress,\n    uint256 _amountLP,\n    uint256 _minAmountLD,\n    bytes calldata _to,\n    lzTxObj memory _lzTxParams\n  ) external payable {}\n\n  function instantRedeemLocal(\n    uint16,\n    uint256,\n    address\n  ) external pure returns (uint256) {\n    return 0;\n  }\n\n  function redeemLocal(\n    uint16 _dstChainId,\n    uint256 _srcPoolId,\n    uint256 _dstPoolId,\n    address payable _refundAddress,\n    uint256 _amountLP,\n    bytes calldata _to,\n    lzTxObj memory _lzTxParams\n  ) external payable {}\n\n  function sendCredits(\n    uint16 _dstChainId,\n    uint256 _srcPoolId,\n    uint256 _dstPoolId,\n    address payable _refundAddress\n  ) external payable {}\n\n  function quoteLayerZeroFee(\n    uint16,\n    uint8,\n    bytes calldata,\n    bytes calldata,\n    lzTxObj memory\n  ) external pure returns (uint256, uint256) {\n    return (0, 0);\n  }\n\n  function factory() external pure returns (address) {\n    return address(0);\n  }\n}\n"},"contracts/StargateBridgeAction.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport './WorkflowContinuingStep.sol';\nimport '@freemarket/core/contracts/model/Asset.sol';\nimport '@freemarket/core/contracts/model/AssetAmount.sol';\nimport '@freemarket/core/contracts/model/BridgePayload.sol';\nimport '@freemarket/core/contracts/IWorkflowRunner.sol';\nimport '@freemarket/step-sdk/contracts/LibActionHelpers.sol';\nimport './IStargateRouter.sol';\nimport './IStargateReceiver.sol';\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\nimport '@freemarket/step-sdk/contracts/LibStepResultBuilder.sol';\n\nusing LibStepResultBuilder for StepResultBuilder;\n\n// StargateBridgeAction specific arguments\nstruct StargateBridgeActionArgs {\n  //  addr of the StargateSwapAction on the target chain.\n  address dstActionAddress;\n  // addr of the user (caller on the source chain)\n  address dstUserAddress;\n  // stargate destination chain\n  uint16 dstChainId;\n  // stargate source pool (implies source asset)\n  uint256 srcPoolId;\n  // stargate destination pool (implies destination asset)\n  uint256 dstPoolId;\n  // gas to execute workflow continuation on destination chain\n  uint256 dstGasForCall;\n  // amount of native asset to send to dstUserAddress\n  uint256 dstNativeAmount;\n  // minimum amount of output asset (else the tx on the source chain will revert)\n  uint256 minAmountOut;\n  // if true, minAmountOut passed to stargate\n  bool minAmountOutIsPercent;\n  // the abi-encoded workflow that will execute on the destination chain\n  bytes continuationWorkflow;\n  // the value used to correlate the source chain transaction with the target chain transaction\n  uint256 nonce;\n  // whether the continuation workflow should be included in the event\n  bool includeContinuationWorkflowInEvent;\n}\n\ncontract StargateBridgeAction is WorkflowContinuingStep, IStargateReceiver {\n  address public immutable frontDoorAddress;\n  address public immutable stargateRouterAddress;\n\n  /// @notice This event is emitted on the destination chain when Stargate invokes our sgReceive method\n  /// @param tokenAddress the address of the erc20 that was transfered from the source chain to this chain.abi\n  /// @param bridgePayload the payload that was sent along with the erc20.\n  event SgReceiveCalled(address tokenAddress, uint256 amount, BridgePayload bridgePayload);\n\n  event StargateBridgeParamsEvent(\n    uint256 nativeAmount,\n    uint256 assetAmount,\n    address dstActionAddress,\n    uint16 dstChainId,\n    uint256 srcPoolId,\n    uint256 dstPoolId,\n    uint256 dstGasForCall,\n    uint256 dstNativeAmount,\n    uint256 minAmountOut,\n    bytes continuationWorkflow\n  );\n\n  constructor(address _frontDoorAddress, address _stargateRouterAddress) {\n    frontDoorAddress = _frontDoorAddress;\n    stargateRouterAddress = _stargateRouterAddress;\n  }\n\n  //  need to gather things up into a struct to prevent 'Stack too deep'\n  struct Locals {\n    uint256 lengthPrefix;\n    StargateBridgeActionArgs args;\n    bytes dstActionAddressEncoded;\n    uint256 minAmountOut;\n    AssetAmount nativeInputAsset;\n    AssetAmount erc20InputAsset;\n  }\n\n  function execute(AssetAmount[] calldata inputAssetAmounts, bytes calldata argData) public payable returns (WorkflowStepResult memory) {\n    Locals memory locals;\n    require(inputAssetAmounts.length == 2, 'there must be 2 input assets');\n    if (inputAssetAmounts[0].asset.assetType == AssetType.Native) {\n      require(inputAssetAmounts[1].asset.assetType == AssetType.ERC20, 'one input asset must be an ERC20');\n      locals.nativeInputAsset = inputAssetAmounts[0];\n      locals.erc20InputAsset = inputAssetAmounts[1];\n    } else if (inputAssetAmounts[1].asset.assetType == AssetType.Native) {\n      require(inputAssetAmounts[0].asset.assetType == AssetType.ERC20, 'one input asset must be an ERC20');\n      locals.nativeInputAsset = inputAssetAmounts[1];\n      locals.erc20InputAsset = inputAssetAmounts[0];\n    } else {\n      revert('one input asset must be native');\n    }\n    require(\n      inputAssetAmounts[0].asset.assetType == AssetType.ERC20 || inputAssetAmounts[0].asset.assetType == AssetType.Native,\n      'the input asset must be an ERC20 or Native'\n    );\n\n    // approve sg to take the token\n    if (inputAssetAmounts[0].asset.assetType == AssetType.ERC20) {\n      approveErc20(inputAssetAmounts[0].asset.assetAddress, inputAssetAmounts[0].amount);\n    }\n\n    locals.args = abi.decode(argData, (StargateBridgeActionArgs));\n\n    // address payable refundAddress = payable(msg.sender);\n    locals.dstActionAddressEncoded = abi.encodePacked(locals.args.dstActionAddress);\n    if (locals.args.minAmountOutIsPercent) {\n      locals.minAmountOut = (inputAssetAmounts[0].amount * locals.args.minAmountOut) / 100_000;\n    } else {\n      locals.minAmountOut = locals.args.minAmountOut;\n    }\n\n    emit StargateBridgeParamsEvent(\n      locals.nativeInputAsset.amount, // native amount\n      locals.erc20InputAsset.amount, // token amount\n      locals.args.dstActionAddress, // dest addr for money and sgReceive\n      locals.args.dstChainId,\n      locals.args.srcPoolId,\n      locals.args.dstPoolId,\n      locals.args.dstGasForCall,\n      locals.args.dstNativeAmount,\n      locals.minAmountOut,\n      locals.args.continuationWorkflow\n    );\n\n    IStargateRouter(stargateRouterAddress).swap{value: locals.nativeInputAsset.amount}(\n      locals.args.dstChainId,\n      locals.args.srcPoolId,\n      locals.args.dstPoolId,\n      payable(msg.sender), // refundAddreess\n      locals.erc20InputAsset.amount,\n      locals.minAmountOut,\n      IStargateRouter.lzTxObj(locals.args.dstGasForCall, locals.args.dstNativeAmount, abi.encodePacked(locals.args.dstUserAddress)),\n      locals.dstActionAddressEncoded,\n      locals.args.continuationWorkflow\n    );\n    if (locals.args.continuationWorkflow.length > 0) {\n      AssetAmount[] memory expectedAssets = new AssetAmount[](1);\n      expectedAssets[0] = locals.erc20InputAsset;\n      expectedAssets[0].amount = locals.minAmountOut;\n      bytes memory continuationFlow = locals.args.includeContinuationWorkflowInEvent ? locals.args.continuationWorkflow : new bytes(0);\n      emit WorkflowBridged('stargate-bridge', locals.args.dstChainId, locals.args.nonce, expectedAssets, continuationFlow);\n    }\n\n    return WorkflowStepResult(inputAssetAmounts, new AssetAmount[](0), -2, -1);\n  }\n\n  function approveErc20(address tokenAddress, uint256 amount) internal {\n    IERC20 inputToken = IERC20(tokenAddress);\n    inputToken.approve(stargateRouterAddress, amount);\n  }\n\n  function sgReceive(\n    uint16, // the remote chainId sending the tokens\n    bytes memory, // the remote Bridge address\n    uint256, // stargate nonce, use unknown\n    address tokenAddress, // the token contract on the local chain\n    uint256 amount, // the qty of local token contract tokens\n    bytes memory payload\n  ) external {\n    require(msg.sender == stargateRouterAddress, 'only Stargate is permitted to call sgReceive');\n    BridgePayload memory bridgePayload = abi.decode(payload, (BridgePayload));\n    emit SgReceiveCalled(tokenAddress, amount, bridgePayload);\n\n    IERC20 startingToken = IERC20(tokenAddress);\n    SafeERC20.safeIncreaseAllowance(startingToken, frontDoorAddress, amount);\n\n    AssetAmount[] memory startingAssets = new AssetAmount[](1);\n    startingAssets[0] = AssetAmount(Asset(AssetType.ERC20, tokenAddress), amount);\n    IWorkflowRunner runner = IWorkflowRunner(frontDoorAddress);\n    // TODO set value when the bridged asset is native\n    try runner.continueWorkflow(bridgePayload.userAddress, bridgePayload.nonce, bridgePayload.workflow, startingAssets) {\n      // if the workflow succeeds, we're done\n    } catch {\n      // if the workflow fails, we need to return the tokens to the user\n      SafeERC20.safeTransfer(startingToken, bridgePayload.userAddress, amount);\n    }\n  }\n}\n"},"contracts/WorkflowContinuingStep.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport '@freemarket/core/contracts/IWorkflowStep.sol';\n\nabstract contract WorkflowContinuingStep is IWorkflowStep {\n  event WorkflowBridged(string stepType, uint16 targetChain, uint256 nonce, AssetAmount[] expectedAssets, bytes continuationWorkflow);\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@freemarket/core/contracts/IWorkflowRunner.sol":{"ast":{"absolutePath":"@freemarket/core/contracts/IWorkflowRunner.sol","exportedSymbols":{"Asset":[57],"AssetAmount":[66],"AssetType":[72],"Context":[1895],"ERC20":[1123],"IERC20":[1201],"IERC20Metadata":[1226],"IWorkflowRunner":[28],"Workflow":[93],"WorkflowStep":[109],"WorkflowStepInputAsset":[122]},"id":29,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:0"},{"absolutePath":"@freemarket/core/contracts/model/AssetAmount.sol","file":"./model/AssetAmount.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":29,"sourceUnit":67,"src":"58:33:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@freemarket/core/contracts/model/Workflow.sol","file":"./model/Workflow.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":29,"sourceUnit":94,"src":"92:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":29,"sourceUnit":1124,"src":"123:55:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IWorkflowRunner","contractDependencies":[],"contractKind":"interface","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"180:89:0","text":"@notice An interface defining the entry point to the engine for executing workflows."},"fullyImplemented":false,"id":28,"linearizedBaseContracts":[28],"name":"IWorkflowRunner","nameLocation":"279:15:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"299:96:0","text":"@notice Initiate the execution of a workflow.\n @param workflow The workflow to execute."},"functionSelector":"52faae30","id":12,"implemented":false,"kind":"function","modifiers":[],"name":"executeWorkflow","nameLocation":"407:15:0","nodeType":"FunctionDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"workflow","nameLocation":"441:8:0","nodeType":"VariableDeclaration","scope":12,"src":"423:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Workflow_$93_calldata_ptr","typeString":"struct Workflow"},"typeName":{"id":8,"nodeType":"UserDefinedTypeName","pathNode":{"id":7,"name":"Workflow","nameLocations":["423:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":93,"src":"423:8:0"},"referencedDeclaration":93,"src":"423:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Workflow_$93_storage_ptr","typeString":"struct Workflow"}},"visibility":"internal"}],"src":"422:28:0"},"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"467:0:0"},"scope":28,"src":"398:70:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":13,"nodeType":"StructuredDocumentation","src":"472:169:0","text":"@notice Continue a workflow that started on a different chain.\n @notice This is not callable by 3rd parties, only approved bridge integrations call this method."},"functionSelector":"f92b3d15","id":27,"implemented":false,"kind":"function","modifiers":[],"name":"continueWorkflow","nameLocation":"653:16:0","nodeType":"FunctionDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"mutability":"mutable","name":"userAddress","nameLocation":"683:11:0","nodeType":"VariableDeclaration","scope":27,"src":"675:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14,"name":"address","nodeType":"ElementaryTypeName","src":"675:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17,"mutability":"mutable","name":"nonce","nameLocation":"708:5:0","nodeType":"VariableDeclaration","scope":27,"src":"700:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16,"name":"uint256","nodeType":"ElementaryTypeName","src":"700:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"workflow","nameLocation":"735:8:0","nodeType":"VariableDeclaration","scope":27,"src":"719:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Workflow_$93_memory_ptr","typeString":"struct Workflow"},"typeName":{"id":19,"nodeType":"UserDefinedTypeName","pathNode":{"id":18,"name":"Workflow","nameLocations":["719:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":93,"src":"719:8:0"},"referencedDeclaration":93,"src":"719:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Workflow_$93_storage_ptr","typeString":"struct Workflow"}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"startingAssets","nameLocation":"770:14:0","nodeType":"VariableDeclaration","scope":27,"src":"749:35:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount[]"},"typeName":{"baseType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"AssetAmount","nameLocations":["749:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"749:11:0"},"referencedDeclaration":66,"src":"749:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":23,"nodeType":"ArrayTypeName","src":"749:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}},"visibility":"internal"}],"src":"669:119:0"},"returnParameters":{"id":26,"nodeType":"ParameterList","parameters":[],"src":"805:0:0"},"scope":28,"src":"644:162:0","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":29,"src":"269:539:0","usedErrors":[]}],"src":"32:777:0"},"id":0},"@freemarket/core/contracts/IWorkflowStep.sol":{"ast":{"absolutePath":"@freemarket/core/contracts/IWorkflowStep.sol","exportedSymbols":{"Asset":[57],"AssetAmount":[66],"AssetType":[72],"IWorkflowStep":[48],"WorkflowStepResult":[138]},"id":49,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":30,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:1"},{"absolutePath":"@freemarket/core/contracts/model/Asset.sol","file":"./model/Asset.sol","id":31,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":58,"src":"58:27:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@freemarket/core/contracts/model/AssetAmount.sol","file":"./model/AssetAmount.sol","id":32,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":67,"src":"86:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@freemarket/core/contracts/model/WorkflowStepResult.sol","file":"./model/WorkflowStepResult.sol","id":33,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":139,"src":"120:40:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IWorkflowStep","contractDependencies":[],"contractKind":"interface","documentation":{"id":34,"nodeType":"StructuredDocumentation","src":"162:159:1","text":"@title The interface between WorkflowRunner and each Step implementation.abi\n @author Marty Saxton\n @notice All steps must implement this interface."},"fullyImplemented":false,"id":48,"linearizedBaseContracts":[48],"name":"IWorkflowStep","nameLocation":"331:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"351:242:1","text":"@notice called by WorkflowRunner to execute a workflow step.\n @param assetAmounts AssetAmounts to be used by the step\n @param argData Step specific arguments in ABI encoding\n @return the outcome of the step invocation"},"functionSelector":"7bb26ca7","id":47,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"607:7:1","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"assetAmounts","nameLocation":"638:12:1","nodeType":"VariableDeclaration","scope":47,"src":"615:35:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount[]"},"typeName":{"baseType":{"id":37,"nodeType":"UserDefinedTypeName","pathNode":{"id":36,"name":"AssetAmount","nameLocations":["615:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"615:11:1"},"referencedDeclaration":66,"src":"615:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":38,"nodeType":"ArrayTypeName","src":"615:13:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"argData","nameLocation":"667:7:1","nodeType":"VariableDeclaration","scope":47,"src":"652:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":40,"name":"bytes","nodeType":"ElementaryTypeName","src":"652:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"614:61:1"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":47,"src":"726:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult"},"typeName":{"id":44,"nodeType":"UserDefinedTypeName","pathNode":{"id":43,"name":"WorkflowStepResult","nameLocations":["726:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":138,"src":"726:18:1"},"referencedDeclaration":138,"src":"726:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_storage_ptr","typeString":"struct WorkflowStepResult"}},"visibility":"internal"}],"src":"725:27:1"},"scope":48,"src":"598:155:1","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":49,"src":"321:434:1","usedErrors":[]}],"src":"32:724:1"},"id":1},"@freemarket/core/contracts/model/Asset.sol":{"ast":{"absolutePath":"@freemarket/core/contracts/model/Asset.sol","exportedSymbols":{"Asset":[57],"AssetType":[72]},"id":58,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":50,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:2"},{"absolutePath":"@freemarket/core/contracts/model/AssetType.sol","file":"./AssetType.sol","id":51,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":58,"sourceUnit":73,"src":"58:25:2","symbolAliases":[],"unitAlias":""},{"canonicalName":"Asset","id":57,"members":[{"constant":false,"id":54,"mutability":"mutable","name":"assetType","nameLocation":"114:9:2","nodeType":"VariableDeclaration","scope":57,"src":"104:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},"typeName":{"id":53,"nodeType":"UserDefinedTypeName","pathNode":{"id":52,"name":"AssetType","nameLocations":["104:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":72,"src":"104:9:2"},"referencedDeclaration":72,"src":"104:9:2","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},"visibility":"internal"},{"constant":false,"id":56,"mutability":"mutable","name":"assetAddress","nameLocation":"137:12:2","nodeType":"VariableDeclaration","scope":57,"src":"129:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"129:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Asset","nameLocation":"92:5:2","nodeType":"StructDefinition","scope":58,"src":"85:177:2","visibility":"public"}],"src":"32:231:2"},"id":2},"@freemarket/core/contracts/model/AssetAmount.sol":{"ast":{"absolutePath":"@freemarket/core/contracts/model/AssetAmount.sol","exportedSymbols":{"Asset":[57],"AssetAmount":[66],"AssetType":[72]},"id":67,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":59,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"@freemarket/core/contracts/model/Asset.sol","file":"./Asset.sol","id":60,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":67,"sourceUnit":58,"src":"58:21:3","symbolAliases":[],"unitAlias":""},{"canonicalName":"AssetAmount","id":66,"members":[{"constant":false,"id":63,"mutability":"mutable","name":"asset","nameLocation":"110:5:3","nodeType":"VariableDeclaration","scope":66,"src":"104:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_storage_ptr","typeString":"struct Asset"},"typeName":{"id":62,"nodeType":"UserDefinedTypeName","pathNode":{"id":61,"name":"Asset","nameLocations":["104:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"104:5:3"},"referencedDeclaration":57,"src":"104:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_storage_ptr","typeString":"struct Asset"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"amount","nameLocation":"127:6:3","nodeType":"VariableDeclaration","scope":66,"src":"119:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"119:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AssetAmount","nameLocation":"88:11:3","nodeType":"StructDefinition","scope":67,"src":"81:55:3","visibility":"public"}],"src":"32:105:3"},"id":3},"@freemarket/core/contracts/model/AssetType.sol":{"ast":{"absolutePath":"@freemarket/core/contracts/model/AssetType.sol","exportedSymbols":{"AssetType":[72]},"id":73,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":68,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:4"},{"canonicalName":"AssetType","id":72,"members":[{"id":69,"name":"Native","nameLocation":"79:6:4","nodeType":"EnumValue","src":"79:6:4"},{"id":70,"name":"ERC20","nameLocation":"91:5:4","nodeType":"EnumValue","src":"91:5:4"},{"id":71,"name":"ERC721","nameLocation":"102:6:4","nodeType":"EnumValue","src":"102:6:4"}],"name":"AssetType","nameLocation":"63:9:4","nodeType":"EnumDefinition","src":"58:52:4"}],"src":"32:79:4"},"id":4},"@freemarket/core/contracts/model/BridgePayload.sol":{"ast":{"absolutePath":"@freemarket/core/contracts/model/BridgePayload.sol","exportedSymbols":{"Asset":[57],"AssetType":[72],"BridgePayload":[83],"Workflow":[93],"WorkflowStep":[109],"WorkflowStepInputAsset":[122]},"id":84,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":74,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:5"},{"absolutePath":"@freemarket/core/contracts/model/Workflow.sol","file":"./Workflow.sol","id":75,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":84,"sourceUnit":94,"src":"57:24:5","symbolAliases":[],"unitAlias":""},{"canonicalName":"BridgePayload","id":83,"members":[{"constant":false,"id":77,"mutability":"mutable","name":"userAddress","nameLocation":"274:11:5","nodeType":"VariableDeclaration","scope":83,"src":"266:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":76,"name":"address","nodeType":"ElementaryTypeName","src":"266:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"nonce","nameLocation":"421:5:5","nodeType":"VariableDeclaration","scope":83,"src":"413:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"413:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":82,"mutability":"mutable","name":"workflow","nameLocation":"506:8:5","nodeType":"VariableDeclaration","scope":83,"src":"497:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Workflow_$93_storage_ptr","typeString":"struct Workflow"},"typeName":{"id":81,"nodeType":"UserDefinedTypeName","pathNode":{"id":80,"name":"Workflow","nameLocations":["497:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":93,"src":"497:8:5"},"referencedDeclaration":93,"src":"497:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Workflow_$93_storage_ptr","typeString":"struct Workflow"}},"visibility":"internal"}],"name":"BridgePayload","nameLocation":"195:13:5","nodeType":"StructDefinition","scope":84,"src":"188:329:5","visibility":"public"}],"src":"32:486:5"},"id":5},"@freemarket/core/contracts/model/Workflow.sol":{"ast":{"absolutePath":"@freemarket/core/contracts/model/Workflow.sol","exportedSymbols":{"Asset":[57],"AssetType":[72],"Workflow":[93],"WorkflowStep":[109],"WorkflowStepInputAsset":[122]},"id":94,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":85,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:6"},{"absolutePath":"@freemarket/core/contracts/model/WorkflowStep.sol","file":"./WorkflowStep.sol","id":86,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":94,"sourceUnit":110,"src":"58:28:6","symbolAliases":[],"unitAlias":""},{"canonicalName":"Workflow","id":93,"members":[{"constant":false,"id":88,"mutability":"mutable","name":"workflowRunnerAddress","nameLocation":"465:21:6","nodeType":"VariableDeclaration","scope":93,"src":"457:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":92,"mutability":"mutable","name":"steps","nameLocation":"726:5:6","nodeType":"VariableDeclaration","scope":93,"src":"711:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WorkflowStep_$109_storage_$dyn_storage_ptr","typeString":"struct WorkflowStep[]"},"typeName":{"baseType":{"id":90,"nodeType":"UserDefinedTypeName","pathNode":{"id":89,"name":"WorkflowStep","nameLocations":["711:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":109,"src":"711:12:6"},"referencedDeclaration":109,"src":"711:12:6","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStep_$109_storage_ptr","typeString":"struct WorkflowStep"}},"id":91,"nodeType":"ArrayTypeName","src":"711:14:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WorkflowStep_$109_storage_$dyn_storage_ptr","typeString":"struct WorkflowStep[]"}},"visibility":"internal"}],"name":"Workflow","nameLocation":"132:8:6","nodeType":"StructDefinition","scope":94,"src":"125:609:6","visibility":"public"}],"src":"32:703:6"},"id":6},"@freemarket/core/contracts/model/WorkflowStep.sol":{"ast":{"absolutePath":"@freemarket/core/contracts/model/WorkflowStep.sol","exportedSymbols":{"Asset":[57],"AssetType":[72],"WorkflowStep":[109],"WorkflowStepInputAsset":[122]},"id":110,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":95,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:7"},{"absolutePath":"@freemarket/core/contracts/model/WorkflowStepInputAsset.sol","file":"./WorkflowStepInputAsset.sol","id":96,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":110,"sourceUnit":123,"src":"58:38:7","symbolAliases":[],"unitAlias":""},{"canonicalName":"WorkflowStep","id":109,"members":[{"constant":false,"id":98,"mutability":"mutable","name":"stepTypeId","nameLocation":"243:10:7","nodeType":"VariableDeclaration","scope":109,"src":"236:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":97,"name":"uint16","nodeType":"ElementaryTypeName","src":"236:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"stepAddress","nameLocation":"590:11:7","nodeType":"VariableDeclaration","scope":109,"src":"582:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"582:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104,"mutability":"mutable","name":"inputAssets","nameLocation":"670:11:7","nodeType":"VariableDeclaration","scope":109,"src":"645:36:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WorkflowStepInputAsset_$122_storage_$dyn_storage_ptr","typeString":"struct WorkflowStepInputAsset[]"},"typeName":{"baseType":{"id":102,"nodeType":"UserDefinedTypeName","pathNode":{"id":101,"name":"WorkflowStepInputAsset","nameLocations":["645:22:7"],"nodeType":"IdentifierPath","referencedDeclaration":122,"src":"645:22:7"},"referencedDeclaration":122,"src":"645:22:7","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepInputAsset_$122_storage_ptr","typeString":"struct WorkflowStepInputAsset"}},"id":103,"nodeType":"ArrayTypeName","src":"645:24:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WorkflowStepInputAsset_$122_storage_$dyn_storage_ptr","typeString":"struct WorkflowStepInputAsset[]"}},"visibility":"internal"},{"constant":false,"id":106,"mutability":"mutable","name":"argData","nameLocation":"798:7:7","nodeType":"VariableDeclaration","scope":109,"src":"792:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":105,"name":"bytes","nodeType":"ElementaryTypeName","src":"792:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":108,"mutability":"mutable","name":"nextStepIndex","nameLocation":"914:13:7","nodeType":"VariableDeclaration","scope":109,"src":"908:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":107,"name":"int16","nodeType":"ElementaryTypeName","src":"908:5:7","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"name":"WorkflowStep","nameLocation":"139:12:7","nodeType":"StructDefinition","scope":110,"src":"132:798:7","visibility":"public"}],"src":"32:899:7"},"id":7},"@freemarket/core/contracts/model/WorkflowStepInputAsset.sol":{"ast":{"absolutePath":"@freemarket/core/contracts/model/WorkflowStepInputAsset.sol","exportedSymbols":{"Asset":[57],"AssetType":[72],"WorkflowStepInputAsset":[122]},"id":123,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":111,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:8"},{"absolutePath":"@freemarket/core/contracts/model/Asset.sol","file":"./Asset.sol","id":112,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":123,"sourceUnit":58,"src":"58:21:8","symbolAliases":[],"unitAlias":""},{"canonicalName":"WorkflowStepInputAsset","id":122,"members":[{"constant":false,"id":114,"mutability":"mutable","name":"sourceIsCaller","nameLocation":"274:14:8","nodeType":"VariableDeclaration","scope":122,"src":"269:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":113,"name":"bool","nodeType":"ElementaryTypeName","src":"269:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"amountIsPercent","nameLocation":"399:15:8","nodeType":"VariableDeclaration","scope":122,"src":"394:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":115,"name":"bool","nodeType":"ElementaryTypeName","src":"394:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"asset","nameLocation":"445:5:8","nodeType":"VariableDeclaration","scope":122,"src":"439:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_storage_ptr","typeString":"struct Asset"},"typeName":{"id":118,"nodeType":"UserDefinedTypeName","pathNode":{"id":117,"name":"Asset","nameLocations":["439:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"439:5:8"},"referencedDeclaration":57,"src":"439:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_storage_ptr","typeString":"struct Asset"}},"visibility":"internal"},{"constant":false,"id":121,"mutability":"mutable","name":"amount","nameLocation":"497:6:8","nodeType":"VariableDeclaration","scope":122,"src":"489:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":120,"name":"uint256","nodeType":"ElementaryTypeName","src":"489:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"WorkflowStepInputAsset","nameLocation":"124:22:8","nodeType":"StructDefinition","scope":123,"src":"117:389:8","visibility":"public"}],"src":"32:475:8"},"id":8},"@freemarket/core/contracts/model/WorkflowStepResult.sol":{"ast":{"absolutePath":"@freemarket/core/contracts/model/WorkflowStepResult.sol","exportedSymbols":{"Asset":[57],"AssetAmount":[66],"AssetType":[72],"WorkflowStepResult":[138]},"id":139,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":124,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:9"},{"absolutePath":"@freemarket/core/contracts/model/AssetAmount.sol","file":"./AssetAmount.sol","id":125,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":139,"sourceUnit":67,"src":"58:27:9","symbolAliases":[],"unitAlias":""},{"canonicalName":"WorkflowStepResult","id":138,"members":[{"constant":false,"id":129,"mutability":"mutable","name":"inputAssetAmounts","nameLocation":"257:17:9","nodeType":"VariableDeclaration","scope":138,"src":"243:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"},"typeName":{"baseType":{"id":127,"nodeType":"UserDefinedTypeName","pathNode":{"id":126,"name":"AssetAmount","nameLocations":["243:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"243:11:9"},"referencedDeclaration":66,"src":"243:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":128,"nodeType":"ArrayTypeName","src":"243:13:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"outputAssetAmounts","nameLocation":"369:18:9","nodeType":"VariableDeclaration","scope":138,"src":"355:32:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"},"typeName":{"baseType":{"id":131,"nodeType":"UserDefinedTypeName","pathNode":{"id":130,"name":"AssetAmount","nameLocations":["355:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"355:11:9"},"referencedDeclaration":66,"src":"355:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":132,"nodeType":"ArrayTypeName","src":"355:13:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}},"visibility":"internal"},{"constant":false,"id":135,"mutability":"mutable","name":"nextStepIndex","nameLocation":"658:13:9","nodeType":"VariableDeclaration","scope":138,"src":"652:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":134,"name":"int16","nodeType":"ElementaryTypeName","src":"652:5:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"},{"constant":false,"id":137,"mutability":"mutable","name":"fee","nameLocation":"783:3:9","nodeType":"VariableDeclaration","scope":138,"src":"777:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":136,"name":"int24","nodeType":"ElementaryTypeName","src":"777:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"name":"WorkflowStepResult","nameLocation":"144:18:9","nodeType":"StructDefinition","scope":139,"src":"137:652:9","visibility":"public"}],"src":"32:758:9"},"id":9},"@freemarket/step-sdk/contracts/LibActionHelpers.sol":{"ast":{"absolutePath":"@freemarket/step-sdk/contracts/LibActionHelpers.sol","exportedSymbols":{"Asset":[57],"AssetAmount":[66],"AssetType":[72],"LibActionHelpers":[235],"WorkflowStepResult":[138]},"id":236,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":140,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:10"},{"absolutePath":"@freemarket/core/contracts/model/AssetType.sol","file":"@freemarket/core/contracts/model/AssetType.sol","id":141,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":236,"sourceUnit":73,"src":"58:56:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@freemarket/core/contracts/model/WorkflowStepResult.sol","file":"@freemarket/core/contracts/model/WorkflowStepResult.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":236,"sourceUnit":139,"src":"115:65:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LibActionHelpers","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":235,"linearizedBaseContracts":[235],"name":"LibActionHelpers","nameLocation":"190:16:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":198,"nodeType":"Block","src":"347:264:10","statements":[{"assignments":[157],"declarations":[{"constant":false,"id":157,"mutability":"mutable","name":"asset","nameLocation":"366:5:10","nodeType":"VariableDeclaration","scope":198,"src":"353:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_memory_ptr","typeString":"struct Asset"},"typeName":{"id":156,"nodeType":"UserDefinedTypeName","pathNode":{"id":155,"name":"Asset","nameLocations":["353:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"353:5:10"},"referencedDeclaration":57,"src":"353:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_storage_ptr","typeString":"struct Asset"}},"visibility":"internal"}],"id":162,"initialValue":{"arguments":[{"id":159,"name":"assetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"380:9:10","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},{"id":160,"name":"assetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"391:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},{"typeIdentifier":"t_address","typeString":"address"}],"id":158,"name":"Asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"374:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Asset_$57_storage_ptr_$","typeString":"type(struct Asset storage pointer)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"374:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_memory_ptr","typeString":"struct Asset memory"}},"nodeType":"VariableDeclarationStatement","src":"353:51:10"},{"assignments":[167],"declarations":[{"constant":false,"id":167,"mutability":"mutable","name":"ouputAssetAmounts","nameLocation":"431:17:10","nodeType":"VariableDeclaration","scope":198,"src":"410:38:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount[]"},"typeName":{"baseType":{"id":165,"nodeType":"UserDefinedTypeName","pathNode":{"id":164,"name":"AssetAmount","nameLocations":["410:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"410:11:10"},"referencedDeclaration":66,"src":"410:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":166,"nodeType":"ArrayTypeName","src":"410:13:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}},"visibility":"internal"}],"id":174,"initialValue":{"arguments":[{"hexValue":"31","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"469:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"451:17:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct AssetAmount memory[] memory)"},"typeName":{"baseType":{"id":169,"nodeType":"UserDefinedTypeName","pathNode":{"id":168,"name":"AssetAmount","nameLocations":["455:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"455:11:10"},"referencedDeclaration":66,"src":"455:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":170,"nodeType":"ArrayTypeName","src":"455:13:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}}},"id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"451:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"410:61:10"},{"expression":{"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":175,"name":"ouputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"477:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},"id":177,"indexExpression":{"hexValue":"30","id":176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"495:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"477:20:10","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":179,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"512:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_memory_ptr","typeString":"struct Asset memory"}},{"id":180,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"519:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Asset_$57_memory_ptr","typeString":"struct Asset memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":178,"name":"AssetAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"500:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AssetAmount_$66_storage_ptr_$","typeString":"type(struct AssetAmount storage pointer)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"500:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"src":"477:49:10","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":183,"nodeType":"ExpressionStatement","src":"477:49:10"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"576:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"558:17:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct AssetAmount memory[] memory)"},"typeName":{"baseType":{"id":186,"nodeType":"UserDefinedTypeName","pathNode":{"id":185,"name":"AssetAmount","nameLocations":["562:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"562:11:10"},"referencedDeclaration":66,"src":"562:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":187,"nodeType":"ArrayTypeName","src":"562:13:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}}},"id":190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"558:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},{"id":191,"name":"ouputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"580:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},{"id":193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"599:2:10","subExpression":{"hexValue":"32","id":192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"600:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_2_by_1","typeString":"int_const -2"}},{"id":195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"603:2:10","subExpression":{"hexValue":"31","id":194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"604:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"},{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"},{"typeIdentifier":"t_rational_minus_2_by_1","typeString":"int_const -2"},{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":184,"name":"WorkflowStepResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"539:18:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_WorkflowStepResult_$138_storage_ptr_$","typeString":"type(struct WorkflowStepResult storage pointer)"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"539:67:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult memory"}},"functionReturnParameters":154,"id":197,"nodeType":"Return","src":"532:74:10"}]},"id":199,"implemented":true,"kind":"function","modifiers":[],"name":"singleAssetResult","nameLocation":"220:17:10","nodeType":"FunctionDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"assetType","nameLocation":"248:9:10","nodeType":"VariableDeclaration","scope":199,"src":"238:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},"typeName":{"id":144,"nodeType":"UserDefinedTypeName","pathNode":{"id":143,"name":"AssetType","nameLocations":["238:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":72,"src":"238:9:10"},"referencedDeclaration":72,"src":"238:9:10","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},"visibility":"internal"},{"constant":false,"id":147,"mutability":"mutable","name":"assetAddress","nameLocation":"267:12:10","nodeType":"VariableDeclaration","scope":199,"src":"259:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":146,"name":"address","nodeType":"ElementaryTypeName","src":"259:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":149,"mutability":"mutable","name":"amount","nameLocation":"289:6:10","nodeType":"VariableDeclaration","scope":199,"src":"281:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint256","nodeType":"ElementaryTypeName","src":"281:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"237:59:10"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"320:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult"},"typeName":{"id":152,"nodeType":"UserDefinedTypeName","pathNode":{"id":151,"name":"WorkflowStepResult","nameLocations":["320:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":138,"src":"320:18:10"},"referencedDeclaration":138,"src":"320:18:10","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_storage_ptr","typeString":"struct WorkflowStepResult"}},"visibility":"internal"}],"src":"319:27:10"},"scope":235,"src":"211:400:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":216,"nodeType":"Block","src":"730:74:10","statements":[{"expression":{"arguments":[{"expression":{"id":210,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"761:9:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$72_$","typeString":"type(enum AssetType)"}},"id":211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"771:5:10","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":70,"src":"761:15:10","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},{"id":212,"name":"assetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"778:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":213,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"792:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":209,"name":"singleAssetResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"743:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_AssetType_$72_$_t_address_$_t_uint256_$returns$_t_struct$_WorkflowStepResult_$138_memory_ptr_$","typeString":"function (enum AssetType,address,uint256) pure returns (struct WorkflowStepResult memory)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"743:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult memory"}},"functionReturnParameters":208,"id":215,"nodeType":"Return","src":"736:63:10"}]},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"singleTokenResult","nameLocation":"624:17:10","nodeType":"FunctionDefinition","parameters":{"id":204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"assetAddress","nameLocation":"650:12:10","nodeType":"VariableDeclaration","scope":217,"src":"642:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"642:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":203,"mutability":"mutable","name":"amount","nameLocation":"672:6:10","nodeType":"VariableDeclaration","scope":217,"src":"664:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":202,"name":"uint256","nodeType":"ElementaryTypeName","src":"664:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"641:38:10"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":217,"src":"703:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult"},"typeName":{"id":206,"nodeType":"UserDefinedTypeName","pathNode":{"id":205,"name":"WorkflowStepResult","nameLocations":["703:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":138,"src":"703:18:10"},"referencedDeclaration":138,"src":"703:18:10","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_storage_ptr","typeString":"struct WorkflowStepResult"}},"visibility":"internal"}],"src":"702:27:10"},"scope":235,"src":"615:189:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":233,"nodeType":"Block","src":"890:68:10","statements":[{"expression":{"arguments":[{"expression":{"id":224,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"921:9:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$72_$","typeString":"type(enum AssetType)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"931:6:10","memberName":"Native","nodeType":"MemberAccess","referencedDeclaration":69,"src":"921:16:10","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},{"arguments":[{"hexValue":"30","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"947:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"939:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:10","typeDescriptions":{}}},"id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"939:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":223,"name":"singleAssetResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"903:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_AssetType_$72_$_t_address_$_t_uint256_$returns$_t_struct$_WorkflowStepResult_$138_memory_ptr_$","typeString":"function (enum AssetType,address,uint256) pure returns (struct WorkflowStepResult memory)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult memory"}},"functionReturnParameters":222,"id":232,"nodeType":"Return","src":"896:57:10"}]},"id":234,"implemented":true,"kind":"function","modifiers":[],"name":"noOutputAssetsResult","nameLocation":"817:20:10","nodeType":"FunctionDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[],"src":"837:2:10"},"returnParameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":234,"src":"863:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult"},"typeName":{"id":220,"nodeType":"UserDefinedTypeName","pathNode":{"id":219,"name":"WorkflowStepResult","nameLocations":["863:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":138,"src":"863:18:10"},"referencedDeclaration":138,"src":"863:18:10","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_storage_ptr","typeString":"struct WorkflowStepResult"}},"visibility":"internal"}],"src":"862:27:10"},"scope":235,"src":"808:150:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":236,"src":"182:778:10","usedErrors":[]}],"src":"32:929:10"},"id":10},"@freemarket/step-sdk/contracts/LibStepResultBuilder.sol":{"ast":{"absolutePath":"@freemarket/step-sdk/contracts/LibStepResultBuilder.sol","exportedSymbols":{"Asset":[57],"AssetAmount":[66],"AssetType":[72],"LibStepResultBuilder":[536],"StepResultBuilder":[247],"WorkflowStepResult":[138]},"id":537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":237,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:11"},{"absolutePath":"@freemarket/core/contracts/model/AssetType.sol","file":"@freemarket/core/contracts/model/AssetType.sol","id":238,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":537,"sourceUnit":73,"src":"58:56:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@freemarket/core/contracts/model/WorkflowStepResult.sol","file":"@freemarket/core/contracts/model/WorkflowStepResult.sol","id":239,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":537,"sourceUnit":139,"src":"115:65:11","symbolAliases":[],"unitAlias":""},{"canonicalName":"StepResultBuilder","id":247,"members":[{"constant":false,"id":241,"mutability":"mutable","name":"inputIndex","nameLocation":"219:10:11","nodeType":"VariableDeclaration","scope":247,"src":"211:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"211:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"outputIndex","nameLocation":"241:11:11","nodeType":"VariableDeclaration","scope":247,"src":"233:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"233:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"result","nameLocation":"275:6:11","nodeType":"VariableDeclaration","scope":247,"src":"256:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_storage_ptr","typeString":"struct WorkflowStepResult"},"typeName":{"id":245,"nodeType":"UserDefinedTypeName","pathNode":{"id":244,"name":"WorkflowStepResult","nameLocations":["256:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":138,"src":"256:18:11"},"referencedDeclaration":138,"src":"256:18:11","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_storage_ptr","typeString":"struct WorkflowStepResult"}},"visibility":"internal"}],"name":"StepResultBuilder","nameLocation":"189:17:11","nodeType":"StructDefinition","scope":537,"src":"182:102:11","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"LibStepResultBuilder","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":536,"linearizedBaseContracts":[536],"name":"LibStepResultBuilder","nameLocation":"294:20:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":294,"nodeType":"Block","src":"435:270:11","statements":[{"assignments":[261],"declarations":[{"constant":false,"id":261,"mutability":"mutable","name":"inputAssetAmounts","nameLocation":"462:17:11","nodeType":"VariableDeclaration","scope":294,"src":"441:38:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount[]"},"typeName":{"baseType":{"id":259,"nodeType":"UserDefinedTypeName","pathNode":{"id":258,"name":"AssetAmount","nameLocations":["441:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"441:11:11"},"referencedDeclaration":66,"src":"441:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":260,"nodeType":"ArrayTypeName","src":"441:13:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}},"visibility":"internal"}],"id":268,"initialValue":{"arguments":[{"id":266,"name":"inputAssetCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"500:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"482:17:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct AssetAmount memory[] memory)"},"typeName":{"baseType":{"id":263,"nodeType":"UserDefinedTypeName","pathNode":{"id":262,"name":"AssetAmount","nameLocations":["486:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"486:11:11"},"referencedDeclaration":66,"src":"486:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":264,"nodeType":"ArrayTypeName","src":"486:13:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"482:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"441:75:11"},{"assignments":[273],"declarations":[{"constant":false,"id":273,"mutability":"mutable","name":"ouputAssetAmounts","nameLocation":"543:17:11","nodeType":"VariableDeclaration","scope":294,"src":"522:38:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount[]"},"typeName":{"baseType":{"id":271,"nodeType":"UserDefinedTypeName","pathNode":{"id":270,"name":"AssetAmount","nameLocations":["522:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"522:11:11"},"referencedDeclaration":66,"src":"522:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":272,"nodeType":"ArrayTypeName","src":"522:13:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}},"visibility":"internal"}],"id":280,"initialValue":{"arguments":[{"id":278,"name":"outputAssetCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"581:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"563:17:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct AssetAmount memory[] memory)"},"typeName":{"baseType":{"id":275,"nodeType":"UserDefinedTypeName","pathNode":{"id":274,"name":"AssetAmount","nameLocations":["567:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"567:11:11"},"referencedDeclaration":66,"src":"567:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":276,"nodeType":"ArrayTypeName","src":"567:13:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"563:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"522:76:11"},{"expression":{"arguments":[{"hexValue":"30","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"629:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"632:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"id":285,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"654:17:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},{"id":286,"name":"ouputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"673:17:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},{"id":288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"692:2:11","subExpression":{"hexValue":"32","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"693:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_2_by_1","typeString":"int_const -2"}},{"id":290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"696:2:11","subExpression":{"hexValue":"31","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"697:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"},{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"},{"typeIdentifier":"t_rational_minus_2_by_1","typeString":"int_const -2"},{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":284,"name":"WorkflowStepResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"635:18:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_WorkflowStepResult_$138_storage_ptr_$","typeString":"type(struct WorkflowStepResult storage pointer)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"635:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult memory"}],"id":281,"name":"StepResultBuilder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"611:17:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StepResultBuilder_$247_storage_ptr_$","typeString":"type(struct StepResultBuilder storage pointer)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"611:89:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"functionReturnParameters":256,"id":293,"nodeType":"Return","src":"604:96:11"}]},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"create","nameLocation":"328:6:11","nodeType":"FunctionDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"inputAssetCount","nameLocation":"343:15:11","nodeType":"VariableDeclaration","scope":295,"src":"335:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"335:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":251,"mutability":"mutable","name":"outputAssetCount","nameLocation":"368:16:11","nodeType":"VariableDeclaration","scope":295,"src":"360:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"334:51:11"},"returnParameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"409:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":254,"nodeType":"UserDefinedTypeName","pathNode":{"id":253,"name":"StepResultBuilder","nameLocations":["409:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"409:17:11"},"referencedDeclaration":247,"src":"409:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"}],"src":"408:26:11"},"scope":536,"src":"319:386:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":329,"nodeType":"Block","src":"869:145:11","statements":[{"expression":{"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"expression":{"id":308,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"875:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"883:6:11","memberName":"result","nodeType":"MemberAccess","referencedDeclaration":246,"src":"875:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult memory"}},"id":315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"890:17:11","memberName":"inputAssetAmounts","nodeType":"MemberAccess","referencedDeclaration":129,"src":"875:32:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},"id":316,"indexExpression":{"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"908:20:11","subExpression":{"expression":{"id":311,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"908:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"id":312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"916:10:11","memberName":"inputIndex","nodeType":"MemberAccess","referencedDeclaration":241,"src":"908:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"875:54:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":319,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"950:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$72_$","typeString":"type(enum AssetType)"}},"id":320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"960:5:11","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":70,"src":"950:15:11","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},{"id":321,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"967:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},{"typeIdentifier":"t_address","typeString":"address"}],"id":318,"name":"Asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"944:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Asset_$57_storage_ptr_$","typeString":"type(struct Asset storage pointer)"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"944:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_memory_ptr","typeString":"struct Asset memory"}},{"id":323,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"982:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Asset_$57_memory_ptr","typeString":"struct Asset memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":317,"name":"AssetAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"932:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AssetAmount_$66_storage_ptr_$","typeString":"type(struct AssetAmount storage pointer)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"932:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"src":"875:114:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":326,"nodeType":"ExpressionStatement","src":"875:114:11"},{"expression":{"id":327,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"1002:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"functionReturnParameters":307,"id":328,"nodeType":"Return","src":"995:14:11"}]},"id":330,"implemented":true,"kind":"function","modifiers":[],"name":"addInputToken","nameLocation":"718:13:11","nodeType":"FunctionDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"builder","nameLocation":"762:7:11","nodeType":"VariableDeclaration","scope":330,"src":"737:32:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":297,"nodeType":"UserDefinedTypeName","pathNode":{"id":296,"name":"StepResultBuilder","nameLocations":["737:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"737:17:11"},"referencedDeclaration":247,"src":"737:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"},{"constant":false,"id":300,"mutability":"mutable","name":"tokenAddress","nameLocation":"783:12:11","nodeType":"VariableDeclaration","scope":330,"src":"775:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"amount","nameLocation":"809:6:11","nodeType":"VariableDeclaration","scope":330,"src":"801:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"801:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"731:88:11"},"returnParameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":330,"src":"843:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":305,"nodeType":"UserDefinedTypeName","pathNode":{"id":304,"name":"StepResultBuilder","nameLocations":["843:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"843:17:11"},"referencedDeclaration":247,"src":"843:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"}],"src":"842:26:11"},"scope":536,"src":"709:305:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"1174:99:11","statements":[{"expression":{"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"expression":{"id":342,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"1180:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"id":348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1188:6:11","memberName":"result","nodeType":"MemberAccess","referencedDeclaration":246,"src":"1180:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult memory"}},"id":349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1195:17:11","memberName":"inputAssetAmounts","nodeType":"MemberAccess","referencedDeclaration":129,"src":"1180:32:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},"id":350,"indexExpression":{"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1213:20:11","subExpression":{"expression":{"id":345,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"1213:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"id":346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1221:10:11","memberName":"inputIndex","nodeType":"MemberAccess","referencedDeclaration":241,"src":"1213:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1180:54:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":351,"name":"assetAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"1237:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"src":"1180:68:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":353,"nodeType":"ExpressionStatement","src":"1180:68:11"},{"expression":{"id":354,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"1261:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"functionReturnParameters":341,"id":355,"nodeType":"Return","src":"1254:14:11"}]},"id":357,"implemented":true,"kind":"function","modifiers":[],"name":"addInputAssetAmount","nameLocation":"1027:19:11","nodeType":"FunctionDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"builder","nameLocation":"1077:7:11","nodeType":"VariableDeclaration","scope":357,"src":"1052:32:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":332,"nodeType":"UserDefinedTypeName","pathNode":{"id":331,"name":"StepResultBuilder","nameLocations":["1052:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"1052:17:11"},"referencedDeclaration":247,"src":"1052:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"assetAmount","nameLocation":"1109:11:11","nodeType":"VariableDeclaration","scope":357,"src":"1090:30:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount"},"typeName":{"id":335,"nodeType":"UserDefinedTypeName","pathNode":{"id":334,"name":"AssetAmount","nameLocations":["1090:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"1090:11:11"},"referencedDeclaration":66,"src":"1090:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"visibility":"internal"}],"src":"1046:78:11"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":357,"src":"1148:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":339,"nodeType":"UserDefinedTypeName","pathNode":{"id":338,"name":"StepResultBuilder","nameLocations":["1148:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"1148:17:11"},"referencedDeclaration":247,"src":"1148:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"}],"src":"1147:26:11"},"scope":536,"src":"1018:255:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":391,"nodeType":"Block","src":"1438:147:11","statements":[{"expression":{"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"expression":{"id":370,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"1444:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"id":376,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1452:6:11","memberName":"result","nodeType":"MemberAccess","referencedDeclaration":246,"src":"1444:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult memory"}},"id":377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1459:18:11","memberName":"outputAssetAmounts","nodeType":"MemberAccess","referencedDeclaration":133,"src":"1444:33:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},"id":378,"indexExpression":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1478:21:11","subExpression":{"expression":{"id":373,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"1478:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"id":374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1486:11:11","memberName":"outputIndex","nodeType":"MemberAccess","referencedDeclaration":243,"src":"1478:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1444:56:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":381,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"1521:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$72_$","typeString":"type(enum AssetType)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1531:5:11","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":70,"src":"1521:15:11","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},{"id":383,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"1538:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},{"typeIdentifier":"t_address","typeString":"address"}],"id":380,"name":"Asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"1515:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Asset_$57_storage_ptr_$","typeString":"type(struct Asset storage pointer)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1515:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_memory_ptr","typeString":"struct Asset memory"}},{"id":385,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"1553:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Asset_$57_memory_ptr","typeString":"struct Asset memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":379,"name":"AssetAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"1503:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AssetAmount_$66_storage_ptr_$","typeString":"type(struct AssetAmount storage pointer)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1503:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"src":"1444:116:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":388,"nodeType":"ExpressionStatement","src":"1444:116:11"},{"expression":{"id":389,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"1573:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"functionReturnParameters":369,"id":390,"nodeType":"Return","src":"1566:14:11"}]},"id":392,"implemented":true,"kind":"function","modifiers":[],"name":"addOutputToken","nameLocation":"1286:14:11","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":360,"mutability":"mutable","name":"builder","nameLocation":"1331:7:11","nodeType":"VariableDeclaration","scope":392,"src":"1306:32:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":359,"nodeType":"UserDefinedTypeName","pathNode":{"id":358,"name":"StepResultBuilder","nameLocations":["1306:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"1306:17:11"},"referencedDeclaration":247,"src":"1306:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"tokenAddress","nameLocation":"1352:12:11","nodeType":"VariableDeclaration","scope":392,"src":"1344:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":361,"name":"address","nodeType":"ElementaryTypeName","src":"1344:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"amount","nameLocation":"1378:6:11","nodeType":"VariableDeclaration","scope":392,"src":"1370:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"1370:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1300:88:11"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":392,"src":"1412:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":367,"nodeType":"UserDefinedTypeName","pathNode":{"id":366,"name":"StepResultBuilder","nameLocations":["1412:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"1412:17:11"},"referencedDeclaration":247,"src":"1412:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"}],"src":"1411:26:11"},"scope":536,"src":"1277:308:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":427,"nodeType":"Block","src":"1712:144:11","statements":[{"expression":{"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"expression":{"id":403,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"1718:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"id":409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:11","memberName":"result","nodeType":"MemberAccess","referencedDeclaration":246,"src":"1718:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult memory"}},"id":410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1733:17:11","memberName":"inputAssetAmounts","nodeType":"MemberAccess","referencedDeclaration":129,"src":"1718:32:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},"id":411,"indexExpression":{"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1751:20:11","subExpression":{"expression":{"id":406,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"1751:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"id":407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1759:10:11","memberName":"inputIndex","nodeType":"MemberAccess","referencedDeclaration":241,"src":"1751:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1718:54:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":414,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"1793:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$72_$","typeString":"type(enum AssetType)"}},"id":415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1803:6:11","memberName":"Native","nodeType":"MemberAccess","referencedDeclaration":69,"src":"1793:16:11","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},{"arguments":[{"hexValue":"30","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1819:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1811:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"1811:7:11","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1811:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},{"typeIdentifier":"t_address","typeString":"address"}],"id":413,"name":"Asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"1787:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Asset_$57_storage_ptr_$","typeString":"type(struct Asset storage pointer)"}},"id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1787:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_memory_ptr","typeString":"struct Asset memory"}},{"id":421,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1824:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Asset_$57_memory_ptr","typeString":"struct Asset memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":412,"name":"AssetAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"1775:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AssetAmount_$66_storage_ptr_$","typeString":"type(struct AssetAmount storage pointer)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1775:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"src":"1718:113:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":424,"nodeType":"ExpressionStatement","src":"1718:113:11"},{"expression":{"id":425,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"1844:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"functionReturnParameters":402,"id":426,"nodeType":"Return","src":"1837:14:11"}]},"id":428,"implemented":true,"kind":"function","modifiers":[],"name":"addInputNative","nameLocation":"1598:14:11","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"builder","nameLocation":"1638:7:11","nodeType":"VariableDeclaration","scope":428,"src":"1613:32:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":394,"nodeType":"UserDefinedTypeName","pathNode":{"id":393,"name":"StepResultBuilder","nameLocations":["1613:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"1613:17:11"},"referencedDeclaration":247,"src":"1613:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"amount","nameLocation":"1655:6:11","nodeType":"VariableDeclaration","scope":428,"src":"1647:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1647:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1612:50:11"},"returnParameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":428,"src":"1686:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":400,"nodeType":"UserDefinedTypeName","pathNode":{"id":399,"name":"StepResultBuilder","nameLocations":["1686:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"1686:17:11"},"referencedDeclaration":247,"src":"1686:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"}],"src":"1685:26:11"},"scope":536,"src":"1589:267:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":463,"nodeType":"Block","src":"1984:146:11","statements":[{"expression":{"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"expression":{"id":439,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"1990:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"id":445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1998:6:11","memberName":"result","nodeType":"MemberAccess","referencedDeclaration":246,"src":"1990:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult memory"}},"id":446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2005:18:11","memberName":"outputAssetAmounts","nodeType":"MemberAccess","referencedDeclaration":133,"src":"1990:33:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},"id":447,"indexExpression":{"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2024:21:11","subExpression":{"expression":{"id":442,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2024:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"id":443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2032:11:11","memberName":"outputIndex","nodeType":"MemberAccess","referencedDeclaration":243,"src":"2024:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1990:56:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":450,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"2067:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$72_$","typeString":"type(enum AssetType)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2077:6:11","memberName":"Native","nodeType":"MemberAccess","referencedDeclaration":69,"src":"2067:16:11","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},{"arguments":[{"hexValue":"30","id":454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2093:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2085:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"2085:7:11","typeDescriptions":{}}},"id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2085:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},{"typeIdentifier":"t_address","typeString":"address"}],"id":449,"name":"Asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"2061:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Asset_$57_storage_ptr_$","typeString":"type(struct Asset storage pointer)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2061:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_memory_ptr","typeString":"struct Asset memory"}},{"id":457,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"2098:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Asset_$57_memory_ptr","typeString":"struct Asset memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":448,"name":"AssetAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"2049:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AssetAmount_$66_storage_ptr_$","typeString":"type(struct AssetAmount storage pointer)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2049:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"src":"1990:115:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":460,"nodeType":"ExpressionStatement","src":"1990:115:11"},{"expression":{"id":461,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2118:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"functionReturnParameters":438,"id":462,"nodeType":"Return","src":"2111:14:11"}]},"id":464,"implemented":true,"kind":"function","modifiers":[],"name":"addOutputNative","nameLocation":"1869:15:11","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"builder","nameLocation":"1910:7:11","nodeType":"VariableDeclaration","scope":464,"src":"1885:32:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":430,"nodeType":"UserDefinedTypeName","pathNode":{"id":429,"name":"StepResultBuilder","nameLocations":["1885:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"1885:17:11"},"referencedDeclaration":247,"src":"1885:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"amount","nameLocation":"1927:6:11","nodeType":"VariableDeclaration","scope":464,"src":"1919:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"1919:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1884:50:11"},"returnParameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":464,"src":"1958:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":436,"nodeType":"UserDefinedTypeName","pathNode":{"id":435,"name":"StepResultBuilder","nameLocations":["1958:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"1958:17:11"},"referencedDeclaration":247,"src":"1958:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"}],"src":"1957:26:11"},"scope":536,"src":"1860:270:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"2291:101:11","statements":[{"expression":{"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"expression":{"id":476,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"2297:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"id":482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2305:6:11","memberName":"result","nodeType":"MemberAccess","referencedDeclaration":246,"src":"2297:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult memory"}},"id":483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2312:18:11","memberName":"outputAssetAmounts","nodeType":"MemberAccess","referencedDeclaration":133,"src":"2297:33:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},"id":484,"indexExpression":{"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2331:21:11","subExpression":{"expression":{"id":479,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"2331:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"id":480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2339:11:11","memberName":"outputIndex","nodeType":"MemberAccess","referencedDeclaration":243,"src":"2331:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2297:56:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":485,"name":"assetAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"2356:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"src":"2297:70:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":487,"nodeType":"ExpressionStatement","src":"2297:70:11"},{"expression":{"id":488,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"2380:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"functionReturnParameters":475,"id":489,"nodeType":"Return","src":"2373:14:11"}]},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"addOutputAssetAmount","nameLocation":"2143:20:11","nodeType":"FunctionDefinition","parameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":467,"mutability":"mutable","name":"builder","nameLocation":"2194:7:11","nodeType":"VariableDeclaration","scope":491,"src":"2169:32:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":466,"nodeType":"UserDefinedTypeName","pathNode":{"id":465,"name":"StepResultBuilder","nameLocations":["2169:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"2169:17:11"},"referencedDeclaration":247,"src":"2169:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"},{"constant":false,"id":470,"mutability":"mutable","name":"assetAmount","nameLocation":"2226:11:11","nodeType":"VariableDeclaration","scope":491,"src":"2207:30:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount"},"typeName":{"id":469,"nodeType":"UserDefinedTypeName","pathNode":{"id":468,"name":"AssetAmount","nameLocations":["2207:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"2207:11:11"},"referencedDeclaration":66,"src":"2207:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"visibility":"internal"}],"src":"2163:78:11"},"returnParameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":491,"src":"2265:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":473,"nodeType":"UserDefinedTypeName","pathNode":{"id":472,"name":"StepResultBuilder","nameLocations":["2265:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"2265:17:11"},"referencedDeclaration":247,"src":"2265:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"}],"src":"2264:26:11"},"scope":536,"src":"2134:258:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":512,"nodeType":"Block","src":"2526:75:11","statements":[{"expression":{"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":502,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"2532:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"id":505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2540:6:11","memberName":"result","nodeType":"MemberAccess","referencedDeclaration":246,"src":"2532:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult memory"}},"id":506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2547:13:11","memberName":"nextStepIndex","nodeType":"MemberAccess","referencedDeclaration":135,"src":"2532:28:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":507,"name":"nextStepIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"2563:13:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"2532:44:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":509,"nodeType":"ExpressionStatement","src":"2532:44:11"},{"expression":{"id":510,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"2589:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"functionReturnParameters":501,"id":511,"nodeType":"Return","src":"2582:14:11"}]},"id":513,"implemented":true,"kind":"function","modifiers":[],"name":"setNextStepIndex","nameLocation":"2405:16:11","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"builder","nameLocation":"2447:7:11","nodeType":"VariableDeclaration","scope":513,"src":"2422:32:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":493,"nodeType":"UserDefinedTypeName","pathNode":{"id":492,"name":"StepResultBuilder","nameLocations":["2422:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"2422:17:11"},"referencedDeclaration":247,"src":"2422:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"nextStepIndex","nameLocation":"2462:13:11","nodeType":"VariableDeclaration","scope":513,"src":"2456:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":495,"name":"int16","nodeType":"ElementaryTypeName","src":"2456:5:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"2421:55:11"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":513,"src":"2500:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":499,"nodeType":"UserDefinedTypeName","pathNode":{"id":498,"name":"StepResultBuilder","nameLocations":["2500:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"2500:17:11"},"referencedDeclaration":247,"src":"2500:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"}],"src":"2499:26:11"},"scope":536,"src":"2396:205:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":534,"nodeType":"Block","src":"2725:65:11","statements":[{"expression":{"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":524,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"2731:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"id":527,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2739:6:11","memberName":"result","nodeType":"MemberAccess","referencedDeclaration":246,"src":"2731:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult memory"}},"id":528,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2746:3:11","memberName":"fee","nodeType":"MemberAccess","referencedDeclaration":137,"src":"2731:18:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":529,"name":"feeInDeciBips","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"2752:13:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"2731:34:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":531,"nodeType":"ExpressionStatement","src":"2731:34:11"},{"expression":{"id":532,"name":"builder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"2778:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder memory"}},"functionReturnParameters":523,"id":533,"nodeType":"Return","src":"2771:14:11"}]},"id":535,"implemented":true,"kind":"function","modifiers":[],"name":"setFee","nameLocation":"2614:6:11","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"builder","nameLocation":"2646:7:11","nodeType":"VariableDeclaration","scope":535,"src":"2621:32:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":515,"nodeType":"UserDefinedTypeName","pathNode":{"id":514,"name":"StepResultBuilder","nameLocations":["2621:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"2621:17:11"},"referencedDeclaration":247,"src":"2621:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"feeInDeciBips","nameLocation":"2661:13:11","nodeType":"VariableDeclaration","scope":535,"src":"2655:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":517,"name":"int24","nodeType":"ElementaryTypeName","src":"2655:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2620:55:11"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":535,"src":"2699:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_memory_ptr","typeString":"struct StepResultBuilder"},"typeName":{"id":521,"nodeType":"UserDefinedTypeName","pathNode":{"id":520,"name":"StepResultBuilder","nameLocations":["2699:17:11"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"2699:17:11"},"referencedDeclaration":247,"src":"2699:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}},"visibility":"internal"}],"src":"2698:26:11"},"scope":536,"src":"2605:185:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":537,"src":"286:2506:11","usedErrors":[]}],"src":"32:2761:11"},"id":11},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1895],"ERC20":[1123],"IERC20":[1201],"IERC20Metadata":[1226]},"id":1124,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":538,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":539,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1124,"sourceUnit":1202,"src":"130:22:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1124,"sourceUnit":1227,"src":"153:41:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":541,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1124,"sourceUnit":1896,"src":"195:33:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":543,"name":"Context","nameLocations":["1419:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1895,"src":"1419:7:12"},"id":544,"nodeType":"InheritanceSpecifier","src":"1419:7:12"},{"baseName":{"id":545,"name":"IERC20","nameLocations":["1428:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"1428:6:12"},"id":546,"nodeType":"InheritanceSpecifier","src":"1428:6:12"},{"baseName":{"id":547,"name":"IERC20Metadata","nameLocations":["1436:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":1226,"src":"1436:14:12"},"id":548,"nodeType":"InheritanceSpecifier","src":"1436:14:12"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"230:1170:12","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1123,"linearizedBaseContracts":[1123,1226,1201,1895],"name":"ERC20","nameLocation":"1410:5:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":552,"mutability":"mutable","name":"_balances","nameLocation":"1493:9:12","nodeType":"VariableDeclaration","scope":1123,"src":"1457:45:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":551,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1457:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":558,"mutability":"mutable","name":"_allowances","nameLocation":"1565:11:12","nodeType":"VariableDeclaration","scope":1123,"src":"1509:67:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":557,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1509:47:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":556,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":554,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1528:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":560,"mutability":"mutable","name":"_totalSupply","nameLocation":"1599:12:12","nodeType":"VariableDeclaration","scope":1123,"src":"1583:28:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":562,"mutability":"mutable","name":"_name","nameLocation":"1633:5:12","nodeType":"VariableDeclaration","scope":1123,"src":"1618:20:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":561,"name":"string","nodeType":"ElementaryTypeName","src":"1618:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":564,"mutability":"mutable","name":"_symbol","nameLocation":"1659:7:12","nodeType":"VariableDeclaration","scope":1123,"src":"1644:22:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":563,"name":"string","nodeType":"ElementaryTypeName","src":"1644:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":580,"nodeType":"Block","src":"2032:57:12","statements":[{"expression":{"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":572,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2042:5:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":573,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"2050:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2042:13:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":575,"nodeType":"ExpressionStatement","src":"2042:13:12"},{"expression":{"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":576,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"2065:7:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":577,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"2075:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2065:17:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":579,"nodeType":"ExpressionStatement","src":"2065:17:12"}]},"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"1673:298:12","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":581,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"name_","nameLocation":"2002:5:12","nodeType":"VariableDeclaration","scope":581,"src":"1988:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":566,"name":"string","nodeType":"ElementaryTypeName","src":"1988:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"symbol_","nameLocation":"2023:7:12","nodeType":"VariableDeclaration","scope":581,"src":"2009:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":568,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1987:44:12"},"returnParameters":{"id":571,"nodeType":"ParameterList","parameters":[],"src":"2032:0:12"},"scope":1123,"src":"1976:113:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1213],"body":{"id":590,"nodeType":"Block","src":"2223:29:12","statements":[{"expression":{"id":588,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2240:5:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":587,"id":589,"nodeType":"Return","src":"2233:12:12"}]},"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"2095:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":591,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2163:4:12","nodeType":"FunctionDefinition","overrides":{"id":584,"nodeType":"OverrideSpecifier","overrides":[],"src":"2190:8:12"},"parameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"2167:2:12"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":591,"src":"2208:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":585,"name":"string","nodeType":"ElementaryTypeName","src":"2208:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2207:15:12"},"scope":1123,"src":"2154:98:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1219],"body":{"id":600,"nodeType":"Block","src":"2436:31:12","statements":[{"expression":{"id":598,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"2453:7:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":597,"id":599,"nodeType":"Return","src":"2446:14:12"}]},"documentation":{"id":592,"nodeType":"StructuredDocumentation","src":"2258:102:12","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":601,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2374:6:12","nodeType":"FunctionDefinition","overrides":{"id":594,"nodeType":"OverrideSpecifier","overrides":[],"src":"2403:8:12"},"parameters":{"id":593,"nodeType":"ParameterList","parameters":[],"src":"2380:2:12"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":601,"src":"2421:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":595,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2420:15:12"},"scope":1123,"src":"2365:102:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1225],"body":{"id":610,"nodeType":"Block","src":"3156:26:12","statements":[{"expression":{"hexValue":"3138","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3173:2:12","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":607,"id":609,"nodeType":"Return","src":"3166:9:12"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"2473:613:12","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":611,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3100:8:12","nodeType":"FunctionDefinition","overrides":{"id":604,"nodeType":"OverrideSpecifier","overrides":[],"src":"3131:8:12"},"parameters":{"id":603,"nodeType":"ParameterList","parameters":[],"src":"3108:2:12"},"returnParameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":611,"src":"3149:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":605,"name":"uint8","nodeType":"ElementaryTypeName","src":"3149:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3148:7:12"},"scope":1123,"src":"3091:91:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1150],"body":{"id":620,"nodeType":"Block","src":"3312:36:12","statements":[{"expression":{"id":618,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"3329:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":617,"id":619,"nodeType":"Return","src":"3322:19:12"}]},"documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"3188:49:12","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":621,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3251:11:12","nodeType":"FunctionDefinition","overrides":{"id":614,"nodeType":"OverrideSpecifier","overrides":[],"src":"3285:8:12"},"parameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"3262:2:12"},"returnParameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"3303:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3302:9:12"},"scope":1123,"src":"3242:106:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1158],"body":{"id":634,"nodeType":"Block","src":"3489:42:12","statements":[{"expression":{"baseExpression":{"id":630,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"3506:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":632,"indexExpression":{"id":631,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"3516:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":629,"id":633,"nodeType":"Return","src":"3499:25:12"}]},"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"3354:47:12","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":635,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3415:9:12","nodeType":"FunctionDefinition","overrides":{"id":626,"nodeType":"OverrideSpecifier","overrides":[],"src":"3462:8:12"},"parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"account","nameLocation":"3433:7:12","nodeType":"VariableDeclaration","scope":635,"src":"3425:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"3425:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3424:17:12"},"returnParameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":635,"src":"3480:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"3480:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3479:9:12"},"scope":1123,"src":"3406:125:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1168],"body":{"id":659,"nodeType":"Block","src":"3812:104:12","statements":[{"assignments":[647],"declarations":[{"constant":false,"id":647,"mutability":"mutable","name":"owner","nameLocation":"3830:5:12","nodeType":"VariableDeclaration","scope":659,"src":"3822:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"3822:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":650,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":648,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"3838:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3838:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3822:28:12"},{"expression":{"arguments":[{"id":652,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"3870:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":653,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"3877:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":654,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"3881:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":651,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"3860:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3860:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":656,"nodeType":"ExpressionStatement","src":"3860:28:12"},{"expression":{"hexValue":"74727565","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3905:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":645,"id":658,"nodeType":"Return","src":"3898:11:12"}]},"documentation":{"id":636,"nodeType":"StructuredDocumentation","src":"3537:185:12","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":660,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3736:8:12","nodeType":"FunctionDefinition","overrides":{"id":642,"nodeType":"OverrideSpecifier","overrides":[],"src":"3788:8:12"},"parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"to","nameLocation":"3753:2:12","nodeType":"VariableDeclaration","scope":660,"src":"3745:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"amount","nameLocation":"3765:6:12","nodeType":"VariableDeclaration","scope":660,"src":"3757:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3744:28:12"},"returnParameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":660,"src":"3806:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":643,"name":"bool","nodeType":"ElementaryTypeName","src":"3806:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3805:6:12"},"scope":1123,"src":"3727:189:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1178],"body":{"id":677,"nodeType":"Block","src":"4072:51:12","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":671,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4089:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":673,"indexExpression":{"id":672,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"4101:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":675,"indexExpression":{"id":674,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"4108:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":670,"id":676,"nodeType":"Return","src":"4082:34:12"}]},"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"3922:47:12","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":678,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3983:9:12","nodeType":"FunctionDefinition","overrides":{"id":667,"nodeType":"OverrideSpecifier","overrides":[],"src":"4045:8:12"},"parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"owner","nameLocation":"4001:5:12","nodeType":"VariableDeclaration","scope":678,"src":"3993:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"3993:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"spender","nameLocation":"4016:7:12","nodeType":"VariableDeclaration","scope":678,"src":"4008:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3992:32:12"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"4063:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"4063:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4062:9:12"},"scope":1123,"src":"3974:149:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1188],"body":{"id":702,"nodeType":"Block","src":"4520:108:12","statements":[{"assignments":[690],"declarations":[{"constant":false,"id":690,"mutability":"mutable","name":"owner","nameLocation":"4538:5:12","nodeType":"VariableDeclaration","scope":702,"src":"4530:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":693,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":691,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"4546:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4546:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4530:28:12"},{"expression":{"arguments":[{"id":695,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"4577:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":696,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"4584:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":697,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"4593:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":694,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4568:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4568:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"ExpressionStatement","src":"4568:32:12"},{"expression":{"hexValue":"74727565","id":700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4617:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":688,"id":701,"nodeType":"Return","src":"4610:11:12"}]},"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"4129:297:12","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":703,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4440:7:12","nodeType":"FunctionDefinition","overrides":{"id":685,"nodeType":"OverrideSpecifier","overrides":[],"src":"4496:8:12"},"parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"spender","nameLocation":"4456:7:12","nodeType":"VariableDeclaration","scope":703,"src":"4448:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"amount","nameLocation":"4473:6:12","nodeType":"VariableDeclaration","scope":703,"src":"4465:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"4465:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4447:33:12"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":703,"src":"4514:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":686,"name":"bool","nodeType":"ElementaryTypeName","src":"4514:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4513:6:12"},"scope":1123,"src":"4431:197:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1200],"body":{"id":735,"nodeType":"Block","src":"5323:153:12","statements":[{"assignments":[717],"declarations":[{"constant":false,"id":717,"mutability":"mutable","name":"spender","nameLocation":"5341:7:12","nodeType":"VariableDeclaration","scope":735,"src":"5333:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":720,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":718,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"5351:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5351:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5333:30:12"},{"expression":{"arguments":[{"id":722,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"5389:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":723,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"5395:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"5404:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":721,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"5373:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":726,"nodeType":"ExpressionStatement","src":"5373:38:12"},{"expression":{"arguments":[{"id":728,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"5431:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":729,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"5437:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":730,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"5441:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":727,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"5421:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":732,"nodeType":"ExpressionStatement","src":"5421:27:12"},{"expression":{"hexValue":"74727565","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5465:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":715,"id":734,"nodeType":"Return","src":"5458:11:12"}]},"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"4634:551:12","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":736,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5199:12:12","nodeType":"FunctionDefinition","overrides":{"id":712,"nodeType":"OverrideSpecifier","overrides":[],"src":"5299:8:12"},"parameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"from","nameLocation":"5229:4:12","nodeType":"VariableDeclaration","scope":736,"src":"5221:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"5221:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"to","nameLocation":"5251:2:12","nodeType":"VariableDeclaration","scope":736,"src":"5243:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"amount","nameLocation":"5271:6:12","nodeType":"VariableDeclaration","scope":736,"src":"5263:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":709,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5211:72:12"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":736,"src":"5317:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"5317:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5316:6:12"},"scope":1123,"src":"5190:286:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":764,"nodeType":"Block","src":"5965:140:12","statements":[{"assignments":[747],"declarations":[{"constant":false,"id":747,"mutability":"mutable","name":"owner","nameLocation":"5983:5:12","nodeType":"VariableDeclaration","scope":764,"src":"5975:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"5975:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":750,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":748,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"5991:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5991:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5975:28:12"},{"expression":{"arguments":[{"id":752,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"6022:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":753,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"6029:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":755,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"6048:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":756,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"6055:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":754,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6038:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":758,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6066:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6038:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":751,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"6013:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6013:64:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":761,"nodeType":"ExpressionStatement","src":"6013:64:12"},{"expression":{"hexValue":"74727565","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6094:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":745,"id":763,"nodeType":"Return","src":"6087:11:12"}]},"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"5482:384:12","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":765,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5880:17:12","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"spender","nameLocation":"5906:7:12","nodeType":"VariableDeclaration","scope":765,"src":"5898:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"addedValue","nameLocation":"5923:10:12","nodeType":"VariableDeclaration","scope":765,"src":"5915:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"5915:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5897:37:12"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":765,"src":"5959:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":743,"name":"bool","nodeType":"ElementaryTypeName","src":"5959:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5958:6:12"},"scope":1123,"src":"5871:234:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":805,"nodeType":"Block","src":"6691:328:12","statements":[{"assignments":[776],"declarations":[{"constant":false,"id":776,"mutability":"mutable","name":"owner","nameLocation":"6709:5:12","nodeType":"VariableDeclaration","scope":805,"src":"6701:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"6701:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":779,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":777,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"6717:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6717:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6701:28:12"},{"assignments":[781],"declarations":[{"constant":false,"id":781,"mutability":"mutable","name":"currentAllowance","nameLocation":"6747:16:12","nodeType":"VariableDeclaration","scope":805,"src":"6739:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"6739:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":786,"initialValue":{"arguments":[{"id":783,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"6776:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":784,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"6783:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":782,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6766:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6766:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6739:52:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"6809:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":789,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"6829:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6846:39:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":787,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6801:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6801:85:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"6801:85:12"},{"id":802,"nodeType":"UncheckedBlock","src":"6896:95:12","statements":[{"expression":{"arguments":[{"id":795,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"6929:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":796,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"6936:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":797,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"6945:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":798,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"6964:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6945:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":794,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"6920:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6920:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":801,"nodeType":"ExpressionStatement","src":"6920:60:12"}]},{"expression":{"hexValue":"74727565","id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7008:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":774,"id":804,"nodeType":"Return","src":"7001:11:12"}]},"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"6111:476:12","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":806,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6601:17:12","nodeType":"FunctionDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"spender","nameLocation":"6627:7:12","nodeType":"VariableDeclaration","scope":806,"src":"6619:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"subtractedValue","nameLocation":"6644:15:12","nodeType":"VariableDeclaration","scope":806,"src":"6636:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"6636:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6618:42:12"},"returnParameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":806,"src":"6685:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":772,"name":"bool","nodeType":"ElementaryTypeName","src":"6685:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6684:6:12"},"scope":1123,"src":"6592:427:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":882,"nodeType":"Block","src":"7581:710:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":817,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"7599:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7607:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"7607:7:12","typeDescriptions":{}}},"id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7607:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7599:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7619:39:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":816,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7591:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7591:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":825,"nodeType":"ExpressionStatement","src":"7591:68:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":827,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7677:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7691:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7683:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"7683:7:12","typeDescriptions":{}}},"id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7677:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7695:37:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":826,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7669:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7669:64:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":835,"nodeType":"ExpressionStatement","src":"7669:64:12"},{"expression":{"arguments":[{"id":837,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"7765:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":838,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7771:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":839,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"7775:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":836,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"7744:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7744:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":841,"nodeType":"ExpressionStatement","src":"7744:38:12"},{"assignments":[843],"declarations":[{"constant":false,"id":843,"mutability":"mutable","name":"fromBalance","nameLocation":"7801:11:12","nodeType":"VariableDeclaration","scope":882,"src":"7793:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"7793:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":847,"initialValue":{"baseExpression":{"id":844,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"7815:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":846,"indexExpression":{"id":845,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"7825:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7815:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7793:37:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":849,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"7848:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":850,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"7863:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7848:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7871:40:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":848,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7840:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7840:72:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":854,"nodeType":"ExpressionStatement","src":"7840:72:12"},{"id":869,"nodeType":"UncheckedBlock","src":"7922:273:12","statements":[{"expression":{"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":855,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"7946:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":857,"indexExpression":{"id":856,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"7956:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7946:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":858,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"7964:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":859,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"7978:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7964:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7946:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":862,"nodeType":"ExpressionStatement","src":"7946:38:12"},{"expression":{"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":863,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"8161:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":865,"indexExpression":{"id":864,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"8171:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8161:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":866,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"8178:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8161:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":868,"nodeType":"ExpressionStatement","src":"8161:23:12"}]},{"eventCall":{"arguments":[{"id":871,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"8219:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":872,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"8225:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":873,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"8229:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":870,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"8210:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8210:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":875,"nodeType":"EmitStatement","src":"8205:31:12"},{"expression":{"arguments":[{"id":877,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"8267:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":878,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"8273:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":879,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"8277:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":876,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"8247:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8247:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":881,"nodeType":"ExpressionStatement","src":"8247:37:12"}]},"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"7025:443:12","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":883,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7482:9:12","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"from","nameLocation":"7509:4:12","nodeType":"VariableDeclaration","scope":883,"src":"7501:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":811,"mutability":"mutable","name":"to","nameLocation":"7531:2:12","nodeType":"VariableDeclaration","scope":883,"src":"7523:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"7523:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"amount","nameLocation":"7551:6:12","nodeType":"VariableDeclaration","scope":883,"src":"7543:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":812,"name":"uint256","nodeType":"ElementaryTypeName","src":"7543:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7491:72:12"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"7581:0:12"},"scope":1123,"src":"7473:818:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":939,"nodeType":"Block","src":"8632:470:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":892,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"8650:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8669:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8661:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"8661:7:12","typeDescriptions":{}}},"id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8661:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8650:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8673:33:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":891,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8642:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8642:65:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":900,"nodeType":"ExpressionStatement","src":"8642:65:12"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8747:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":902,"name":"address","nodeType":"ElementaryTypeName","src":"8739:7:12","typeDescriptions":{}}},"id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":906,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"8751:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":907,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"8760:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":901,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"8718:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8718:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":909,"nodeType":"ExpressionStatement","src":"8718:49:12"},{"expression":{"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":910,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"8778:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":911,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"8794:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8778:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":913,"nodeType":"ExpressionStatement","src":"8778:22:12"},{"id":920,"nodeType":"UncheckedBlock","src":"8810:175:12","statements":[{"expression":{"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":914,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"8946:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":916,"indexExpression":{"id":915,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"8956:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8946:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":917,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"8968:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8946:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":919,"nodeType":"ExpressionStatement","src":"8946:28:12"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9016:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9008:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"9008:7:12","typeDescriptions":{}}},"id":925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9008:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":926,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"9020:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":927,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"9029:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":921,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"8999:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":929,"nodeType":"EmitStatement","src":"8994:42:12"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9075:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9067:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"9067:7:12","typeDescriptions":{}}},"id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9067:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"9079:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":936,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"9088:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":930,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"9047:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9047:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":938,"nodeType":"ExpressionStatement","src":"9047:48:12"}]},"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"8297:265:12","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":940,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8576:5:12","nodeType":"FunctionDefinition","parameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"account","nameLocation":"8590:7:12","nodeType":"VariableDeclaration","scope":940,"src":"8582:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"8582:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"amount","nameLocation":"8607:6:12","nodeType":"VariableDeclaration","scope":940,"src":"8599:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"8599:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8581:33:12"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[],"src":"8632:0:12"},"scope":1123,"src":"8567:535:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1011,"nodeType":"Block","src":"9487:594:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":949,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"9505:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9524:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9516:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"9516:7:12","typeDescriptions":{}}},"id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9516:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9505:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9528:35:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":948,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9497:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9497:67:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":957,"nodeType":"ExpressionStatement","src":"9497:67:12"},{"expression":{"arguments":[{"id":959,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"9596:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9613:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9605:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"9605:7:12","typeDescriptions":{}}},"id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9605:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":964,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"9617:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":958,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"9575:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9575:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":966,"nodeType":"ExpressionStatement","src":"9575:49:12"},{"assignments":[968],"declarations":[{"constant":false,"id":968,"mutability":"mutable","name":"accountBalance","nameLocation":"9643:14:12","nodeType":"VariableDeclaration","scope":1011,"src":"9635:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"9635:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":972,"initialValue":{"baseExpression":{"id":969,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"9660:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":971,"indexExpression":{"id":970,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"9670:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9660:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9635:43:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":974,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"9696:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":975,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"9714:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9696:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9722:36:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":973,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9688:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9688:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":979,"nodeType":"ExpressionStatement","src":"9688:71:12"},{"id":992,"nodeType":"UncheckedBlock","src":"9769:194:12","statements":[{"expression":{"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":980,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"9793:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":982,"indexExpression":{"id":981,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"9803:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9793:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":983,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"9814:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":984,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"9831:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9814:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9793:44:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":987,"nodeType":"ExpressionStatement","src":"9793:44:12"},{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":988,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"9930:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":989,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"9946:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9930:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":991,"nodeType":"ExpressionStatement","src":"9930:22:12"}]},{"eventCall":{"arguments":[{"id":994,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"9987:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10004:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9996:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"9996:7:12","typeDescriptions":{}}},"id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9996:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":999,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"10008:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":993,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"9978:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9978:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1001,"nodeType":"EmitStatement","src":"9973:42:12"},{"expression":{"arguments":[{"id":1003,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"10046:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10055:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"10055:7:12","typeDescriptions":{}}},"id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10055:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1008,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"10067:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1002,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"10026:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10026:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1010,"nodeType":"ExpressionStatement","src":"10026:48:12"}]},"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"9108:309:12","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1012,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9431:5:12","nodeType":"FunctionDefinition","parameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"account","nameLocation":"9445:7:12","nodeType":"VariableDeclaration","scope":1012,"src":"9437:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"9437:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"amount","nameLocation":"9462:6:12","nodeType":"VariableDeclaration","scope":1012,"src":"9454:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"9454:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9436:33:12"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[],"src":"9487:0:12"},"scope":1123,"src":"9422:659:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1056,"nodeType":"Block","src":"10617:257:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1023,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"10635:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10652:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:12","typeDescriptions":{}}},"id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10644:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10635:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10656:38:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1022,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10627:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10627:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1031,"nodeType":"ExpressionStatement","src":"10627:68:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1033,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"10713:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10732:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10724:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"10724:7:12","typeDescriptions":{}}},"id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10724:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10713:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10736:36:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1032,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10705:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10705:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"ExpressionStatement","src":"10705:68:12"},{"expression":{"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1042,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"10784:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1045,"indexExpression":{"id":1043,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"10796:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10784:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1046,"indexExpression":{"id":1044,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"10803:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10784:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1047,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"10814:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10784:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1049,"nodeType":"ExpressionStatement","src":"10784:36:12"},{"eventCall":{"arguments":[{"id":1051,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"10844:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1052,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"10851:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1053,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"10860:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1050,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"10835:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10835:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1055,"nodeType":"EmitStatement","src":"10830:37:12"}]},"documentation":{"id":1013,"nodeType":"StructuredDocumentation","src":"10087:412:12","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1057,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10513:8:12","nodeType":"FunctionDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"owner","nameLocation":"10539:5:12","nodeType":"VariableDeclaration","scope":1057,"src":"10531:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"10531:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1017,"mutability":"mutable","name":"spender","nameLocation":"10562:7:12","nodeType":"VariableDeclaration","scope":1057,"src":"10554:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"10554:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"amount","nameLocation":"10587:6:12","nodeType":"VariableDeclaration","scope":1057,"src":"10579:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"10579:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10521:78:12"},"returnParameters":{"id":1021,"nodeType":"ParameterList","parameters":[],"src":"10617:0:12"},"scope":1123,"src":"10504:370:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1099,"nodeType":"Block","src":"11275:321:12","statements":[{"assignments":[1068],"declarations":[{"constant":false,"id":1068,"mutability":"mutable","name":"currentAllowance","nameLocation":"11293:16:12","nodeType":"VariableDeclaration","scope":1099,"src":"11285:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"11285:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1073,"initialValue":{"arguments":[{"id":1070,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"11322:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1071,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"11329:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1069,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"11312:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11312:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11285:52:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1074,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"11351:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11376:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"11376:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1075,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11371:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11371:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11385:3:12","memberName":"max","nodeType":"MemberAccess","src":"11371:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11351:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1098,"nodeType":"IfStatement","src":"11347:243:12","trueBody":{"id":1097,"nodeType":"Block","src":"11390:200:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1082,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"11412:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1083,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"11432:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11412:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11440:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1081,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11404:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11404:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1087,"nodeType":"ExpressionStatement","src":"11404:68:12"},{"id":1096,"nodeType":"UncheckedBlock","src":"11486:94:12","statements":[{"expression":{"arguments":[{"id":1089,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"11523:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1090,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"11530:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1091,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"11539:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1092,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"11558:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11539:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1088,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"11514:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11514:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1095,"nodeType":"ExpressionStatement","src":"11514:51:12"}]}]}}]},"documentation":{"id":1058,"nodeType":"StructuredDocumentation","src":"10880:270:12","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1100,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11164:15:12","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"owner","nameLocation":"11197:5:12","nodeType":"VariableDeclaration","scope":1100,"src":"11189:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1059,"name":"address","nodeType":"ElementaryTypeName","src":"11189:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"spender","nameLocation":"11220:7:12","nodeType":"VariableDeclaration","scope":1100,"src":"11212:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"11212:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"amount","nameLocation":"11245:6:12","nodeType":"VariableDeclaration","scope":1100,"src":"11237:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"11237:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11179:78:12"},"returnParameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"11275:0:12"},"scope":1123,"src":"11155:441:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1110,"nodeType":"Block","src":"12299:2:12","statements":[]},"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"11602:573:12","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1111,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12189:20:12","nodeType":"FunctionDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"from","nameLocation":"12227:4:12","nodeType":"VariableDeclaration","scope":1111,"src":"12219:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"12219:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"to","nameLocation":"12249:2:12","nodeType":"VariableDeclaration","scope":1111,"src":"12241:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"12241:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"amount","nameLocation":"12269:6:12","nodeType":"VariableDeclaration","scope":1111,"src":"12261:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"12261:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:72:12"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[],"src":"12299:0:12"},"scope":1123,"src":"12180:121:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1121,"nodeType":"Block","src":"13007:2:12","statements":[]},"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"12307:577:12","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1122,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12898:19:12","nodeType":"FunctionDefinition","parameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"from","nameLocation":"12935:4:12","nodeType":"VariableDeclaration","scope":1122,"src":"12927:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"12927:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1116,"mutability":"mutable","name":"to","nameLocation":"12957:2:12","nodeType":"VariableDeclaration","scope":1122,"src":"12949:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"12949:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1118,"mutability":"mutable","name":"amount","nameLocation":"12977:6:12","nodeType":"VariableDeclaration","scope":1122,"src":"12969:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"12969:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12917:72:12"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[],"src":"13007:0:12"},"scope":1123,"src":"12889:120:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1124,"src":"1401:11610:12","usedErrors":[]}],"src":"105:12907:12"},"id":12},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1201]},"id":1202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1125,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"131:70:13","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1201,"linearizedBaseContracts":[1201],"name":"IERC20","nameLocation":"212:6:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"225:158:13","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1135,"name":"Transfer","nameLocation":"394:8:13","nodeType":"EventDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:13","nodeType":"VariableDeclaration","scope":1135,"src":"403:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1131,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:13","nodeType":"VariableDeclaration","scope":1135,"src":"425:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1133,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:13","nodeType":"VariableDeclaration","scope":1135,"src":"445:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:13"},"src":"388:72:13"},{"anonymous":false,"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"466:148:13","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1144,"name":"Approval","nameLocation":"625:8:13","nodeType":"EventDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:13","nodeType":"VariableDeclaration","scope":1144,"src":"634:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1137,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1140,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:13","nodeType":"VariableDeclaration","scope":1144,"src":"657:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1142,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:13","nodeType":"VariableDeclaration","scope":1144,"src":"682:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:13"},"src":"619:78:13"},{"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"703:66:13","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1150,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:13","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[],"src":"794:2:13"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1150,"src":"820:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:13"},"scope":1201,"src":"774:55:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"835:72:13","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1158,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:13","nodeType":"FunctionDefinition","parameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"account","nameLocation":"939:7:13","nodeType":"VariableDeclaration","scope":1158,"src":"931:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1152,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:13"},"returnParameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1158,"src":"971:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:13"},"scope":1201,"src":"912:68:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1159,"nodeType":"StructuredDocumentation","src":"986:202:13","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1168,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:13","nodeType":"FunctionDefinition","parameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"to","nameLocation":"1219:2:13","nodeType":"VariableDeclaration","scope":1168,"src":"1211:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"amount","nameLocation":"1231:6:13","nodeType":"VariableDeclaration","scope":1168,"src":"1223:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:13"},"returnParameters":{"id":1167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1168,"src":"1257:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1165,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:13"},"scope":1201,"src":"1193:70:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1169,"nodeType":"StructuredDocumentation","src":"1269:264:13","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1178,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:13","nodeType":"FunctionDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"owner","nameLocation":"1565:5:13","nodeType":"VariableDeclaration","scope":1178,"src":"1557:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1173,"mutability":"mutable","name":"spender","nameLocation":"1580:7:13","nodeType":"VariableDeclaration","scope":1178,"src":"1572:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1172,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:13"},"returnParameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1178,"src":"1612:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:13"},"scope":1201,"src":"1538:83:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"1627:642:13","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1188,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:13","nodeType":"FunctionDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"spender","nameLocation":"2299:7:13","nodeType":"VariableDeclaration","scope":1188,"src":"2291:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"amount","nameLocation":"2316:6:13","nodeType":"VariableDeclaration","scope":1188,"src":"2308:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1182,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:13"},"returnParameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1188,"src":"2342:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1185,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:13"},"scope":1201,"src":"2274:74:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"2354:287:13","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1200,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:13","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"from","nameLocation":"2685:4:13","nodeType":"VariableDeclaration","scope":1200,"src":"2677:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1190,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"to","nameLocation":"2707:2:13","nodeType":"VariableDeclaration","scope":1200,"src":"2699:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"amount","nameLocation":"2727:6:13","nodeType":"VariableDeclaration","scope":1200,"src":"2719:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:13"},"returnParameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1200,"src":"2758:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1197,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:13"},"scope":1201,"src":"2646:118:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1202,"src":"202:2564:13","usedErrors":[]}],"src":"106:2661:13"},"id":13},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1201],"IERC20Metadata":[1226]},"id":1227,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1203,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1227,"sourceUnit":1202,"src":"135:23:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1206,"name":"IERC20","nameLocations":["305:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"305:6:14"},"id":1207,"nodeType":"InheritanceSpecifier","src":"305:6:14"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"160:116:14","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1226,"linearizedBaseContracts":[1226,1201],"name":"IERC20Metadata","nameLocation":"287:14:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1208,"nodeType":"StructuredDocumentation","src":"318:54:14","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1213,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:14","nodeType":"FunctionDefinition","parameters":{"id":1209,"nodeType":"ParameterList","parameters":[],"src":"390:2:14"},"returnParameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1213,"src":"416:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1210,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:14"},"scope":1226,"src":"377:54:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"437:56:14","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1219,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:14","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[],"src":"513:2:14"},"returnParameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1219,"src":"539:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1216,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:14"},"scope":1226,"src":"498:56:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1220,"nodeType":"StructuredDocumentation","src":"560:65:14","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1225,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:14","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[],"src":"647:2:14"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1225,"src":"673:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1222,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:14"},"scope":1226,"src":"630:50:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1227,"src":"277:405:14","usedErrors":[]}],"src":"110:573:14"},"id":14},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1262]},"id":1263,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1228,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"139:480:15","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":1262,"linearizedBaseContracts":[1262],"name":"IERC20Permit","nameLocation":"630:12:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"649:792:15","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":1247,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:15","nodeType":"FunctionDefinition","parameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"owner","nameLocation":"1479:5:15","nodeType":"VariableDeclaration","scope":1247,"src":"1471:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"spender","nameLocation":"1502:7:15","nodeType":"VariableDeclaration","scope":1247,"src":"1494:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"value","nameLocation":"1527:5:15","nodeType":"VariableDeclaration","scope":1247,"src":"1519:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:15","nodeType":"VariableDeclaration","scope":1247,"src":"1542:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1240,"mutability":"mutable","name":"v","nameLocation":"1574:1:15","nodeType":"VariableDeclaration","scope":1247,"src":"1568:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1239,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"r","nameLocation":"1593:1:15","nodeType":"VariableDeclaration","scope":1247,"src":"1585:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"s","nameLocation":"1612:1:15","nodeType":"VariableDeclaration","scope":1247,"src":"1604:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:15"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[],"src":"1628:0:15"},"scope":1262,"src":"1446:183:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1248,"nodeType":"StructuredDocumentation","src":"1635:294:15","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1255,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:15","nodeType":"FunctionDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"owner","nameLocation":"1958:5:15","nodeType":"VariableDeclaration","scope":1255,"src":"1950:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:15"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1255,"src":"1988:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:15"},"scope":1262,"src":"1934:63:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"2003:128:15","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1261,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:15","nodeType":"FunctionDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[],"src":"2214:2:15"},"returnParameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1261,"src":"2240:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:15"},"scope":1262,"src":"2189:60:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1263,"src":"620:1631:15","usedErrors":[]}],"src":"114:2138:15"},"id":15},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1873],"IERC20":[1201],"IERC20Permit":[1262],"SafeERC20":[1543]},"id":1544,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1264,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1265,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1544,"sourceUnit":1202,"src":"140:23:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":1266,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1544,"sourceUnit":1263,"src":"164:46:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1267,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1544,"sourceUnit":1874,"src":"211:36:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"249:457:16","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1543,"linearizedBaseContracts":[1543],"name":"SafeERC20","nameLocation":"715:9:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1271,"libraryName":{"id":1269,"name":"Address","nameLocations":["737:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":1873,"src":"737:7:16"},"nodeType":"UsingForDirective","src":"731:26:16","typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1293,"nodeType":"Block","src":"865:103:16","statements":[{"expression":{"arguments":[{"id":1282,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"895:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1285,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"925:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"931:8:16","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1168,"src":"925:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"940:8:16","memberName":"selector","nodeType":"MemberAccess","src":"925:23:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1288,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"950:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"954:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1283,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"906:18:16","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"902:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1281,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"875:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1201_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"875:86:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1292,"nodeType":"ExpressionStatement","src":"875:86:16"}]},"id":1294,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:16","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"token","nameLocation":"801:5:16","nodeType":"VariableDeclaration","scope":1294,"src":"794:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"},"typeName":{"id":1273,"nodeType":"UserDefinedTypeName","pathNode":{"id":1272,"name":"IERC20","nameLocations":["794:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"794:6:16"},"referencedDeclaration":1201,"src":"794:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"to","nameLocation":"824:2:16","nodeType":"VariableDeclaration","scope":1294,"src":"816:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"value","nameLocation":"844:5:16","nodeType":"VariableDeclaration","scope":1294,"src":"836:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:16"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[],"src":"865:0:16"},"scope":1543,"src":"763:205:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1319,"nodeType":"Block","src":"1102:113:16","statements":[{"expression":{"arguments":[{"id":1307,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"1132:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1310,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"1162:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:12:16","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1200,"src":"1162:18:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:8:16","memberName":"selector","nodeType":"MemberAccess","src":"1162:27:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1313,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"1191:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1314,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"1197:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"1201:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1308,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1143:18:16","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1139:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1306,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"1112:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1201_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1112:96:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1318,"nodeType":"ExpressionStatement","src":"1112:96:16"}]},"id":1320,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:16","nodeType":"FunctionDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"token","nameLocation":"1016:5:16","nodeType":"VariableDeclaration","scope":1320,"src":"1009:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"},"typeName":{"id":1296,"nodeType":"UserDefinedTypeName","pathNode":{"id":1295,"name":"IERC20","nameLocations":["1009:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"1009:6:16"},"referencedDeclaration":1201,"src":"1009:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"from","nameLocation":"1039:4:16","nodeType":"VariableDeclaration","scope":1320,"src":"1031:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"to","nameLocation":"1061:2:16","nodeType":"VariableDeclaration","scope":1320,"src":"1053:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1303,"mutability":"mutable","name":"value","nameLocation":"1081:5:16","nodeType":"VariableDeclaration","scope":1320,"src":"1073:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:16"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[],"src":"1102:0:16"},"scope":1543,"src":"974:241:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1363,"nodeType":"Block","src":"1581:497:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"1830:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1340,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1543","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1543","typeString":"library SafeERC20"}],"id":1339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:16","typeDescriptions":{}}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1342,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"1877:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1336,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"1846:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1852:9:16","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"1846:15:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1846:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1346,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":1331,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:163:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1350,"nodeType":"ExpressionStatement","src":"1808:163:16"},{"expression":{"arguments":[{"id":1352,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"2001:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1355,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"2031:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2037:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1188,"src":"2031:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2045:8:16","memberName":"selector","nodeType":"MemberAccess","src":"2031:22:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1358,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"2055:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"2064:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1353,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2012:18:16","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1351,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"1981:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1201_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1981:90:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1362,"nodeType":"ExpressionStatement","src":"1981:90:16"}]},"documentation":{"id":1321,"nodeType":"StructuredDocumentation","src":"1221:249:16","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":1364,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:16","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"token","nameLocation":"1512:5:16","nodeType":"VariableDeclaration","scope":1364,"src":"1505:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"},"typeName":{"id":1323,"nodeType":"UserDefinedTypeName","pathNode":{"id":1322,"name":"IERC20","nameLocations":["1505:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"1505:6:16"},"referencedDeclaration":1201,"src":"1505:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"spender","nameLocation":"1535:7:16","nodeType":"VariableDeclaration","scope":1364,"src":"1527:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"value","nameLocation":"1560:5:16","nodeType":"VariableDeclaration","scope":1364,"src":"1552:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:16"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[],"src":"1581:0:16"},"scope":1543,"src":"1475:603:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1399,"nodeType":"Block","src":"2200:194:16","statements":[{"assignments":[1375],"declarations":[{"constant":false,"id":1375,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:16","nodeType":"VariableDeclaration","scope":1399,"src":"2210:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1386,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1380,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1543","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1543","typeString":"library SafeERC20"}],"id":1379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:16","typeDescriptions":{}}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1382,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"2264:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1376,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"2233:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:9:16","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"2233:15:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"2275:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:16"},{"expression":{"arguments":[{"id":1388,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"2310:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1391,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"2340:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1188,"src":"2340:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2354:8:16","memberName":"selector","nodeType":"MemberAccess","src":"2340:22:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1394,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"2364:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1395,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"2373:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1389,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2321:18:16","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1387,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"2290:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1201_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:97:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1398,"nodeType":"ExpressionStatement","src":"2290:97:16"}]},"id":1400,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:16","nodeType":"FunctionDefinition","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"token","nameLocation":"2131:5:16","nodeType":"VariableDeclaration","scope":1400,"src":"2124:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"},"typeName":{"id":1366,"nodeType":"UserDefinedTypeName","pathNode":{"id":1365,"name":"IERC20","nameLocations":["2124:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"2124:6:16"},"referencedDeclaration":1201,"src":"2124:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"spender","nameLocation":"2154:7:16","nodeType":"VariableDeclaration","scope":1400,"src":"2146:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1371,"mutability":"mutable","name":"value","nameLocation":"2179:5:16","nodeType":"VariableDeclaration","scope":1400,"src":"2171:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1370,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:16"},"returnParameters":{"id":1373,"nodeType":"ParameterList","parameters":[],"src":"2200:0:16"},"scope":1543,"src":"2084:310:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1447,"nodeType":"Block","src":"2516:370:16","statements":[{"id":1446,"nodeType":"UncheckedBlock","src":"2526:354:16","statements":[{"assignments":[1411],"declarations":[{"constant":false,"id":1411,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:16","nodeType":"VariableDeclaration","scope":1446,"src":"2550:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1420,"initialValue":{"arguments":[{"arguments":[{"id":1416,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1543","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1543","typeString":"library SafeERC20"}],"id":1415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:16","typeDescriptions":{}}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1418,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"2604:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1412,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"2573:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2579:9:16","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"2573:15:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1422,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"2634:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2650:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2626:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1427,"nodeType":"ExpressionStatement","src":"2626:75:16"},{"assignments":[1429],"declarations":[{"constant":false,"id":1429,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:16","nodeType":"VariableDeclaration","scope":1446,"src":"2715:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1433,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"2738:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2753:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:16"},{"expression":{"arguments":[{"id":1435,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"2792:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1438,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"2822:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2828:7:16","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1188,"src":"2822:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2836:8:16","memberName":"selector","nodeType":"MemberAccess","src":"2822:22:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1441,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"2846:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1442,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"2855:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1436,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2803:18:16","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1434,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"2772:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1201_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:97:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1445,"nodeType":"ExpressionStatement","src":"2772:97:16"}]}]},"id":1448,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:16","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"token","nameLocation":"2447:5:16","nodeType":"VariableDeclaration","scope":1448,"src":"2440:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"},"typeName":{"id":1402,"nodeType":"UserDefinedTypeName","pathNode":{"id":1401,"name":"IERC20","nameLocations":["2440:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"2440:6:16"},"referencedDeclaration":1201,"src":"2440:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"spender","nameLocation":"2470:7:16","nodeType":"VariableDeclaration","scope":1448,"src":"2462:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1404,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"value","nameLocation":"2495:5:16","nodeType":"VariableDeclaration","scope":1448,"src":"2487:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:16"},"returnParameters":{"id":1409,"nodeType":"ParameterList","parameters":[],"src":"2516:0:16"},"scope":1543,"src":"2400:486:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1503,"nodeType":"Block","src":"3107:257:16","statements":[{"assignments":[1469],"declarations":[{"constant":false,"id":1469,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:16","nodeType":"VariableDeclaration","scope":1503,"src":"3117:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1474,"initialValue":{"arguments":[{"id":1472,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"3152:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1470,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"3139:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1262","typeString":"contract IERC20Permit"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:6:16","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1255,"src":"3139:12:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3139:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:16"},{"expression":{"arguments":[{"id":1478,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"3181:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1479,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"3188:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"3197:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1481,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"3204:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1482,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"3214:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1483,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"3217:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1484,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"3220:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1475,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"3168:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1262","typeString":"contract IERC20Permit"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3174:6:16","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":1247,"src":"3168:12:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1486,"nodeType":"ExpressionStatement","src":"3168:54:16"},{"assignments":[1488],"declarations":[{"constant":false,"id":1488,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:16","nodeType":"VariableDeclaration","scope":1503,"src":"3232:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1493,"initialValue":{"arguments":[{"id":1491,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"3266:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1489,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"3253:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1262","typeString":"contract IERC20Permit"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:6:16","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1255,"src":"3253:12:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3253:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1495,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"3290:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1496,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"3304:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1494,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1502,"nodeType":"ExpressionStatement","src":"3282:75:16"}]},"id":1504,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:16","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"token","nameLocation":"2934:5:16","nodeType":"VariableDeclaration","scope":1504,"src":"2921:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1262","typeString":"contract IERC20Permit"},"typeName":{"id":1450,"nodeType":"UserDefinedTypeName","pathNode":{"id":1449,"name":"IERC20Permit","nameLocations":["2921:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1262,"src":"2921:12:16"},"referencedDeclaration":1262,"src":"2921:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1262","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"owner","nameLocation":"2957:5:16","nodeType":"VariableDeclaration","scope":1504,"src":"2949:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1452,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1455,"mutability":"mutable","name":"spender","nameLocation":"2980:7:16","nodeType":"VariableDeclaration","scope":1504,"src":"2972:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1457,"mutability":"mutable","name":"value","nameLocation":"3005:5:16","nodeType":"VariableDeclaration","scope":1504,"src":"2997:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1456,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1459,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:16","nodeType":"VariableDeclaration","scope":1504,"src":"3020:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"v","nameLocation":"3052:1:16","nodeType":"VariableDeclaration","scope":1504,"src":"3046:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1460,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"r","nameLocation":"3071:1:16","nodeType":"VariableDeclaration","scope":1504,"src":"3063:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1462,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"s","nameLocation":"3090:1:16","nodeType":"VariableDeclaration","scope":1504,"src":"3082:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:16"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[],"src":"3107:0:16"},"scope":1543,"src":"2892:472:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1541,"nodeType":"Block","src":"3817:636:16","statements":[{"assignments":[1514],"declarations":[{"constant":false,"id":1514,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:16","nodeType":"VariableDeclaration","scope":1541,"src":"4166:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1513,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1523,"initialValue":{"arguments":[{"id":1520,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"4220:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1517,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"4200:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}],"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1515,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:16","typeDescriptions":{}}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4207:12:16","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1633,"src":"4192:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1524,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"4275:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4286:6:16","memberName":"length","nodeType":"MemberAccess","src":"4275:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1540,"nodeType":"IfStatement","src":"4271:176:16","trueBody":{"id":1539,"nodeType":"Block","src":"4298:149:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":1531,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"4370:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1532,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:16","typeDescriptions":{}}}],"id":1534,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1529,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4363:6:16","memberName":"decode","nodeType":"MemberAccess","src":"4359:10:16","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4359:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4351:85:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1538,"nodeType":"ExpressionStatement","src":"4351:85:16"}]}}]},"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"3370:372:16","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:16","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"token","nameLocation":"3783:5:16","nodeType":"VariableDeclaration","scope":1542,"src":"3776:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"},"typeName":{"id":1507,"nodeType":"UserDefinedTypeName","pathNode":{"id":1506,"name":"IERC20","nameLocations":["3776:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"3776:6:16"},"referencedDeclaration":1201,"src":"3776:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1510,"mutability":"mutable","name":"data","nameLocation":"3803:4:16","nodeType":"VariableDeclaration","scope":1542,"src":"3790:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1509,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:16"},"returnParameters":{"id":1512,"nodeType":"ParameterList","parameters":[],"src":"3817:0:16"},"scope":1543,"src":"3747:706:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1544,"src":"707:3748:16","usedErrors":[]}],"src":"115:4341:16"},"id":16},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1873]},"id":1874,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1545,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"126:67:17","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1873,"linearizedBaseContracts":[1873],"name":"Address","nameLocation":"202:7:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":1560,"nodeType":"Block","src":"1241:254:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1554,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"1465:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:17","memberName":"code","nodeType":"MemberAccess","src":"1465:12:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:17","memberName":"length","nodeType":"MemberAccess","src":"1465:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1553,"id":1559,"nodeType":"Return","src":"1458:30:17"}]},"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"216:954:17","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1561,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:17","nodeType":"FunctionDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"account","nameLocation":"1203:7:17","nodeType":"VariableDeclaration","scope":1561,"src":"1195:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1548,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:17"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1561,"src":"1235:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1551,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:17"},"scope":1873,"src":"1175:320:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1594,"nodeType":"Block","src":"2483:241:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1572,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1873","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1873","typeString":"library Address"}],"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1570,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:17","typeDescriptions":{}}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:17","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1575,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"2526:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1569,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1579,"nodeType":"ExpressionStatement","src":"2493:73:17"},{"assignments":[1581,null],"declarations":[{"constant":false,"id":1581,"mutability":"mutable","name":"success","nameLocation":"2583:7:17","nodeType":"VariableDeclaration","scope":1594,"src":"2578:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1580,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1588,"initialValue":{"arguments":[{"hexValue":"","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1582,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"2596:9:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:17","memberName":"call","nodeType":"MemberAccess","src":"2596:14:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1584,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"2618:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:17"},{"expression":{"arguments":[{"id":1590,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2647:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1593,"nodeType":"ExpressionStatement","src":"2639:78:17"}]},"documentation":{"id":1562,"nodeType":"StructuredDocumentation","src":"1501:906:17","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:17","nodeType":"FunctionDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:17","nodeType":"VariableDeclaration","scope":1595,"src":"2431:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1563,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1566,"mutability":"mutable","name":"amount","nameLocation":"2466:6:17","nodeType":"VariableDeclaration","scope":1595,"src":"2458:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:17"},"returnParameters":{"id":1568,"nodeType":"ParameterList","parameters":[],"src":"2483:0:17"},"scope":1873,"src":"2412:312:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1612,"nodeType":"Block","src":"3555:96:17","statements":[{"expression":{"arguments":[{"id":1606,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"3594:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1607,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"3602:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1605,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1653,1697],"referencedDeclaration":1697,"src":"3572:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:72:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1604,"id":1611,"nodeType":"Return","src":"3565:79:17"}]},"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"2730:731:17","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1613,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:17","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"target","nameLocation":"3496:6:17","nodeType":"VariableDeclaration","scope":1613,"src":"3488:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"data","nameLocation":"3517:4:17","nodeType":"VariableDeclaration","scope":1613,"src":"3504:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1599,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:17"},"returnParameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1613,"src":"3541:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1602,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:17"},"scope":1873,"src":"3466:185:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1632,"nodeType":"Block","src":"4020:76:17","statements":[{"expression":{"arguments":[{"id":1626,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"4059:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1627,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"4067:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1629,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"4076:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1625,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1653,1697],"referencedDeclaration":1697,"src":"4037:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1624,"id":1631,"nodeType":"Return","src":"4030:59:17"}]},"documentation":{"id":1614,"nodeType":"StructuredDocumentation","src":"3657:211:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1633,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:17","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"target","nameLocation":"3912:6:17","nodeType":"VariableDeclaration","scope":1633,"src":"3904:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1615,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1618,"mutability":"mutable","name":"data","nameLocation":"3941:4:17","nodeType":"VariableDeclaration","scope":1633,"src":"3928:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1617,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:17","nodeType":"VariableDeclaration","scope":1633,"src":"3955:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1619,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:17"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1633,"src":"4006:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1622,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:17"},"scope":1873,"src":"3873:223:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1652,"nodeType":"Block","src":"4601:111:17","statements":[{"expression":{"arguments":[{"id":1646,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"4640:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1647,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"4648:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"4654:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1645,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1653,1697],"referencedDeclaration":1697,"src":"4618:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4618:87:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1644,"id":1651,"nodeType":"Return","src":"4611:94:17"}]},"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"4102:351:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1653,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:17","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1636,"mutability":"mutable","name":"target","nameLocation":"4506:6:17","nodeType":"VariableDeclaration","scope":1653,"src":"4498:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1638,"mutability":"mutable","name":"data","nameLocation":"4535:4:17","nodeType":"VariableDeclaration","scope":1653,"src":"4522:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1637,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"value","nameLocation":"4557:5:17","nodeType":"VariableDeclaration","scope":1653,"src":"4549:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:17"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1653,"src":"4587:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1642,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:17"},"scope":1873,"src":"4458:254:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1696,"nodeType":"Block","src":"5139:267:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1670,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1873","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1873","typeString":"library Address"}],"id":1669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1668,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:17","typeDescriptions":{}}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5157:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5171:7:17","memberName":"balance","nodeType":"MemberAccess","src":"5157:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"5182:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1667,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5149:81:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1677,"nodeType":"ExpressionStatement","src":"5149:81:17"},{"assignments":[1679,1681],"declarations":[{"constant":false,"id":1679,"mutability":"mutable","name":"success","nameLocation":"5246:7:17","nodeType":"VariableDeclaration","scope":1696,"src":"5241:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1678,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1681,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:17","nodeType":"VariableDeclaration","scope":1696,"src":"5255:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1680,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1688,"initialValue":{"arguments":[{"id":1686,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"5308:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1682,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"5282:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5289:4:17","memberName":"call","nodeType":"MemberAccess","src":"5282:11:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"5301:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:17"},{"expression":{"arguments":[{"id":1690,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"5357:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1691,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"5365:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1692,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"5374:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1693,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"5386:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1689,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"5330:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5330:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1666,"id":1695,"nodeType":"Return","src":"5323:76:17"}]},"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"4718:237:17","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1697,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:17","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"target","nameLocation":"5008:6:17","nodeType":"VariableDeclaration","scope":1697,"src":"5000:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1655,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1658,"mutability":"mutable","name":"data","nameLocation":"5037:4:17","nodeType":"VariableDeclaration","scope":1697,"src":"5024:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1657,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1660,"mutability":"mutable","name":"value","nameLocation":"5059:5:17","nodeType":"VariableDeclaration","scope":1697,"src":"5051:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:17","nodeType":"VariableDeclaration","scope":1697,"src":"5074:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1661,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:17"},"returnParameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1697,"src":"5125:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1664,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:17"},"scope":1873,"src":"4960:446:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1713,"nodeType":"Block","src":"5683:97:17","statements":[{"expression":{"arguments":[{"id":1708,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"5719:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1709,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"5727:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1707,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1714,1743],"referencedDeclaration":1743,"src":"5700:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1706,"id":1712,"nodeType":"Return","src":"5693:80:17"}]},"documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"5412:166:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1714,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:17","nodeType":"FunctionDefinition","parameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"target","nameLocation":"5619:6:17","nodeType":"VariableDeclaration","scope":1714,"src":"5611:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1699,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1702,"mutability":"mutable","name":"data","nameLocation":"5640:4:17","nodeType":"VariableDeclaration","scope":1714,"src":"5627:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1701,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:17"},"returnParameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1714,"src":"5669:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1704,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:17"},"scope":1873,"src":"5583:197:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1742,"nodeType":"Block","src":"6122:168:17","statements":[{"assignments":[1727,1729],"declarations":[{"constant":false,"id":1727,"mutability":"mutable","name":"success","nameLocation":"6138:7:17","nodeType":"VariableDeclaration","scope":1742,"src":"6133:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1726,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1729,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:17","nodeType":"VariableDeclaration","scope":1742,"src":"6147:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1728,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1734,"initialValue":{"arguments":[{"id":1732,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"6192:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1730,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"6174:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:10:17","memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:17","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:17"},{"expression":{"arguments":[{"id":1736,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"6241:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1737,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"6249:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1738,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"6258:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1739,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"6270:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1735,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"6214:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6214:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1725,"id":1741,"nodeType":"Return","src":"6207:76:17"}]},"documentation":{"id":1715,"nodeType":"StructuredDocumentation","src":"5786:173:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1743,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:17","nodeType":"FunctionDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"mutability":"mutable","name":"target","nameLocation":"6009:6:17","nodeType":"VariableDeclaration","scope":1743,"src":"6001:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1716,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1719,"mutability":"mutable","name":"data","nameLocation":"6038:4:17","nodeType":"VariableDeclaration","scope":1743,"src":"6025:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1718,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:17","nodeType":"VariableDeclaration","scope":1743,"src":"6052:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1720,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:17"},"returnParameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1743,"src":"6108:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1723,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:17"},"scope":1873,"src":"5964:326:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1759,"nodeType":"Block","src":"6566:101:17","statements":[{"expression":{"arguments":[{"id":1754,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"6604:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1755,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"6612:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1753,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1760,1789],"referencedDeclaration":1789,"src":"6583:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6583:77:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1752,"id":1758,"nodeType":"Return","src":"6576:84:17"}]},"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"6296:168:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1760,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:17","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"target","nameLocation":"6507:6:17","nodeType":"VariableDeclaration","scope":1760,"src":"6499:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"data","nameLocation":"6528:4:17","nodeType":"VariableDeclaration","scope":1760,"src":"6515:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1747,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:17"},"returnParameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1760,"src":"6552:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1750,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:17"},"scope":1873,"src":"6469:198:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1788,"nodeType":"Block","src":"7008:170:17","statements":[{"assignments":[1773,1775],"declarations":[{"constant":false,"id":1773,"mutability":"mutable","name":"success","nameLocation":"7024:7:17","nodeType":"VariableDeclaration","scope":1788,"src":"7019:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1772,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:17","nodeType":"VariableDeclaration","scope":1788,"src":"7033:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1774,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1780,"initialValue":{"arguments":[{"id":1778,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"7080:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1776,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"7060:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7067:12:17","memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:17","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:17"},{"expression":{"arguments":[{"id":1782,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"7129:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1783,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"7137:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1784,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7146:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1785,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"7158:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1781,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"7102:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1771,"id":1787,"nodeType":"Return","src":"7095:76:17"}]},"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"6673:175:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1789,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:17","nodeType":"FunctionDefinition","parameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"target","nameLocation":"6900:6:17","nodeType":"VariableDeclaration","scope":1789,"src":"6892:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1762,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1765,"mutability":"mutable","name":"data","nameLocation":"6929:4:17","nodeType":"VariableDeclaration","scope":1789,"src":"6916:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1764,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1767,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:17","nodeType":"VariableDeclaration","scope":1789,"src":"6943:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1766,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:17"},"returnParameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1789,"src":"6994:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1769,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:17"},"scope":1873,"src":"6853:325:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1827,"nodeType":"Block","src":"7660:434:17","statements":[{"condition":{"id":1803,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"7674:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1825,"nodeType":"Block","src":"8030:58:17","statements":[{"expression":{"arguments":[{"id":1821,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"8052:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1822,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"8064:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1820,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"8044:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8044:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1824,"nodeType":"ExpressionStatement","src":"8044:33:17"}]},"id":1826,"nodeType":"IfStatement","src":"7670:418:17","trueBody":{"id":1819,"nodeType":"Block","src":"7683:341:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1804,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"7701:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7712:6:17","memberName":"length","nodeType":"MemberAccess","src":"7701:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1816,"nodeType":"IfStatement","src":"7697:286:17","trueBody":{"id":1815,"nodeType":"Block","src":"7725:258:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":1810,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"7927:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1809,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"7916:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7916:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1808,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1814,"nodeType":"ExpressionStatement","src":"7908:60:17"}]}},{"expression":{"id":1817,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"8003:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1802,"id":1818,"nodeType":"Return","src":"7996:17:17"}]}}]},"documentation":{"id":1790,"nodeType":"StructuredDocumentation","src":"7184:277:17","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1828,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:17","nodeType":"FunctionDefinition","parameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"mutability":"mutable","name":"target","nameLocation":"7519:6:17","nodeType":"VariableDeclaration","scope":1828,"src":"7511:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1791,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"success","nameLocation":"7540:7:17","nodeType":"VariableDeclaration","scope":1828,"src":"7535:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1793,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1796,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:17","nodeType":"VariableDeclaration","scope":1828,"src":"7557:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1795,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:17","nodeType":"VariableDeclaration","scope":1828,"src":"7590:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1797,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:17"},"returnParameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1828,"src":"7646:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1800,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:17"},"scope":1873,"src":"7466:628:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1851,"nodeType":"Block","src":"8475:135:17","statements":[{"condition":{"id":1840,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"8489:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1849,"nodeType":"Block","src":"8546:58:17","statements":[{"expression":{"arguments":[{"id":1845,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"8568:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1846,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"8580:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1844,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"8560:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1848,"nodeType":"ExpressionStatement","src":"8560:33:17"}]},"id":1850,"nodeType":"IfStatement","src":"8485:119:17","trueBody":{"id":1843,"nodeType":"Block","src":"8498:42:17","statements":[{"expression":{"id":1841,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"8519:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1839,"id":1842,"nodeType":"Return","src":"8512:17:17"}]}}]},"documentation":{"id":1829,"nodeType":"StructuredDocumentation","src":"8100:210:17","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1852,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:17","nodeType":"FunctionDefinition","parameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1831,"mutability":"mutable","name":"success","nameLocation":"8355:7:17","nodeType":"VariableDeclaration","scope":1852,"src":"8350:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1830,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1833,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:17","nodeType":"VariableDeclaration","scope":1852,"src":"8372:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1832,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1835,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:17","nodeType":"VariableDeclaration","scope":1852,"src":"8405:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1834,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:17"},"returnParameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1852,"src":"8461:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1837,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:17"},"scope":1873,"src":"8315:295:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1871,"nodeType":"Block","src":"8699:457:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1859,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"8775:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8786:6:17","memberName":"length","nodeType":"MemberAccess","src":"8775:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1869,"nodeType":"Block","src":"9105:45:17","statements":[{"expression":{"arguments":[{"id":1866,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"9126:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1865,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:17","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9119:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1868,"nodeType":"ExpressionStatement","src":"9119:20:17"}]},"id":1870,"nodeType":"IfStatement","src":"8771:379:17","trueBody":{"id":1864,"nodeType":"Block","src":"8798:301:17","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:17","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:17"},"nodeType":"YulFunctionCall","src":"8997:17:17"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:17","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:17"},"nodeType":"YulFunctionCall","src":"9038:19:17"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:17"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:17"},"nodeType":"YulFunctionCall","src":"9031:44:17"},"nodeType":"YulExpressionStatement","src":"9031:44:17"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1854,"isOffset":false,"isSlot":false,"src":"9003:10:17","valueSize":1},{"declaration":1854,"isOffset":false,"isSlot":false,"src":"9046:10:17","valueSize":1}],"id":1863,"nodeType":"InlineAssembly","src":"8947:142:17"}]}}]},"id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:17","nodeType":"FunctionDefinition","parameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:17","nodeType":"VariableDeclaration","scope":1872,"src":"8633:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1853,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:17","nodeType":"VariableDeclaration","scope":1872,"src":"8658:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1855,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:17"},"returnParameters":{"id":1858,"nodeType":"ParameterList","parameters":[],"src":"8699:0:17"},"scope":1873,"src":"8616:540:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1874,"src":"194:8964:17","usedErrors":[]}],"src":"101:9058:17"},"id":17},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1895]},"id":1896,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1875,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:18"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"111:496:18","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1895,"linearizedBaseContracts":[1895],"name":"Context","nameLocation":"626:7:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":1884,"nodeType":"Block","src":"702:34:18","statements":[{"expression":{"expression":{"id":1881,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:18","memberName":"sender","nodeType":"MemberAccess","src":"719:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1880,"id":1883,"nodeType":"Return","src":"712:17:18"}]},"id":1885,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:18","nodeType":"FunctionDefinition","parameters":{"id":1877,"nodeType":"ParameterList","parameters":[],"src":"659:2:18"},"returnParameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1885,"src":"693:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:18"},"scope":1895,"src":"640:96:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1893,"nodeType":"Block","src":"809:32:18","statements":[{"expression":{"expression":{"id":1890,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:18","memberName":"data","nodeType":"MemberAccess","src":"826:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1889,"id":1892,"nodeType":"Return","src":"819:15:18"}]},"id":1894,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:18","nodeType":"FunctionDefinition","parameters":{"id":1886,"nodeType":"ParameterList","parameters":[],"src":"759:2:18"},"returnParameters":{"id":1889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1894,"src":"793:14:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1887,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:18"},"scope":1895,"src":"742:99:18","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1896,"src":"608:235:18","usedErrors":[]}],"src":"86:758:18"},"id":18},"contracts/IStargateFactory.sol":{"ast":{"absolutePath":"contracts/IStargateFactory.sol","exportedSymbols":{"IStargateFactory":[1912]},"id":1913,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":1897,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"37:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IStargateFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1912,"linearizedBaseContracts":[1912],"name":"IStargateFactory","nameLocation":"73:16:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"068bcd8d","id":1904,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"103:7:19","nodeType":"FunctionDefinition","parameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1904,"src":"111:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"111:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"110:9:19"},"returnParameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1904,"src":"143:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1901,"name":"address","nodeType":"ElementaryTypeName","src":"143:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"142:9:19"},"scope":1912,"src":"94:58:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"41d1de97","id":1911,"implemented":false,"kind":"function","modifiers":[],"name":"allPools","nameLocation":"165:8:19","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"index","nameLocation":"182:5:19","nodeType":"VariableDeclaration","scope":1911,"src":"174:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"174:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"173:15:19"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1911,"src":"212:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1908,"name":"address","nodeType":"ElementaryTypeName","src":"212:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"211:9:19"},"scope":1912,"src":"156:65:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1913,"src":"63:160:19","usedErrors":[]}],"src":"37:187:19"},"id":19},"contracts/IStargateFeeLibrary.sol":{"ast":{"absolutePath":"contracts/IStargateFeeLibrary.sol","exportedSymbols":{"IStargateFeeLibrary":[1949],"SwapObj":[1927]},"id":1950,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":1914,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"38:24:20"},{"canonicalName":"SwapObj","id":1927,"members":[{"constant":false,"id":1916,"mutability":"mutable","name":"amount","nameLocation":"91:6:20","nodeType":"VariableDeclaration","scope":1927,"src":"83:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"83:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"eqFee","nameLocation":"109:5:20","nodeType":"VariableDeclaration","scope":1927,"src":"101:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1917,"name":"uint256","nodeType":"ElementaryTypeName","src":"101:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1920,"mutability":"mutable","name":"eqReward","nameLocation":"126:8:20","nodeType":"VariableDeclaration","scope":1927,"src":"118:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"118:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1922,"mutability":"mutable","name":"lpFee","nameLocation":"146:5:20","nodeType":"VariableDeclaration","scope":1927,"src":"138:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1921,"name":"uint256","nodeType":"ElementaryTypeName","src":"138:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1924,"mutability":"mutable","name":"protocolFee","nameLocation":"163:11:20","nodeType":"VariableDeclaration","scope":1927,"src":"155:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"155:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1926,"mutability":"mutable","name":"lkbRemove","nameLocation":"186:9:20","nodeType":"VariableDeclaration","scope":1927,"src":"178:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1925,"name":"uint256","nodeType":"ElementaryTypeName","src":"178:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SwapObj","nameLocation":"71:7:20","nodeType":"StructDefinition","scope":1950,"src":"64:134:20","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"IStargateFeeLibrary","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1949,"linearizedBaseContracts":[1949],"name":"IStargateFeeLibrary","nameLocation":"210:19:20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"1ab62430","id":1943,"implemented":false,"kind":"function","modifiers":[],"name":"getFees","nameLocation":"243:7:20","nodeType":"FunctionDefinition","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"_srcPoolId","nameLocation":"264:10:20","nodeType":"VariableDeclaration","scope":1943,"src":"256:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"256:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"_dstPoolId","nameLocation":"288:10:20","nodeType":"VariableDeclaration","scope":1943,"src":"280:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1930,"name":"uint256","nodeType":"ElementaryTypeName","src":"280:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1933,"mutability":"mutable","name":"_dstChainId","nameLocation":"311:11:20","nodeType":"VariableDeclaration","scope":1943,"src":"304:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1932,"name":"uint16","nodeType":"ElementaryTypeName","src":"304:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"_from","nameLocation":"336:5:20","nodeType":"VariableDeclaration","scope":1943,"src":"328:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1934,"name":"address","nodeType":"ElementaryTypeName","src":"328:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1937,"mutability":"mutable","name":"_amountSD","nameLocation":"355:9:20","nodeType":"VariableDeclaration","scope":1943,"src":"347:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"347:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"250:118:20"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1943,"src":"392:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapObj_$1927_memory_ptr","typeString":"struct SwapObj"},"typeName":{"id":1940,"nodeType":"UserDefinedTypeName","pathNode":{"id":1939,"name":"SwapObj","nameLocations":["392:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":1927,"src":"392:7:20"},"referencedDeclaration":1927,"src":"392:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_SwapObj_$1927_storage_ptr","typeString":"struct SwapObj"}},"visibility":"internal"}],"src":"391:16:20"},"scope":1949,"src":"234:174:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0d8e6e2c","id":1948,"implemented":false,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"421:10:20","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[],"src":"431:2:20"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1948,"src":"457:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1945,"name":"string","nodeType":"ElementaryTypeName","src":"457:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"456:15:20"},"scope":1949,"src":"412:60:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1950,"src":"200:274:20","usedErrors":[]}],"src":"38:437:20"},"id":20},"contracts/IStargatePool.sol":{"ast":{"absolutePath":"contracts/IStargatePool.sol","exportedSymbols":{"IStargatePool":[1962]},"id":1963,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":1951,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"37:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IStargatePool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1962,"linearizedBaseContracts":[1962],"name":"IStargatePool","nameLocation":"73:13:21","nodeType":"ContractDefinition","nodes":[{"functionSelector":"fc0c546a","id":1956,"implemented":false,"kind":"function","modifiers":[],"name":"token","nameLocation":"100:5:21","nodeType":"FunctionDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[],"src":"105:2:21"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1956,"src":"131:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1953,"name":"address","nodeType":"ElementaryTypeName","src":"131:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"130:9:21"},"scope":1962,"src":"91:49:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"001edfab","id":1961,"implemented":false,"kind":"function","modifiers":[],"name":"feeLibrary","nameLocation":"153:10:21","nodeType":"FunctionDefinition","parameters":{"id":1957,"nodeType":"ParameterList","parameters":[],"src":"163:2:21"},"returnParameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1961,"src":"189:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"189:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"188:9:21"},"scope":1962,"src":"144:54:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1963,"src":"63:137:21","usedErrors":[]}],"src":"37:164:21"},"id":21},"contracts/IStargateReceiver.sol":{"ast":{"absolutePath":"contracts/IStargateReceiver.sol","exportedSymbols":{"IStargateReceiver":[1980]},"id":1981,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":1964,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"37:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IStargateReceiver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1980,"linearizedBaseContracts":[1980],"name":"IStargateReceiver","nameLocation":"73:17:22","nodeType":"ContractDefinition","nodes":[{"functionSelector":"ab8236f3","id":1979,"implemented":false,"kind":"function","modifiers":[],"name":"sgReceive","nameLocation":"104:9:22","nodeType":"FunctionDefinition","parameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"_srcChainId","nameLocation":"126:11:22","nodeType":"VariableDeclaration","scope":1979,"src":"119:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1965,"name":"uint16","nodeType":"ElementaryTypeName","src":"119:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1968,"mutability":"mutable","name":"_srcAddress","nameLocation":"197:11:22","nodeType":"VariableDeclaration","scope":1979,"src":"184:24:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1967,"name":"bytes","nodeType":"ElementaryTypeName","src":"184:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"_nonce","nameLocation":"251:6:22","nodeType":"VariableDeclaration","scope":1979,"src":"243:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"243:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"_token","nameLocation":"271:6:22","nodeType":"VariableDeclaration","scope":1979,"src":"263:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1971,"name":"address","nodeType":"ElementaryTypeName","src":"263:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1974,"mutability":"mutable","name":"amountLD","nameLocation":"332:8:22","nodeType":"VariableDeclaration","scope":1979,"src":"324:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"324:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1976,"mutability":"mutable","name":"payload","nameLocation":"402:7:22","nodeType":"VariableDeclaration","scope":1979,"src":"389:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1975,"name":"bytes","nodeType":"ElementaryTypeName","src":"389:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"113:300:22"},"returnParameters":{"id":1978,"nodeType":"ParameterList","parameters":[],"src":"422:0:22"},"scope":1980,"src":"95:328:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1981,"src":"63:362:22","usedErrors":[]}],"src":"37:389:22"},"id":22},"contracts/IStargateRouter.sol":{"ast":{"absolutePath":"contracts/IStargateRouter.sol","exportedSymbols":{"IStargateRouter":[2104]},"id":2105,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":1982,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"38:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IStargateRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2104,"linearizedBaseContracts":[2104],"name":"IStargateRouter","nameLocation":"202:15:23","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c45a0155","id":1987,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"231:7:23","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[],"src":"238:2:23"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1987,"src":"264:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"264:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"263:9:23"},"scope":2104,"src":"222:51:23","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IStargateRouter.lzTxObj","id":1994,"members":[{"constant":false,"id":1989,"mutability":"mutable","name":"dstGasForCall","nameLocation":"306:13:23","nodeType":"VariableDeclaration","scope":1994,"src":"298:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1988,"name":"uint256","nodeType":"ElementaryTypeName","src":"298:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1991,"mutability":"mutable","name":"dstNativeAmount","nameLocation":"333:15:23","nodeType":"VariableDeclaration","scope":1994,"src":"325:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"325:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1993,"mutability":"mutable","name":"dstNativeAddr","nameLocation":"360:13:23","nodeType":"VariableDeclaration","scope":1994,"src":"354:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1992,"name":"bytes","nodeType":"ElementaryTypeName","src":"354:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"lzTxObj","nameLocation":"284:7:23","nodeType":"StructDefinition","scope":2104,"src":"277:101:23","visibility":"public"},{"functionSelector":"87b21efc","id":2003,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"391:12:23","nodeType":"FunctionDefinition","parameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"_poolId","nameLocation":"417:7:23","nodeType":"VariableDeclaration","scope":2003,"src":"409:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"409:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1998,"mutability":"mutable","name":"_amountLD","nameLocation":"438:9:23","nodeType":"VariableDeclaration","scope":2003,"src":"430:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1997,"name":"uint256","nodeType":"ElementaryTypeName","src":"430:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2000,"mutability":"mutable","name":"_to","nameLocation":"461:3:23","nodeType":"VariableDeclaration","scope":2003,"src":"453:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1999,"name":"address","nodeType":"ElementaryTypeName","src":"453:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"403:65:23"},"returnParameters":{"id":2002,"nodeType":"ParameterList","parameters":[],"src":"477:0:23"},"scope":2104,"src":"382:96:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9fbf10fc","id":2025,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"491:4:23","nodeType":"FunctionDefinition","parameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"_dstChainId","nameLocation":"508:11:23","nodeType":"VariableDeclaration","scope":2025,"src":"501:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2004,"name":"uint16","nodeType":"ElementaryTypeName","src":"501:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2007,"mutability":"mutable","name":"_srcPoolId","nameLocation":"533:10:23","nodeType":"VariableDeclaration","scope":2025,"src":"525:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"525:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2009,"mutability":"mutable","name":"_dstPoolId","nameLocation":"557:10:23","nodeType":"VariableDeclaration","scope":2025,"src":"549:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"549:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2011,"mutability":"mutable","name":"_refundAddress","nameLocation":"589:14:23","nodeType":"VariableDeclaration","scope":2025,"src":"573:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2010,"name":"address","nodeType":"ElementaryTypeName","src":"573:15:23","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2013,"mutability":"mutable","name":"_amountLD","nameLocation":"617:9:23","nodeType":"VariableDeclaration","scope":2025,"src":"609:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2012,"name":"uint256","nodeType":"ElementaryTypeName","src":"609:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2015,"mutability":"mutable","name":"_minAmountLD","nameLocation":"640:12:23","nodeType":"VariableDeclaration","scope":2025,"src":"632:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2018,"mutability":"mutable","name":"_lzTxParams","nameLocation":"673:11:23","nodeType":"VariableDeclaration","scope":2025,"src":"658:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_memory_ptr","typeString":"struct IStargateRouter.lzTxObj"},"typeName":{"id":2017,"nodeType":"UserDefinedTypeName","pathNode":{"id":2016,"name":"lzTxObj","nameLocations":["658:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"658:7:23"},"referencedDeclaration":1994,"src":"658:7:23","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_storage_ptr","typeString":"struct IStargateRouter.lzTxObj"}},"visibility":"internal"},{"constant":false,"id":2020,"mutability":"mutable","name":"_to","nameLocation":"705:3:23","nodeType":"VariableDeclaration","scope":2025,"src":"690:18:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2019,"name":"bytes","nodeType":"ElementaryTypeName","src":"690:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2022,"mutability":"mutable","name":"_payload","nameLocation":"729:8:23","nodeType":"VariableDeclaration","scope":2025,"src":"714:23:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2021,"name":"bytes","nodeType":"ElementaryTypeName","src":"714:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"495:246:23"},"returnParameters":{"id":2024,"nodeType":"ParameterList","parameters":[],"src":"758:0:23"},"scope":2104,"src":"482:277:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"84d0dba3","id":2045,"implemented":false,"kind":"function","modifiers":[],"name":"redeemRemote","nameLocation":"772:12:23","nodeType":"FunctionDefinition","parameters":{"id":2043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"_dstChainId","nameLocation":"797:11:23","nodeType":"VariableDeclaration","scope":2045,"src":"790:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2026,"name":"uint16","nodeType":"ElementaryTypeName","src":"790:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"_srcPoolId","nameLocation":"822:10:23","nodeType":"VariableDeclaration","scope":2045,"src":"814:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2031,"mutability":"mutable","name":"_dstPoolId","nameLocation":"846:10:23","nodeType":"VariableDeclaration","scope":2045,"src":"838:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2030,"name":"uint256","nodeType":"ElementaryTypeName","src":"838:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2033,"mutability":"mutable","name":"_refundAddress","nameLocation":"878:14:23","nodeType":"VariableDeclaration","scope":2045,"src":"862:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2032,"name":"address","nodeType":"ElementaryTypeName","src":"862:15:23","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2035,"mutability":"mutable","name":"_amountLP","nameLocation":"906:9:23","nodeType":"VariableDeclaration","scope":2045,"src":"898:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2037,"mutability":"mutable","name":"_minAmountLD","nameLocation":"929:12:23","nodeType":"VariableDeclaration","scope":2045,"src":"921:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2036,"name":"uint256","nodeType":"ElementaryTypeName","src":"921:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2039,"mutability":"mutable","name":"_to","nameLocation":"962:3:23","nodeType":"VariableDeclaration","scope":2045,"src":"947:18:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2038,"name":"bytes","nodeType":"ElementaryTypeName","src":"947:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2042,"mutability":"mutable","name":"_lzTxParams","nameLocation":"986:11:23","nodeType":"VariableDeclaration","scope":2045,"src":"971:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_memory_ptr","typeString":"struct IStargateRouter.lzTxObj"},"typeName":{"id":2041,"nodeType":"UserDefinedTypeName","pathNode":{"id":2040,"name":"lzTxObj","nameLocations":["971:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"971:7:23"},"referencedDeclaration":1994,"src":"971:7:23","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_storage_ptr","typeString":"struct IStargateRouter.lzTxObj"}},"visibility":"internal"}],"src":"784:217:23"},"returnParameters":{"id":2044,"nodeType":"ParameterList","parameters":[],"src":"1018:0:23"},"scope":2104,"src":"763:256:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"c4de93a5","id":2056,"implemented":false,"kind":"function","modifiers":[],"name":"instantRedeemLocal","nameLocation":"1032:18:23","nodeType":"FunctionDefinition","parameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"mutability":"mutable","name":"_srcPoolId","nameLocation":"1063:10:23","nodeType":"VariableDeclaration","scope":2056,"src":"1056:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2046,"name":"uint16","nodeType":"ElementaryTypeName","src":"1056:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2049,"mutability":"mutable","name":"_amountLP","nameLocation":"1087:9:23","nodeType":"VariableDeclaration","scope":2056,"src":"1079:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1079:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2051,"mutability":"mutable","name":"_to","nameLocation":"1110:3:23","nodeType":"VariableDeclaration","scope":2056,"src":"1102:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2050,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1050:67:23"},"returnParameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2056,"src":"1136:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"1136:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1135:9:23"},"scope":2104,"src":"1023:122:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8f2e1d18","id":2074,"implemented":false,"kind":"function","modifiers":[],"name":"redeemLocal","nameLocation":"1158:11:23","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"_dstChainId","nameLocation":"1182:11:23","nodeType":"VariableDeclaration","scope":2074,"src":"1175:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2057,"name":"uint16","nodeType":"ElementaryTypeName","src":"1175:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2060,"mutability":"mutable","name":"_srcPoolId","nameLocation":"1207:10:23","nodeType":"VariableDeclaration","scope":2074,"src":"1199:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2062,"mutability":"mutable","name":"_dstPoolId","nameLocation":"1231:10:23","nodeType":"VariableDeclaration","scope":2074,"src":"1223:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2064,"mutability":"mutable","name":"_refundAddress","nameLocation":"1263:14:23","nodeType":"VariableDeclaration","scope":2074,"src":"1247:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2063,"name":"address","nodeType":"ElementaryTypeName","src":"1247:15:23","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2066,"mutability":"mutable","name":"_amountLP","nameLocation":"1291:9:23","nodeType":"VariableDeclaration","scope":2074,"src":"1283:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2068,"mutability":"mutable","name":"_to","nameLocation":"1321:3:23","nodeType":"VariableDeclaration","scope":2074,"src":"1306:18:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2067,"name":"bytes","nodeType":"ElementaryTypeName","src":"1306:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2071,"mutability":"mutable","name":"_lzTxParams","nameLocation":"1345:11:23","nodeType":"VariableDeclaration","scope":2074,"src":"1330:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_memory_ptr","typeString":"struct IStargateRouter.lzTxObj"},"typeName":{"id":2070,"nodeType":"UserDefinedTypeName","pathNode":{"id":2069,"name":"lzTxObj","nameLocations":["1330:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"1330:7:23"},"referencedDeclaration":1994,"src":"1330:7:23","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_storage_ptr","typeString":"struct IStargateRouter.lzTxObj"}},"visibility":"internal"}],"src":"1169:191:23"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[],"src":"1377:0:23"},"scope":2104,"src":"1149:229:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"9ba3aa74","id":2085,"implemented":false,"kind":"function","modifiers":[],"name":"sendCredits","nameLocation":"1391:11:23","nodeType":"FunctionDefinition","parameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"_dstChainId","nameLocation":"1415:11:23","nodeType":"VariableDeclaration","scope":2085,"src":"1408:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2075,"name":"uint16","nodeType":"ElementaryTypeName","src":"1408:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2078,"mutability":"mutable","name":"_srcPoolId","nameLocation":"1440:10:23","nodeType":"VariableDeclaration","scope":2085,"src":"1432:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2077,"name":"uint256","nodeType":"ElementaryTypeName","src":"1432:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2080,"mutability":"mutable","name":"_dstPoolId","nameLocation":"1464:10:23","nodeType":"VariableDeclaration","scope":2085,"src":"1456:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2079,"name":"uint256","nodeType":"ElementaryTypeName","src":"1456:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2082,"mutability":"mutable","name":"_refundAddress","nameLocation":"1496:14:23","nodeType":"VariableDeclaration","scope":2085,"src":"1480:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2081,"name":"address","nodeType":"ElementaryTypeName","src":"1480:15:23","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"1402:112:23"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[],"src":"1531:0:23"},"scope":2104,"src":"1382:150:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"0a512369","id":2103,"implemented":false,"kind":"function","modifiers":[],"name":"quoteLayerZeroFee","nameLocation":"1545:17:23","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2087,"mutability":"mutable","name":"_dstChainId","nameLocation":"1575:11:23","nodeType":"VariableDeclaration","scope":2103,"src":"1568:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2086,"name":"uint16","nodeType":"ElementaryTypeName","src":"1568:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2089,"mutability":"mutable","name":"_functionType","nameLocation":"1598:13:23","nodeType":"VariableDeclaration","scope":2103,"src":"1592:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2088,"name":"uint8","nodeType":"ElementaryTypeName","src":"1592:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2091,"mutability":"mutable","name":"_toAddress","nameLocation":"1632:10:23","nodeType":"VariableDeclaration","scope":2103,"src":"1617:25:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2090,"name":"bytes","nodeType":"ElementaryTypeName","src":"1617:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2093,"mutability":"mutable","name":"_transferAndCallPayload","nameLocation":"1663:23:23","nodeType":"VariableDeclaration","scope":2103,"src":"1648:38:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2092,"name":"bytes","nodeType":"ElementaryTypeName","src":"1648:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"_lzTxParams","nameLocation":"1707:11:23","nodeType":"VariableDeclaration","scope":2103,"src":"1692:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_memory_ptr","typeString":"struct IStargateRouter.lzTxObj"},"typeName":{"id":2095,"nodeType":"UserDefinedTypeName","pathNode":{"id":2094,"name":"lzTxObj","nameLocations":["1692:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"1692:7:23"},"referencedDeclaration":1994,"src":"1692:7:23","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_storage_ptr","typeString":"struct IStargateRouter.lzTxObj"}},"visibility":"internal"}],"src":"1562:160:23"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2103,"src":"1746:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2098,"name":"uint256","nodeType":"ElementaryTypeName","src":"1746:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2103,"src":"1755:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1755:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1745:18:23"},"scope":2104,"src":"1536:228:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2105,"src":"192:1574:23","usedErrors":[]}],"src":"38:1729:23"},"id":23},"contracts/MockStargateRouter.sol":{"ast":{"absolutePath":"contracts/MockStargateRouter.sol","exportedSymbols":{"IStargateRouter":[2104],"MockStargateRouter":[2330]},"id":2331,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":2106,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"38:24:24"},{"absolutePath":"contracts/IStargateRouter.sol","file":"./IStargateRouter.sol","id":2107,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2331,"sourceUnit":2105,"src":"64:31:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2108,"name":"IStargateRouter","nameLocations":["128:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":2104,"src":"128:15:24"},"id":2109,"nodeType":"InheritanceSpecifier","src":"128:15:24"}],"canonicalName":"MockStargateRouter","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2330,"linearizedBaseContracts":[2330,2104],"name":"MockStargateRouter","nameLocation":"106:18:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MockStargateRouter.MockStargateRouterSwapArgs","id":2129,"members":[{"constant":false,"id":2111,"mutability":"mutable","name":"dstChainId","nameLocation":"195:10:24","nodeType":"VariableDeclaration","scope":2129,"src":"188:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2110,"name":"uint16","nodeType":"ElementaryTypeName","src":"188:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"srcPoolId","nameLocation":"219:9:24","nodeType":"VariableDeclaration","scope":2129,"src":"211:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"211:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2115,"mutability":"mutable","name":"dstPoolId","nameLocation":"242:9:24","nodeType":"VariableDeclaration","scope":2129,"src":"234:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"234:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2117,"mutability":"mutable","name":"refundAddress","nameLocation":"273:13:24","nodeType":"VariableDeclaration","scope":2129,"src":"257:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2116,"name":"address","nodeType":"ElementaryTypeName","src":"257:15:24","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2119,"mutability":"mutable","name":"amount","nameLocation":"300:6:24","nodeType":"VariableDeclaration","scope":2129,"src":"292:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2118,"name":"uint256","nodeType":"ElementaryTypeName","src":"292:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2121,"mutability":"mutable","name":"minAmountOut","nameLocation":"320:12:24","nodeType":"VariableDeclaration","scope":2129,"src":"312:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"312:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"to","nameLocation":"344:2:24","nodeType":"VariableDeclaration","scope":2129,"src":"338:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2122,"name":"bytes","nodeType":"ElementaryTypeName","src":"338:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"lzTxParams","nameLocation":"360:10:24","nodeType":"VariableDeclaration","scope":2129,"src":"352:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_storage_ptr","typeString":"struct IStargateRouter.lzTxObj"},"typeName":{"id":2125,"nodeType":"UserDefinedTypeName","pathNode":{"id":2124,"name":"lzTxObj","nameLocations":["352:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"352:7:24"},"referencedDeclaration":1994,"src":"352:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_storage_ptr","typeString":"struct IStargateRouter.lzTxObj"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"payload","nameLocation":"382:7:24","nodeType":"VariableDeclaration","scope":2129,"src":"376:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2127,"name":"bytes","nodeType":"ElementaryTypeName","src":"376:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"MockStargateRouterSwapArgs","nameLocation":"155:26:24","nodeType":"StructDefinition","scope":2330,"src":"148:246:24","visibility":"public"},{"constant":false,"id":2133,"mutability":"mutable","name":"swapInvocations","nameLocation":"436:15:24","nodeType":"VariableDeclaration","scope":2330,"src":"398:53:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_storage_$dyn_storage","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs[]"},"typeName":{"baseType":{"id":2131,"nodeType":"UserDefinedTypeName","pathNode":{"id":2130,"name":"MockStargateRouterSwapArgs","nameLocations":["398:26:24"],"nodeType":"IdentifierPath","referencedDeclaration":2129,"src":"398:26:24"},"referencedDeclaration":2129,"src":"398:26:24","typeDescriptions":{"typeIdentifier":"t_struct$_MockStargateRouterSwapArgs_$2129_storage_ptr","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs"}},"id":2132,"nodeType":"ArrayTypeName","src":"398:28:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_storage_$dyn_storage_ptr","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs[]"}},"visibility":"internal"},{"body":{"id":2142,"nodeType":"Block","src":"544:33:24","statements":[{"expression":{"id":2140,"name":"swapInvocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"557:15:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_storage_$dyn_storage","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs storage ref[] storage ref"}},"functionReturnParameters":2139,"id":2141,"nodeType":"Return","src":"550:22:24"}]},"functionSelector":"61790431","id":2143,"implemented":true,"kind":"function","modifiers":[],"name":"getSwapInvocations","nameLocation":"465:18:24","nodeType":"FunctionDefinition","parameters":{"id":2134,"nodeType":"ParameterList","parameters":[],"src":"483:2:24"},"returnParameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2143,"src":"507:35:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs[]"},"typeName":{"baseType":{"id":2136,"nodeType":"UserDefinedTypeName","pathNode":{"id":2135,"name":"MockStargateRouterSwapArgs","nameLocations":["507:26:24"],"nodeType":"IdentifierPath","referencedDeclaration":2129,"src":"507:26:24"},"referencedDeclaration":2129,"src":"507:26:24","typeDescriptions":{"typeIdentifier":"t_struct$_MockStargateRouterSwapArgs_$2129_storage_ptr","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs"}},"id":2137,"nodeType":"ArrayTypeName","src":"507:28:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_storage_$dyn_storage_ptr","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs[]"}},"visibility":"internal"}],"src":"506:37:24"},"scope":2330,"src":"456:121:24","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2155,"nodeType":"Block","src":"677:36:24","statements":[{"expression":{"baseExpression":{"id":2151,"name":"swapInvocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"690:15:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_storage_$dyn_storage","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs storage ref[] storage ref"}},"id":2153,"indexExpression":{"id":2152,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"706:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"690:18:24","typeDescriptions":{"typeIdentifier":"t_struct$_MockStargateRouterSwapArgs_$2129_storage","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs storage ref"}},"functionReturnParameters":2150,"id":2154,"nodeType":"Return","src":"683:25:24"}]},"functionSelector":"8b68be29","id":2156,"implemented":true,"kind":"function","modifiers":[],"name":"getSwapInvocationAt","nameLocation":"590:19:24","nodeType":"FunctionDefinition","parameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"i","nameLocation":"618:1:24","nodeType":"VariableDeclaration","scope":2156,"src":"610:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2144,"name":"uint256","nodeType":"ElementaryTypeName","src":"610:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"609:11:24"},"returnParameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2156,"src":"642:33:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs"},"typeName":{"id":2148,"nodeType":"UserDefinedTypeName","pathNode":{"id":2147,"name":"MockStargateRouterSwapArgs","nameLocations":["642:26:24"],"nodeType":"IdentifierPath","referencedDeclaration":2129,"src":"642:26:24"},"referencedDeclaration":2129,"src":"642:26:24","typeDescriptions":{"typeIdentifier":"t_struct$_MockStargateRouterSwapArgs_$2129_storage_ptr","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs"}},"visibility":"internal"}],"src":"641:35:24"},"scope":2330,"src":"581:132:24","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2164,"nodeType":"Block","src":"781:40:24","statements":[{"expression":{"expression":{"id":2161,"name":"swapInvocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"794:15:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_storage_$dyn_storage","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs storage ref[] storage ref"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"810:6:24","memberName":"length","nodeType":"MemberAccess","src":"794:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2160,"id":2163,"nodeType":"Return","src":"787:29:24"}]},"functionSelector":"17293c87","id":2165,"implemented":true,"kind":"function","modifiers":[],"name":"getSwapInvocationCount","nameLocation":"726:22:24","nodeType":"FunctionDefinition","parameters":{"id":2157,"nodeType":"ParameterList","parameters":[],"src":"748:2:24"},"returnParameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2165,"src":"772:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"771:9:24"},"scope":2330,"src":"717:104:24","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2179,"nodeType":"Block","src":"849:81:24","statements":[{"body":{"id":2177,"nodeType":"Block","src":"890:36:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2172,"name":"swapInvocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"898:15:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_storage_$dyn_storage","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs storage ref[] storage ref"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"914:3:24","memberName":"pop","nodeType":"MemberAccess","src":"898:19:24","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_storage_$dyn_storage_ptr_$","typeString":"function (struct MockStargateRouter.MockStargateRouterSwapArgs storage ref[] storage pointer)"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"898:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2176,"nodeType":"ExpressionStatement","src":"898:21:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2168,"name":"swapInvocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"862:15:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_storage_$dyn_storage","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs storage ref[] storage ref"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"878:6:24","memberName":"length","nodeType":"MemberAccess","src":"862:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"887:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"862:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2178,"nodeType":"WhileStatement","src":"855:71:24"}]},"functionSelector":"52efea6e","id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"834:5:24","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[],"src":"839:2:24"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[],"src":"849:0:24"},"scope":2330,"src":"825:105:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2003],"body":{"id":2189,"nodeType":"Block","src":"1030:2:24","statements":[]},"functionSelector":"87b21efc","id":2190,"implemented":true,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"943:12:24","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"_poolId","nameLocation":"969:7:24","nodeType":"VariableDeclaration","scope":2190,"src":"961:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"961:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"_amountLD","nameLocation":"990:9:24","nodeType":"VariableDeclaration","scope":2190,"src":"982:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2186,"mutability":"mutable","name":"_to","nameLocation":"1013:3:24","nodeType":"VariableDeclaration","scope":2190,"src":"1005:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2185,"name":"address","nodeType":"ElementaryTypeName","src":"1005:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"955:65:24"},"returnParameters":{"id":2188,"nodeType":"ParameterList","parameters":[],"src":"1030:0:24"},"scope":2330,"src":"934:98:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2025],"body":{"id":2228,"nodeType":"Block","src":"1313:177:24","statements":[{"expression":{"arguments":[{"arguments":[{"id":2216,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"1374:11:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2217,"name":"_srcPoolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"1387:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2218,"name":"_dstPoolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"1399:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2219,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"1411:14:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2220,"name":"_amountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"1427:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2221,"name":"_minAmountLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"1438:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2222,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"1452:3:24","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":2223,"name":"_lzTxParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"1457:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_memory_ptr","typeString":"struct IStargateRouter.lzTxObj memory"}},{"id":2224,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"1470:8:24","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_struct$_lzTxObj_$1994_memory_ptr","typeString":"struct IStargateRouter.lzTxObj memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2215,"name":"MockStargateRouterSwapArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"1347:26:24","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MockStargateRouterSwapArgs_$2129_storage_ptr_$","typeString":"type(struct MockStargateRouter.MockStargateRouterSwapArgs storage pointer)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1347:132:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs memory"}],"expression":{"id":2212,"name":"swapInvocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"1319:15:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_storage_$dyn_storage","typeString":"struct MockStargateRouter.MockStargateRouterSwapArgs storage ref[] storage ref"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1335:4:24","memberName":"push","nodeType":"MemberAccess","src":"1319:20:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_storage_$dyn_storage_ptr_$_t_struct$_MockStargateRouterSwapArgs_$2129_storage_$returns$__$attached_to$_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_storage_$dyn_storage_ptr_$","typeString":"function (struct MockStargateRouter.MockStargateRouterSwapArgs storage ref[] storage pointer,struct MockStargateRouter.MockStargateRouterSwapArgs storage ref)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1319:166:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2227,"nodeType":"ExpressionStatement","src":"1319:166:24"}]},"functionSelector":"9fbf10fc","id":2229,"implemented":true,"kind":"function","modifiers":[],"name":"swap","nameLocation":"1045:4:24","nodeType":"FunctionDefinition","parameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"_dstChainId","nameLocation":"1062:11:24","nodeType":"VariableDeclaration","scope":2229,"src":"1055:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2191,"name":"uint16","nodeType":"ElementaryTypeName","src":"1055:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2194,"mutability":"mutable","name":"_srcPoolId","nameLocation":"1087:10:24","nodeType":"VariableDeclaration","scope":2229,"src":"1079:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1079:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2196,"mutability":"mutable","name":"_dstPoolId","nameLocation":"1111:10:24","nodeType":"VariableDeclaration","scope":2229,"src":"1103:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2195,"name":"uint256","nodeType":"ElementaryTypeName","src":"1103:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2198,"mutability":"mutable","name":"_refundAddress","nameLocation":"1143:14:24","nodeType":"VariableDeclaration","scope":2229,"src":"1127:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2197,"name":"address","nodeType":"ElementaryTypeName","src":"1127:15:24","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2200,"mutability":"mutable","name":"_amountLD","nameLocation":"1171:9:24","nodeType":"VariableDeclaration","scope":2229,"src":"1163:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1163:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2202,"mutability":"mutable","name":"_minAmountLD","nameLocation":"1194:12:24","nodeType":"VariableDeclaration","scope":2229,"src":"1186:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2205,"mutability":"mutable","name":"_lzTxParams","nameLocation":"1227:11:24","nodeType":"VariableDeclaration","scope":2229,"src":"1212:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_memory_ptr","typeString":"struct IStargateRouter.lzTxObj"},"typeName":{"id":2204,"nodeType":"UserDefinedTypeName","pathNode":{"id":2203,"name":"lzTxObj","nameLocations":["1212:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"1212:7:24"},"referencedDeclaration":1994,"src":"1212:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_storage_ptr","typeString":"struct IStargateRouter.lzTxObj"}},"visibility":"internal"},{"constant":false,"id":2207,"mutability":"mutable","name":"_to","nameLocation":"1259:3:24","nodeType":"VariableDeclaration","scope":2229,"src":"1244:18:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2206,"name":"bytes","nodeType":"ElementaryTypeName","src":"1244:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2209,"mutability":"mutable","name":"_payload","nameLocation":"1283:8:24","nodeType":"VariableDeclaration","scope":2229,"src":"1268:23:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2208,"name":"bytes","nodeType":"ElementaryTypeName","src":"1268:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1049:246:24"},"returnParameters":{"id":2211,"nodeType":"ParameterList","parameters":[],"src":"1313:0:24"},"scope":2330,"src":"1036:454:24","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[2045],"body":{"id":2249,"nodeType":"Block","src":"1750:2:24","statements":[]},"functionSelector":"84d0dba3","id":2250,"implemented":true,"kind":"function","modifiers":[],"name":"redeemRemote","nameLocation":"1503:12:24","nodeType":"FunctionDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"_dstChainId","nameLocation":"1528:11:24","nodeType":"VariableDeclaration","scope":2250,"src":"1521:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2230,"name":"uint16","nodeType":"ElementaryTypeName","src":"1521:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2233,"mutability":"mutable","name":"_srcPoolId","nameLocation":"1553:10:24","nodeType":"VariableDeclaration","scope":2250,"src":"1545:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2232,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2235,"mutability":"mutable","name":"_dstPoolId","nameLocation":"1577:10:24","nodeType":"VariableDeclaration","scope":2250,"src":"1569:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2234,"name":"uint256","nodeType":"ElementaryTypeName","src":"1569:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2237,"mutability":"mutable","name":"_refundAddress","nameLocation":"1609:14:24","nodeType":"VariableDeclaration","scope":2250,"src":"1593:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2236,"name":"address","nodeType":"ElementaryTypeName","src":"1593:15:24","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"_amountLP","nameLocation":"1637:9:24","nodeType":"VariableDeclaration","scope":2250,"src":"1629:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1629:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"_minAmountLD","nameLocation":"1660:12:24","nodeType":"VariableDeclaration","scope":2250,"src":"1652:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1652:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2243,"mutability":"mutable","name":"_to","nameLocation":"1693:3:24","nodeType":"VariableDeclaration","scope":2250,"src":"1678:18:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2242,"name":"bytes","nodeType":"ElementaryTypeName","src":"1678:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2246,"mutability":"mutable","name":"_lzTxParams","nameLocation":"1717:11:24","nodeType":"VariableDeclaration","scope":2250,"src":"1702:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_memory_ptr","typeString":"struct IStargateRouter.lzTxObj"},"typeName":{"id":2245,"nodeType":"UserDefinedTypeName","pathNode":{"id":2244,"name":"lzTxObj","nameLocations":["1702:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"1702:7:24"},"referencedDeclaration":1994,"src":"1702:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_storage_ptr","typeString":"struct IStargateRouter.lzTxObj"}},"visibility":"internal"}],"src":"1515:217:24"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[],"src":"1750:0:24"},"scope":2330,"src":"1494:258:24","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[2056],"body":{"id":2263,"nodeType":"Block","src":"1858:19:24","statements":[{"expression":{"hexValue":"30","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1871:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2260,"id":2262,"nodeType":"Return","src":"1864:8:24"}]},"functionSelector":"c4de93a5","id":2264,"implemented":true,"kind":"function","modifiers":[],"name":"instantRedeemLocal","nameLocation":"1765:18:24","nodeType":"FunctionDefinition","parameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2264,"src":"1789:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2251,"name":"uint16","nodeType":"ElementaryTypeName","src":"1789:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2264,"src":"1801:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1801:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2264,"src":"1814:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2255,"name":"address","nodeType":"ElementaryTypeName","src":"1814:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1783:42:24"},"returnParameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2264,"src":"1849:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2258,"name":"uint256","nodeType":"ElementaryTypeName","src":"1849:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1848:9:24"},"scope":2330,"src":"1756:121:24","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[2074],"body":{"id":2282,"nodeType":"Block","src":"2110:2:24","statements":[]},"functionSelector":"8f2e1d18","id":2283,"implemented":true,"kind":"function","modifiers":[],"name":"redeemLocal","nameLocation":"1890:11:24","nodeType":"FunctionDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"_dstChainId","nameLocation":"1914:11:24","nodeType":"VariableDeclaration","scope":2283,"src":"1907:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2265,"name":"uint16","nodeType":"ElementaryTypeName","src":"1907:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2268,"mutability":"mutable","name":"_srcPoolId","nameLocation":"1939:10:24","nodeType":"VariableDeclaration","scope":2283,"src":"1931:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1931:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2270,"mutability":"mutable","name":"_dstPoolId","nameLocation":"1963:10:24","nodeType":"VariableDeclaration","scope":2283,"src":"1955:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1955:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2272,"mutability":"mutable","name":"_refundAddress","nameLocation":"1995:14:24","nodeType":"VariableDeclaration","scope":2283,"src":"1979:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"1979:15:24","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2274,"mutability":"mutable","name":"_amountLP","nameLocation":"2023:9:24","nodeType":"VariableDeclaration","scope":2283,"src":"2015:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"2015:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2276,"mutability":"mutable","name":"_to","nameLocation":"2053:3:24","nodeType":"VariableDeclaration","scope":2283,"src":"2038:18:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2275,"name":"bytes","nodeType":"ElementaryTypeName","src":"2038:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"_lzTxParams","nameLocation":"2077:11:24","nodeType":"VariableDeclaration","scope":2283,"src":"2062:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_memory_ptr","typeString":"struct IStargateRouter.lzTxObj"},"typeName":{"id":2278,"nodeType":"UserDefinedTypeName","pathNode":{"id":2277,"name":"lzTxObj","nameLocations":["2062:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"2062:7:24"},"referencedDeclaration":1994,"src":"2062:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_storage_ptr","typeString":"struct IStargateRouter.lzTxObj"}},"visibility":"internal"}],"src":"1901:191:24"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[],"src":"2110:0:24"},"scope":2330,"src":"1881:231:24","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[2085],"body":{"id":2294,"nodeType":"Block","src":"2266:2:24","statements":[]},"functionSelector":"9ba3aa74","id":2295,"implemented":true,"kind":"function","modifiers":[],"name":"sendCredits","nameLocation":"2125:11:24","nodeType":"FunctionDefinition","parameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"_dstChainId","nameLocation":"2149:11:24","nodeType":"VariableDeclaration","scope":2295,"src":"2142:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2284,"name":"uint16","nodeType":"ElementaryTypeName","src":"2142:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2287,"mutability":"mutable","name":"_srcPoolId","nameLocation":"2174:10:24","nodeType":"VariableDeclaration","scope":2295,"src":"2166:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2289,"mutability":"mutable","name":"_dstPoolId","nameLocation":"2198:10:24","nodeType":"VariableDeclaration","scope":2295,"src":"2190:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2288,"name":"uint256","nodeType":"ElementaryTypeName","src":"2190:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2291,"mutability":"mutable","name":"_refundAddress","nameLocation":"2230:14:24","nodeType":"VariableDeclaration","scope":2295,"src":"2214:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2290,"name":"address","nodeType":"ElementaryTypeName","src":"2214:15:24","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"2136:112:24"},"returnParameters":{"id":2293,"nodeType":"ParameterList","parameters":[],"src":"2266:0:24"},"scope":2330,"src":"2116:152:24","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[2103],"body":{"id":2317,"nodeType":"Block","src":"2427:24:24","statements":[{"expression":{"components":[{"hexValue":"30","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2441:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2444:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2440:6:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(int_const 0,int_const 0)"}},"functionReturnParameters":2312,"id":2316,"nodeType":"Return","src":"2433:13:24"}]},"functionSelector":"0a512369","id":2318,"implemented":true,"kind":"function","modifiers":[],"name":"quoteLayerZeroFee","nameLocation":"2281:17:24","nodeType":"FunctionDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2318,"src":"2304:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2296,"name":"uint16","nodeType":"ElementaryTypeName","src":"2304:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2318,"src":"2316:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2298,"name":"uint8","nodeType":"ElementaryTypeName","src":"2316:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2318,"src":"2327:14:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2300,"name":"bytes","nodeType":"ElementaryTypeName","src":"2327:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2318,"src":"2347:14:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2302,"name":"bytes","nodeType":"ElementaryTypeName","src":"2347:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2318,"src":"2367:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_memory_ptr","typeString":"struct IStargateRouter.lzTxObj"},"typeName":{"id":2305,"nodeType":"UserDefinedTypeName","pathNode":{"id":2304,"name":"lzTxObj","nameLocations":["2367:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"2367:7:24"},"referencedDeclaration":1994,"src":"2367:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_storage_ptr","typeString":"struct IStargateRouter.lzTxObj"}},"visibility":"internal"}],"src":"2298:87:24"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2318,"src":"2409:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2409:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2318,"src":"2418:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2310,"name":"uint256","nodeType":"ElementaryTypeName","src":"2418:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2408:18:24"},"scope":2330,"src":"2272:179:24","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[1987],"body":{"id":2328,"nodeType":"Block","src":"2506:28:24","statements":[{"expression":{"arguments":[{"hexValue":"30","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2527:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2519:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"2519:7:24","typeDescriptions":{}}},"id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2519:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2322,"id":2327,"nodeType":"Return","src":"2512:17:24"}]},"functionSelector":"c45a0155","id":2329,"implemented":true,"kind":"function","modifiers":[],"name":"factory","nameLocation":"2464:7:24","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[],"src":"2471:2:24"},"returnParameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2329,"src":"2497:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2320,"name":"address","nodeType":"ElementaryTypeName","src":"2497:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2496:9:24"},"scope":2330,"src":"2455:79:24","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":2331,"src":"97:2439:24","usedErrors":[]}],"src":"38:2499:24"},"id":24},"contracts/StargateBridgeAction.sol":{"ast":{"absolutePath":"contracts/StargateBridgeAction.sol","exportedSymbols":{"Address":[1873],"Asset":[57],"AssetAmount":[66],"AssetType":[72],"BridgePayload":[83],"Context":[1895],"ERC20":[1123],"IERC20":[1201],"IERC20Metadata":[1226],"IERC20Permit":[1262],"IStargateReceiver":[1980],"IStargateRouter":[2104],"IWorkflowRunner":[28],"IWorkflowStep":[48],"LibActionHelpers":[235],"LibStepResultBuilder":[536],"SafeERC20":[1543],"StargateBridgeAction":[2935],"StargateBridgeActionArgs":[2372],"StepResultBuilder":[247],"Workflow":[93],"WorkflowContinuingStep":[2955],"WorkflowStep":[109],"WorkflowStepInputAsset":[122],"WorkflowStepResult":[138]},"id":2936,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2332,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:25"},{"absolutePath":"contracts/WorkflowContinuingStep.sol","file":"./WorkflowContinuingStep.sol","id":2333,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2936,"sourceUnit":2956,"src":"58:38:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@freemarket/core/contracts/model/Asset.sol","file":"@freemarket/core/contracts/model/Asset.sol","id":2334,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2936,"sourceUnit":58,"src":"97:52:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@freemarket/core/contracts/model/AssetAmount.sol","file":"@freemarket/core/contracts/model/AssetAmount.sol","id":2335,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2936,"sourceUnit":67,"src":"150:58:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@freemarket/core/contracts/model/BridgePayload.sol","file":"@freemarket/core/contracts/model/BridgePayload.sol","id":2336,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2936,"sourceUnit":84,"src":"209:60:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@freemarket/core/contracts/IWorkflowRunner.sol","file":"@freemarket/core/contracts/IWorkflowRunner.sol","id":2337,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2936,"sourceUnit":29,"src":"270:56:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@freemarket/step-sdk/contracts/LibActionHelpers.sol","file":"@freemarket/step-sdk/contracts/LibActionHelpers.sol","id":2338,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2936,"sourceUnit":236,"src":"327:61:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/IStargateRouter.sol","file":"./IStargateRouter.sol","id":2339,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2936,"sourceUnit":2105,"src":"389:31:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/IStargateReceiver.sol","file":"./IStargateReceiver.sol","id":2340,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2936,"sourceUnit":1981,"src":"421:33:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2341,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2936,"sourceUnit":1202,"src":"455:56:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":2342,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2936,"sourceUnit":1544,"src":"512:65:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@freemarket/step-sdk/contracts/LibStepResultBuilder.sol","file":"@freemarket/step-sdk/contracts/LibStepResultBuilder.sol","id":2343,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2936,"sourceUnit":537,"src":"578:65:25","symbolAliases":[],"unitAlias":""},{"global":false,"id":2347,"libraryName":{"id":2344,"name":"LibStepResultBuilder","nameLocations":["651:20:25"],"nodeType":"IdentifierPath","referencedDeclaration":536,"src":"651:20:25"},"nodeType":"UsingForDirective","src":"645:49:25","typeName":{"id":2346,"nodeType":"UserDefinedTypeName","pathNode":{"id":2345,"name":"StepResultBuilder","nameLocations":["676:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"676:17:25"},"referencedDeclaration":247,"src":"676:17:25","typeDescriptions":{"typeIdentifier":"t_struct$_StepResultBuilder_$247_storage_ptr","typeString":"struct StepResultBuilder"}}},{"canonicalName":"StargateBridgeActionArgs","id":2372,"members":[{"constant":false,"id":2349,"mutability":"mutable","name":"dstActionAddress","nameLocation":"841:16:25","nodeType":"VariableDeclaration","scope":2372,"src":"833:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2348,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2351,"mutability":"mutable","name":"dstUserAddress","nameLocation":"920:14:25","nodeType":"VariableDeclaration","scope":2372,"src":"912:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2350,"name":"address","nodeType":"ElementaryTypeName","src":"912:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2353,"mutability":"mutable","name":"dstChainId","nameLocation":"977:10:25","nodeType":"VariableDeclaration","scope":2372,"src":"970:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2352,"name":"uint16","nodeType":"ElementaryTypeName","src":"970:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2355,"mutability":"mutable","name":"srcPoolId","nameLocation":"1048:9:25","nodeType":"VariableDeclaration","scope":2372,"src":"1040:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2354,"name":"uint256","nodeType":"ElementaryTypeName","src":"1040:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2357,"mutability":"mutable","name":"dstPoolId","nameLocation":"1128:9:25","nodeType":"VariableDeclaration","scope":2372,"src":"1120:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"1120:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2359,"mutability":"mutable","name":"dstGasForCall","nameLocation":"1212:13:25","nodeType":"VariableDeclaration","scope":2372,"src":"1204:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2358,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2361,"mutability":"mutable","name":"dstNativeAmount","nameLocation":"1291:15:25","nodeType":"VariableDeclaration","scope":2372,"src":"1283:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2363,"mutability":"mutable","name":"minAmountOut","nameLocation":"1400:12:25","nodeType":"VariableDeclaration","scope":2372,"src":"1392:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2365,"mutability":"mutable","name":"minAmountOutIsPercent","nameLocation":"1467:21:25","nodeType":"VariableDeclaration","scope":2372,"src":"1462:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2364,"name":"bool","nodeType":"ElementaryTypeName","src":"1462:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2367,"mutability":"mutable","name":"continuationWorkflow","nameLocation":"1571:20:25","nodeType":"VariableDeclaration","scope":2372,"src":"1565:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2366,"name":"bytes","nodeType":"ElementaryTypeName","src":"1565:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2369,"mutability":"mutable","name":"nonce","nameLocation":"1699:5:25","nodeType":"VariableDeclaration","scope":2372,"src":"1691:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2368,"name":"uint256","nodeType":"ElementaryTypeName","src":"1691:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"includeContinuationWorkflowInEvent","nameLocation":"1784:34:25","nodeType":"VariableDeclaration","scope":2372,"src":"1779:39:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2370,"name":"bool","nodeType":"ElementaryTypeName","src":"1779:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StargateBridgeActionArgs","nameLocation":"746:24:25","nodeType":"StructDefinition","scope":2936,"src":"739:1082:25","visibility":"public"},{"abstract":false,"baseContracts":[{"baseName":{"id":2373,"name":"WorkflowContinuingStep","nameLocations":["1856:22:25"],"nodeType":"IdentifierPath","referencedDeclaration":2955,"src":"1856:22:25"},"id":2374,"nodeType":"InheritanceSpecifier","src":"1856:22:25"},{"baseName":{"id":2375,"name":"IStargateReceiver","nameLocations":["1880:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":1980,"src":"1880:17:25"},"id":2376,"nodeType":"InheritanceSpecifier","src":"1880:17:25"}],"canonicalName":"StargateBridgeAction","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2935,"linearizedBaseContracts":[2935,1980,2955,48],"name":"StargateBridgeAction","nameLocation":"1832:20:25","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"50fd910e","id":2378,"mutability":"immutable","name":"frontDoorAddress","nameLocation":"1927:16:25","nodeType":"VariableDeclaration","scope":2935,"src":"1902:41:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2377,"name":"address","nodeType":"ElementaryTypeName","src":"1902:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"1d2091bf","id":2380,"mutability":"immutable","name":"stargateRouterAddress","nameLocation":"1972:21:25","nodeType":"VariableDeclaration","scope":2935,"src":"1947:46:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2379,"name":"address","nodeType":"ElementaryTypeName","src":"1947:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"documentation":{"id":2381,"nodeType":"StructuredDocumentation","src":"1998:287:25","text":"@notice This event is emitted on the destination chain when Stargate invokes our sgReceive method\n @param tokenAddress the address of the erc20 that was transfered from the source chain to this chain.abi\n @param bridgePayload the payload that was sent along with the erc20."},"eventSelector":"068d4646b1f017626e64e0ec01e0509c83002732d5599a1b5ccacd00d5a3d4ea","id":2390,"name":"SgReceiveCalled","nameLocation":"2294:15:25","nodeType":"EventDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"indexed":false,"mutability":"mutable","name":"tokenAddress","nameLocation":"2318:12:25","nodeType":"VariableDeclaration","scope":2390,"src":"2310:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"2310:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2385,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2340:6:25","nodeType":"VariableDeclaration","scope":2390,"src":"2332:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2384,"name":"uint256","nodeType":"ElementaryTypeName","src":"2332:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2388,"indexed":false,"mutability":"mutable","name":"bridgePayload","nameLocation":"2362:13:25","nodeType":"VariableDeclaration","scope":2390,"src":"2348:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_BridgePayload_$83_memory_ptr","typeString":"struct BridgePayload"},"typeName":{"id":2387,"nodeType":"UserDefinedTypeName","pathNode":{"id":2386,"name":"BridgePayload","nameLocations":["2348:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":83,"src":"2348:13:25"},"referencedDeclaration":83,"src":"2348:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_BridgePayload_$83_storage_ptr","typeString":"struct BridgePayload"}},"visibility":"internal"}],"src":"2309:67:25"},"src":"2288:89:25"},{"anonymous":false,"eventSelector":"c919a44972f2a555d7b70313ba420f3ece86780db879b0e70e766c61ae84ad5c","id":2412,"name":"StargateBridgeParamsEvent","nameLocation":"2387:25:25","nodeType":"EventDefinition","parameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"indexed":false,"mutability":"mutable","name":"nativeAmount","nameLocation":"2426:12:25","nodeType":"VariableDeclaration","scope":2412,"src":"2418:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2418:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2394,"indexed":false,"mutability":"mutable","name":"assetAmount","nameLocation":"2452:11:25","nodeType":"VariableDeclaration","scope":2412,"src":"2444:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2444:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2396,"indexed":false,"mutability":"mutable","name":"dstActionAddress","nameLocation":"2477:16:25","nodeType":"VariableDeclaration","scope":2412,"src":"2469:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2395,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2398,"indexed":false,"mutability":"mutable","name":"dstChainId","nameLocation":"2506:10:25","nodeType":"VariableDeclaration","scope":2412,"src":"2499:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2397,"name":"uint16","nodeType":"ElementaryTypeName","src":"2499:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2400,"indexed":false,"mutability":"mutable","name":"srcPoolId","nameLocation":"2530:9:25","nodeType":"VariableDeclaration","scope":2412,"src":"2522:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"2522:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2402,"indexed":false,"mutability":"mutable","name":"dstPoolId","nameLocation":"2553:9:25","nodeType":"VariableDeclaration","scope":2412,"src":"2545:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2401,"name":"uint256","nodeType":"ElementaryTypeName","src":"2545:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2404,"indexed":false,"mutability":"mutable","name":"dstGasForCall","nameLocation":"2576:13:25","nodeType":"VariableDeclaration","scope":2412,"src":"2568:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"2568:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2406,"indexed":false,"mutability":"mutable","name":"dstNativeAmount","nameLocation":"2603:15:25","nodeType":"VariableDeclaration","scope":2412,"src":"2595:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"2595:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2408,"indexed":false,"mutability":"mutable","name":"minAmountOut","nameLocation":"2632:12:25","nodeType":"VariableDeclaration","scope":2412,"src":"2624:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"2624:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2410,"indexed":false,"mutability":"mutable","name":"continuationWorkflow","nameLocation":"2656:20:25","nodeType":"VariableDeclaration","scope":2412,"src":"2650:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2409,"name":"bytes","nodeType":"ElementaryTypeName","src":"2650:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2412:268:25"},"src":"2381:300:25"},{"body":{"id":2427,"nodeType":"Block","src":"2756:99:25","statements":[{"expression":{"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2419,"name":"frontDoorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"2762:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2420,"name":"_frontDoorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"2781:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2762:36:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2422,"nodeType":"ExpressionStatement","src":"2762:36:25"},{"expression":{"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2423,"name":"stargateRouterAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"2804:21:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2424,"name":"_stargateRouterAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"2828:22:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2804:46:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2426,"nodeType":"ExpressionStatement","src":"2804:46:25"}]},"id":2428,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"_frontDoorAddress","nameLocation":"2705:17:25","nodeType":"VariableDeclaration","scope":2428,"src":"2697:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2413,"name":"address","nodeType":"ElementaryTypeName","src":"2697:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2416,"mutability":"mutable","name":"_stargateRouterAddress","nameLocation":"2732:22:25","nodeType":"VariableDeclaration","scope":2428,"src":"2724:30:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2415,"name":"address","nodeType":"ElementaryTypeName","src":"2724:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2696:59:25"},"returnParameters":{"id":2418,"nodeType":"ParameterList","parameters":[],"src":"2756:0:25"},"scope":2935,"src":"2685:170:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"canonicalName":"StargateBridgeAction.Locals","id":2444,"members":[{"constant":false,"id":2430,"mutability":"mutable","name":"lengthPrefix","nameLocation":"2960:12:25","nodeType":"VariableDeclaration","scope":2444,"src":"2952:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2952:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"args","nameLocation":"3003:4:25","nodeType":"VariableDeclaration","scope":2444,"src":"2978:29:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_storage_ptr","typeString":"struct StargateBridgeActionArgs"},"typeName":{"id":2432,"nodeType":"UserDefinedTypeName","pathNode":{"id":2431,"name":"StargateBridgeActionArgs","nameLocations":["2978:24:25"],"nodeType":"IdentifierPath","referencedDeclaration":2372,"src":"2978:24:25"},"referencedDeclaration":2372,"src":"2978:24:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_storage_ptr","typeString":"struct StargateBridgeActionArgs"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"dstActionAddressEncoded","nameLocation":"3019:23:25","nodeType":"VariableDeclaration","scope":2444,"src":"3013:29:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2434,"name":"bytes","nodeType":"ElementaryTypeName","src":"3013:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"minAmountOut","nameLocation":"3056:12:25","nodeType":"VariableDeclaration","scope":2444,"src":"3048:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"3048:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2440,"mutability":"mutable","name":"nativeInputAsset","nameLocation":"3086:16:25","nodeType":"VariableDeclaration","scope":2444,"src":"3074:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"},"typeName":{"id":2439,"nodeType":"UserDefinedTypeName","pathNode":{"id":2438,"name":"AssetAmount","nameLocations":["3074:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"3074:11:25"},"referencedDeclaration":66,"src":"3074:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"visibility":"internal"},{"constant":false,"id":2443,"mutability":"mutable","name":"erc20InputAsset","nameLocation":"3120:15:25","nodeType":"VariableDeclaration","scope":2444,"src":"3108:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"},"typeName":{"id":2442,"nodeType":"UserDefinedTypeName","pathNode":{"id":2441,"name":"AssetAmount","nameLocations":["3108:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"3108:11:25"},"referencedDeclaration":66,"src":"3108:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"visibility":"internal"}],"name":"Locals","nameLocation":"2939:6:25","nodeType":"StructDefinition","scope":2935,"src":"2932:208:25","visibility":"public"},{"baseFunctions":[47],"body":{"id":2800,"nodeType":"Block","src":"3278:3091:25","statements":[{"assignments":[2458],"declarations":[{"constant":false,"id":2458,"mutability":"mutable","name":"locals","nameLocation":"3298:6:25","nodeType":"VariableDeclaration","scope":2800,"src":"3284:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals"},"typeName":{"id":2457,"nodeType":"UserDefinedTypeName","pathNode":{"id":2456,"name":"Locals","nameLocations":["3284:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":2444,"src":"3284:6:25"},"referencedDeclaration":2444,"src":"3284:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_storage_ptr","typeString":"struct StargateBridgeAction.Locals"}},"visibility":"internal"}],"id":2459,"nodeType":"VariableDeclarationStatement","src":"3284:20:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2461,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"3318:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3336:6:25","memberName":"length","nodeType":"MemberAccess","src":"3318:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3346:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3318:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7468657265206d757374206265203220696e70757420617373657473","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3349:30:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_590e660aed693aa0f9d319191c32c446b71871c11dee5c13929b633f25f7a9ac","typeString":"literal_string \"there must be 2 input assets\""},"value":"there must be 2 input assets"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_590e660aed693aa0f9d319191c32c446b71871c11dee5c13929b633f25f7a9ac","typeString":"literal_string \"there must be 2 input assets\""}],"id":2460,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3310:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3310:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2467,"nodeType":"ExpressionStatement","src":"3310:70:25"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"baseExpression":{"id":2468,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"3390:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"}},"id":2470,"indexExpression":{"hexValue":"30","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3408:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_calldata_ptr","typeString":"struct AssetAmount calldata"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3411:5:25","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":63,"src":"3390:26:25","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_calldata_ptr","typeString":"struct Asset calldata"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3417:9:25","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":54,"src":"3390:36:25","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2473,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3430:9:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$72_$","typeString":"type(enum AssetType)"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3440:6:25","memberName":"Native","nodeType":"MemberAccess","referencedDeclaration":69,"src":"3430:16:25","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},"src":"3390:56:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"baseExpression":{"id":2505,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"3680:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"}},"id":2507,"indexExpression":{"hexValue":"31","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3698:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3680:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_calldata_ptr","typeString":"struct AssetAmount calldata"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3701:5:25","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":63,"src":"3680:26:25","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_calldata_ptr","typeString":"struct Asset calldata"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3707:9:25","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":54,"src":"3680:36:25","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2510,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3720:9:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$72_$","typeString":"type(enum AssetType)"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3730:6:25","memberName":"Native","nodeType":"MemberAccess","referencedDeclaration":69,"src":"3720:16:25","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},"src":"3680:56:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2546,"nodeType":"Block","src":"3966:55:25","statements":[{"expression":{"arguments":[{"hexValue":"6f6e6520696e707574206173736574206d757374206265206e6174697665","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3981:32:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_341516f60fb8577ba204e32e18bfdd1f3bcf9219299c2411ebc2e5ab9e051915","typeString":"literal_string \"one input asset must be native\""},"value":"one input asset must be native"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_341516f60fb8577ba204e32e18bfdd1f3bcf9219299c2411ebc2e5ab9e051915","typeString":"literal_string \"one input asset must be native\""}],"id":2542,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3974:6:25","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3974:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2545,"nodeType":"ExpressionStatement","src":"3974:40:25"}]},"id":2547,"nodeType":"IfStatement","src":"3676:345:25","trueBody":{"id":2541,"nodeType":"Block","src":"3738:222:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"baseExpression":{"id":2514,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"3754:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"}},"id":2516,"indexExpression":{"hexValue":"30","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3772:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3754:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_calldata_ptr","typeString":"struct AssetAmount calldata"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3775:5:25","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":63,"src":"3754:26:25","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_calldata_ptr","typeString":"struct Asset calldata"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3781:9:25","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":54,"src":"3754:36:25","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2519,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3794:9:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$72_$","typeString":"type(enum AssetType)"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3804:5:25","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":70,"src":"3794:15:25","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},"src":"3754:55:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6520696e707574206173736574206d75737420626520616e204552433230","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3811:34:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249","typeString":"literal_string \"one input asset must be an ERC20\""},"value":"one input asset must be an ERC20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249","typeString":"literal_string \"one input asset must be an ERC20\""}],"id":2513,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3746:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3746:100:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2524,"nodeType":"ExpressionStatement","src":"3746:100:25"},{"expression":{"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2525,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"3854:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2527,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3861:16:25","memberName":"nativeInputAsset","nodeType":"MemberAccess","referencedDeclaration":2440,"src":"3854:23:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2528,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"3880:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"}},"id":2530,"indexExpression":{"hexValue":"31","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3898:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3880:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_calldata_ptr","typeString":"struct AssetAmount calldata"}},"src":"3854:46:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":2532,"nodeType":"ExpressionStatement","src":"3854:46:25"},{"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2533,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"3908:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3915:15:25","memberName":"erc20InputAsset","nodeType":"MemberAccess","referencedDeclaration":2443,"src":"3908:22:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2536,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"3933:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"}},"id":2538,"indexExpression":{"hexValue":"30","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3951:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3933:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_calldata_ptr","typeString":"struct AssetAmount calldata"}},"src":"3908:45:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":2540,"nodeType":"ExpressionStatement","src":"3908:45:25"}]}},"id":2548,"nodeType":"IfStatement","src":"3386:635:25","trueBody":{"id":2504,"nodeType":"Block","src":"3448:222:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"baseExpression":{"id":2477,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"3464:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"}},"id":2479,"indexExpression":{"hexValue":"31","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3482:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3464:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_calldata_ptr","typeString":"struct AssetAmount calldata"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3485:5:25","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":63,"src":"3464:26:25","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_calldata_ptr","typeString":"struct Asset calldata"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3491:9:25","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":54,"src":"3464:36:25","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2482,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3504:9:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$72_$","typeString":"type(enum AssetType)"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3514:5:25","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":70,"src":"3504:15:25","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},"src":"3464:55:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6520696e707574206173736574206d75737420626520616e204552433230","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3521:34:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249","typeString":"literal_string \"one input asset must be an ERC20\""},"value":"one input asset must be an ERC20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249","typeString":"literal_string \"one input asset must be an ERC20\""}],"id":2476,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3456:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3456:100:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2487,"nodeType":"ExpressionStatement","src":"3456:100:25"},{"expression":{"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2488,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"3564:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3571:16:25","memberName":"nativeInputAsset","nodeType":"MemberAccess","referencedDeclaration":2440,"src":"3564:23:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2491,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"3590:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"}},"id":2493,"indexExpression":{"hexValue":"30","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3590:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_calldata_ptr","typeString":"struct AssetAmount calldata"}},"src":"3564:46:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":2495,"nodeType":"ExpressionStatement","src":"3564:46:25"},{"expression":{"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2496,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"3618:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3625:15:25","memberName":"erc20InputAsset","nodeType":"MemberAccess","referencedDeclaration":2443,"src":"3618:22:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2499,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"3643:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"}},"id":2501,"indexExpression":{"hexValue":"31","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3661:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3643:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_calldata_ptr","typeString":"struct AssetAmount calldata"}},"src":"3618:45:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":2503,"nodeType":"ExpressionStatement","src":"3618:45:25"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"baseExpression":{"id":2550,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4041:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"}},"id":2552,"indexExpression":{"hexValue":"30","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4041:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_calldata_ptr","typeString":"struct AssetAmount calldata"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4062:5:25","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":63,"src":"4041:26:25","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_calldata_ptr","typeString":"struct Asset calldata"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4068:9:25","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":54,"src":"4041:36:25","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2555,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"4081:9:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$72_$","typeString":"type(enum AssetType)"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4091:5:25","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":70,"src":"4081:15:25","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},"src":"4041:55:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"baseExpression":{"id":2558,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4100:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"}},"id":2560,"indexExpression":{"hexValue":"30","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4118:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4100:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_calldata_ptr","typeString":"struct AssetAmount calldata"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4121:5:25","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":63,"src":"4100:26:25","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_calldata_ptr","typeString":"struct Asset calldata"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4127:9:25","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":54,"src":"4100:36:25","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2563,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"4140:9:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$72_$","typeString":"type(enum AssetType)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4150:6:25","memberName":"Native","nodeType":"MemberAccess","referencedDeclaration":69,"src":"4140:16:25","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},"src":"4100:56:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4041:115:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"74686520696e707574206173736574206d75737420626520616e204552433230206f72204e6174697665","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4164:44:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f03c7f0873af184bf69334aa0d702e8990fbd46f725ffc3fd003cc841705e0c","typeString":"literal_string \"the input asset must be an ERC20 or Native\""},"value":"the input asset must be an ERC20 or Native"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5f03c7f0873af184bf69334aa0d702e8990fbd46f725ffc3fd003cc841705e0c","typeString":"literal_string \"the input asset must be an ERC20 or Native\""}],"id":2549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4026:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4026:188:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2569,"nodeType":"ExpressionStatement","src":"4026:188:25"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"baseExpression":{"id":2570,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4261:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"}},"id":2572,"indexExpression":{"hexValue":"30","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4279:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4261:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_calldata_ptr","typeString":"struct AssetAmount calldata"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4282:5:25","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":63,"src":"4261:26:25","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_calldata_ptr","typeString":"struct Asset calldata"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4288:9:25","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":54,"src":"4261:36:25","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2575,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"4301:9:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$72_$","typeString":"type(enum AssetType)"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4311:5:25","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":70,"src":"4301:15:25","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},"src":"4261:55:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2591,"nodeType":"IfStatement","src":"4257:158:25","trueBody":{"id":2590,"nodeType":"Block","src":"4318:97:25","statements":[{"expression":{"arguments":[{"expression":{"expression":{"baseExpression":{"id":2579,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4339:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"}},"id":2581,"indexExpression":{"hexValue":"30","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4357:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4339:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_calldata_ptr","typeString":"struct AssetAmount calldata"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4360:5:25","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":63,"src":"4339:26:25","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_calldata_ptr","typeString":"struct Asset calldata"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4366:12:25","memberName":"assetAddress","nodeType":"MemberAccess","referencedDeclaration":56,"src":"4339:39:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":2584,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4380:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"}},"id":2586,"indexExpression":{"hexValue":"30","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4398:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4380:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_calldata_ptr","typeString":"struct AssetAmount calldata"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4401:6:25","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":65,"src":"4380:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2578,"name":"approveErc20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"4326:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4326:82:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2589,"nodeType":"ExpressionStatement","src":"4326:82:25"}]}},{"expression":{"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2592,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4421:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4428:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"4421:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2597,"name":"argData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"4446:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":2598,"name":"StargateBridgeActionArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"4456:24:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StargateBridgeActionArgs_$2372_storage_ptr_$","typeString":"type(struct StargateBridgeActionArgs storage pointer)"}}],"id":2599,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4455:26:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StargateBridgeActionArgs_$2372_storage_ptr_$","typeString":"type(struct StargateBridgeActionArgs storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_struct$_StargateBridgeActionArgs_$2372_storage_ptr_$","typeString":"type(struct StargateBridgeActionArgs storage pointer)"}],"expression":{"id":2595,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4435:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4439:6:25","memberName":"decode","nodeType":"MemberAccess","src":"4435:10:25","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4435:47:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"src":"4421:61:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2602,"nodeType":"ExpressionStatement","src":"4421:61:25"},{"expression":{"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2603,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4549:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4556:23:25","memberName":"dstActionAddressEncoded","nodeType":"MemberAccess","referencedDeclaration":2435,"src":"4549:30:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"expression":{"id":2608,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4599:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4606:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"4599:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4611:16:25","memberName":"dstActionAddress","nodeType":"MemberAccess","referencedDeclaration":2349,"src":"4599:28:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2606,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4582:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4586:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"4582:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4549:79:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2613,"nodeType":"ExpressionStatement","src":"4549:79:25"},{"condition":{"expression":{"expression":{"id":2614,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4638:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4645:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"4638:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4650:21:25","memberName":"minAmountOutIsPercent","nodeType":"MemberAccess","referencedDeclaration":2365,"src":"4638:33:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2642,"nodeType":"Block","src":"4782:61:25","statements":[{"expression":{"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2634,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4790:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4797:12:25","memberName":"minAmountOut","nodeType":"MemberAccess","referencedDeclaration":2437,"src":"4790:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":2637,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4812:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4819:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"4812:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4824:12:25","memberName":"minAmountOut","nodeType":"MemberAccess","referencedDeclaration":2363,"src":"4812:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4790:46:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2641,"nodeType":"ExpressionStatement","src":"4790:46:25"}]},"id":2643,"nodeType":"IfStatement","src":"4634:209:25","trueBody":{"id":2633,"nodeType":"Block","src":"4673:103:25","statements":[{"expression":{"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2617,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4681:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4688:12:25","memberName":"minAmountOut","nodeType":"MemberAccess","referencedDeclaration":2437,"src":"4681:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2620,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4704:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"}},"id":2622,"indexExpression":{"hexValue":"30","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4722:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4704:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_calldata_ptr","typeString":"struct AssetAmount calldata"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4725:6:25","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":65,"src":"4704:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"expression":{"id":2624,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4734:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4741:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"4734:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4746:12:25","memberName":"minAmountOut","nodeType":"MemberAccess","referencedDeclaration":2363,"src":"4734:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:54:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4703:56:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130305f303030","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4762:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100_000"},"src":"4703:66:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4681:88:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2632,"nodeType":"ExpressionStatement","src":"4681:88:25"}]}},{"eventCall":{"arguments":[{"expression":{"expression":{"id":2645,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4887:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4894:16:25","memberName":"nativeInputAsset","nodeType":"MemberAccess","referencedDeclaration":2440,"src":"4887:23:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":2647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4911:6:25","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":65,"src":"4887:30:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":2648,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4942:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4949:15:25","memberName":"erc20InputAsset","nodeType":"MemberAccess","referencedDeclaration":2443,"src":"4942:22:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":2650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4965:6:25","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":65,"src":"4942:29:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":2651,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4995:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5002:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"4995:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5007:16:25","memberName":"dstActionAddress","nodeType":"MemberAccess","referencedDeclaration":2349,"src":"4995:28:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":2654,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5068:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5075:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"5068:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5080:10:25","memberName":"dstChainId","nodeType":"MemberAccess","referencedDeclaration":2353,"src":"5068:22:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"expression":{"id":2657,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5098:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5105:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"5098:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5110:9:25","memberName":"srcPoolId","nodeType":"MemberAccess","referencedDeclaration":2355,"src":"5098:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":2660,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5127:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5134:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"5127:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5139:9:25","memberName":"dstPoolId","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"5127:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":2663,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5156:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5163:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"5156:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5168:13:25","memberName":"dstGasForCall","nodeType":"MemberAccess","referencedDeclaration":2359,"src":"5156:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":2666,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5189:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5196:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"5189:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5201:15:25","memberName":"dstNativeAmount","nodeType":"MemberAccess","referencedDeclaration":2361,"src":"5189:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2669,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5224:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5231:12:25","memberName":"minAmountOut","nodeType":"MemberAccess","referencedDeclaration":2437,"src":"5224:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":2671,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5251:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5258:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"5251:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5263:20:25","memberName":"continuationWorkflow","nodeType":"MemberAccess","referencedDeclaration":2367,"src":"5251:32:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2644,"name":"StargateBridgeParamsEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4854:25:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,address,uint16,uint256,uint256,uint256,uint256,uint256,bytes memory)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4854:435:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2675,"nodeType":"EmitStatement","src":"4849:440:25"},{"expression":{"arguments":[{"expression":{"expression":{"id":2684,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5386:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2685,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5393:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"5386:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5398:10:25","memberName":"dstChainId","nodeType":"MemberAccess","referencedDeclaration":2353,"src":"5386:22:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"expression":{"id":2687,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5416:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5423:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"5416:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5428:9:25","memberName":"srcPoolId","nodeType":"MemberAccess","referencedDeclaration":2355,"src":"5416:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":2690,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5445:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5452:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"5445:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5457:9:25","memberName":"dstPoolId","nodeType":"MemberAccess","referencedDeclaration":2357,"src":"5445:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":2695,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5482:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5486:6:25","memberName":"sender","nodeType":"MemberAccess","src":"5482:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5474:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2693,"name":"address","nodeType":"ElementaryTypeName","src":"5474:8:25","stateMutability":"payable","typeDescriptions":{}}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5474:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"expression":{"id":2698,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5519:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5526:15:25","memberName":"erc20InputAsset","nodeType":"MemberAccess","referencedDeclaration":2443,"src":"5519:22:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":2700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5542:6:25","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":65,"src":"5519:29:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2701,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5556:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5563:12:25","memberName":"minAmountOut","nodeType":"MemberAccess","referencedDeclaration":2437,"src":"5556:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"expression":{"id":2705,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5607:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2706,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5614:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"5607:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5619:13:25","memberName":"dstGasForCall","nodeType":"MemberAccess","referencedDeclaration":2359,"src":"5607:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":2708,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5634:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2709,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5641:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"5634:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5646:15:25","memberName":"dstNativeAmount","nodeType":"MemberAccess","referencedDeclaration":2361,"src":"5634:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"expression":{"id":2713,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5680:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2714,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5687:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"5680:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5692:14:25","memberName":"dstUserAddress","nodeType":"MemberAccess","referencedDeclaration":2351,"src":"5680:26:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2711,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5663:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5667:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"5663:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5663:44:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2703,"name":"IStargateRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"5583:15:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStargateRouter_$2104_$","typeString":"type(contract IStargateRouter)"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5599:7:25","memberName":"lzTxObj","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"5583:23:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_lzTxObj_$1994_storage_ptr_$","typeString":"type(struct IStargateRouter.lzTxObj storage pointer)"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5583:125:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_lzTxObj_$1994_memory_ptr","typeString":"struct IStargateRouter.lzTxObj memory"}},{"expression":{"id":2718,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5716:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5723:23:25","memberName":"dstActionAddressEncoded","nodeType":"MemberAccess","referencedDeclaration":2435,"src":"5716:30:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"expression":{"id":2720,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5754:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5761:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"5754:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5766:20:25","memberName":"continuationWorkflow","nodeType":"MemberAccess","referencedDeclaration":2367,"src":"5754:32:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_lzTxObj_$1994_memory_ptr","typeString":"struct IStargateRouter.lzTxObj memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_lzTxObj_$1994_memory_ptr","typeString":"struct IStargateRouter.lzTxObj memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2677,"name":"stargateRouterAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"5312:21:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2676,"name":"IStargateRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"5296:15:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStargateRouter_$2104_$","typeString":"type(contract IStargateRouter)"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5296:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStargateRouter_$2104","typeString":"contract IStargateRouter"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5335:4:25","memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":2025,"src":"5296:43:25","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint16_$_t_uint256_$_t_uint256_$_t_address_payable_$_t_uint256_$_t_uint256_$_t_struct$_lzTxObj_$1994_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,uint256,uint256,address payable,uint256,uint256,struct IStargateRouter.lzTxObj memory,bytes memory,bytes memory) payable external"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"expression":{"id":2680,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5347:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5354:16:25","memberName":"nativeInputAsset","nodeType":"MemberAccess","referencedDeclaration":2440,"src":"5347:23:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":2682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5371:6:25","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":65,"src":"5347:30:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5296:82:25","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint16_$_t_uint256_$_t_uint256_$_t_address_payable_$_t_uint256_$_t_uint256_$_t_struct$_lzTxObj_$1994_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$value","typeString":"function (uint16,uint256,uint256,address payable,uint256,uint256,struct IStargateRouter.lzTxObj memory,bytes memory,bytes memory) payable external"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5296:496:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2724,"nodeType":"ExpressionStatement","src":"5296:496:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":2725,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5802:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5809:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"5802:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5814:20:25","memberName":"continuationWorkflow","nodeType":"MemberAccess","referencedDeclaration":2367,"src":"5802:32:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:6:25","memberName":"length","nodeType":"MemberAccess","src":"5802:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5844:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5802:43:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2785,"nodeType":"IfStatement","src":"5798:486:25","trueBody":{"id":2784,"nodeType":"Block","src":"5847:437:25","statements":[{"assignments":[2735],"declarations":[{"constant":false,"id":2735,"mutability":"mutable","name":"expectedAssets","nameLocation":"5876:14:25","nodeType":"VariableDeclaration","scope":2784,"src":"5855:35:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount[]"},"typeName":{"baseType":{"id":2733,"nodeType":"UserDefinedTypeName","pathNode":{"id":2732,"name":"AssetAmount","nameLocations":["5855:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"5855:11:25"},"referencedDeclaration":66,"src":"5855:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":2734,"nodeType":"ArrayTypeName","src":"5855:13:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}},"visibility":"internal"}],"id":2742,"initialValue":{"arguments":[{"hexValue":"31","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5911:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5893:17:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct AssetAmount memory[] memory)"},"typeName":{"baseType":{"id":2737,"nodeType":"UserDefinedTypeName","pathNode":{"id":2736,"name":"AssetAmount","nameLocations":["5897:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"5897:11:25"},"referencedDeclaration":66,"src":"5897:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":2738,"nodeType":"ArrayTypeName","src":"5897:13:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}}},"id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5893:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5855:58:25"},{"expression":{"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2743,"name":"expectedAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"5921:14:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},"id":2745,"indexExpression":{"hexValue":"30","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5936:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5921:17:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2746,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5941:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5948:15:25","memberName":"erc20InputAsset","nodeType":"MemberAccess","referencedDeclaration":2443,"src":"5941:22:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"src":"5921:42:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":2749,"nodeType":"ExpressionStatement","src":"5921:42:25"},{"expression":{"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2750,"name":"expectedAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"5971:14:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},"id":2752,"indexExpression":{"hexValue":"30","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5971:17:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":2753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5989:6:25","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":65,"src":"5971:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2754,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5998:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6005:12:25","memberName":"minAmountOut","nodeType":"MemberAccess","referencedDeclaration":2437,"src":"5998:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5971:46:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2757,"nodeType":"ExpressionStatement","src":"5971:46:25"},{"assignments":[2759],"declarations":[{"constant":false,"id":2759,"mutability":"mutable","name":"continuationFlow","nameLocation":"6038:16:25","nodeType":"VariableDeclaration","scope":2784,"src":"6025:29:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2758,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2771,"initialValue":{"condition":{"expression":{"expression":{"id":2760,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"6057:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6064:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"6057:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6069:34:25","memberName":"includeContinuationWorkflowInEvent","nodeType":"MemberAccess","referencedDeclaration":2371,"src":"6057:46:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"hexValue":"30","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6151:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6141:9:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2766,"name":"bytes","nodeType":"ElementaryTypeName","src":"6145:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6141:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6057:96:25","trueExpression":{"expression":{"expression":{"id":2763,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"6106:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6113:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"6106:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2765,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6118:20:25","memberName":"continuationWorkflow","nodeType":"MemberAccess","referencedDeclaration":2367,"src":"6106:32:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6025:128:25"},{"eventCall":{"arguments":[{"hexValue":"73746172676174652d627269646765","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6182:17:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e1550899f8bc1bc6c149effec0f09a9ee45bec22ed4d270ef087ee96a82320e","typeString":"literal_string \"stargate-bridge\""},"value":"stargate-bridge"},{"expression":{"expression":{"id":2774,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"6201:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6208:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"6201:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2776,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6213:10:25","memberName":"dstChainId","nodeType":"MemberAccess","referencedDeclaration":2353,"src":"6201:22:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"expression":{"id":2777,"name":"locals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"6225:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Locals_$2444_memory_ptr","typeString":"struct StargateBridgeAction.Locals memory"}},"id":2778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6232:4:25","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"6225:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","typeString":"struct StargateBridgeActionArgs memory"}},"id":2779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6237:5:25","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"6225:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2780,"name":"expectedAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"6244:14:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},{"id":2781,"name":"continuationFlow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"6260:16:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e1550899f8bc1bc6c149effec0f09a9ee45bec22ed4d270ef087ee96a82320e","typeString":"literal_string \"stargate-bridge\""},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2772,"name":"WorkflowBridged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"6166:15:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint16_$_t_uint256_$_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (string memory,uint16,uint256,struct AssetAmount memory[] memory,bytes memory)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6166:111:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2783,"nodeType":"EmitStatement","src":"6161:116:25"}]}},{"expression":{"arguments":[{"id":2787,"name":"inputAssetAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"6316:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"}},{"arguments":[{"hexValue":"30","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6353:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6335:17:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct AssetAmount memory[] memory)"},"typeName":{"baseType":{"id":2789,"nodeType":"UserDefinedTypeName","pathNode":{"id":2788,"name":"AssetAmount","nameLocations":["6339:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"6339:11:25"},"referencedDeclaration":66,"src":"6339:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":2790,"nodeType":"ArrayTypeName","src":"6339:13:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}}},"id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6335:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},{"id":2795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"6357:2:25","subExpression":{"hexValue":"32","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6358:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_2_by_1","typeString":"int_const -2"}},{"id":2797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"6361:2:25","subExpression":{"hexValue":"31","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6362:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount calldata[] calldata"},{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"},{"typeIdentifier":"t_rational_minus_2_by_1","typeString":"int_const -2"},{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":2786,"name":"WorkflowStepResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"6297:18:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_WorkflowStepResult_$138_storage_ptr_$","typeString":"type(struct WorkflowStepResult storage pointer)"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6297:67:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult memory"}},"functionReturnParameters":2455,"id":2799,"nodeType":"Return","src":"6290:74:25"}]},"functionSelector":"7bb26ca7","id":2801,"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"3153:7:25","nodeType":"FunctionDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"mutability":"mutable","name":"inputAssetAmounts","nameLocation":"3184:17:25","nodeType":"VariableDeclaration","scope":2801,"src":"3161:40:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AssetAmount[]"},"typeName":{"baseType":{"id":2446,"nodeType":"UserDefinedTypeName","pathNode":{"id":2445,"name":"AssetAmount","nameLocations":["3161:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"3161:11:25"},"referencedDeclaration":66,"src":"3161:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":2447,"nodeType":"ArrayTypeName","src":"3161:13:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}},"visibility":"internal"},{"constant":false,"id":2450,"mutability":"mutable","name":"argData","nameLocation":"3218:7:25","nodeType":"VariableDeclaration","scope":2801,"src":"3203:22:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2449,"name":"bytes","nodeType":"ElementaryTypeName","src":"3203:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3160:66:25"},"returnParameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2801,"src":"3251:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_memory_ptr","typeString":"struct WorkflowStepResult"},"typeName":{"id":2453,"nodeType":"UserDefinedTypeName","pathNode":{"id":2452,"name":"WorkflowStepResult","nameLocations":["3251:18:25"],"nodeType":"IdentifierPath","referencedDeclaration":138,"src":"3251:18:25"},"referencedDeclaration":138,"src":"3251:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_WorkflowStepResult_$138_storage_ptr","typeString":"struct WorkflowStepResult"}},"visibility":"internal"}],"src":"3250:27:25"},"scope":2935,"src":"3144:3225:25","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":2822,"nodeType":"Block","src":"6442:106:25","statements":[{"assignments":[2810],"declarations":[{"constant":false,"id":2810,"mutability":"mutable","name":"inputToken","nameLocation":"6455:10:25","nodeType":"VariableDeclaration","scope":2822,"src":"6448:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"},"typeName":{"id":2809,"nodeType":"UserDefinedTypeName","pathNode":{"id":2808,"name":"IERC20","nameLocations":["6448:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"6448:6:25"},"referencedDeclaration":1201,"src":"6448:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"visibility":"internal"}],"id":2814,"initialValue":{"arguments":[{"id":2812,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"6475:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2811,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"6468:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1201_$","typeString":"type(contract IERC20)"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6468:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"6448:40:25"},{"expression":{"arguments":[{"id":2818,"name":"stargateRouterAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"6513:21:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2819,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"6536:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2815,"name":"inputToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"6494:10:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6505:7:25","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1188,"src":"6494:18:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6494:49:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2821,"nodeType":"ExpressionStatement","src":"6494:49:25"}]},"id":2823,"implemented":true,"kind":"function","modifiers":[],"name":"approveErc20","nameLocation":"6382:12:25","nodeType":"FunctionDefinition","parameters":{"id":2806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"tokenAddress","nameLocation":"6403:12:25","nodeType":"VariableDeclaration","scope":2823,"src":"6395:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2802,"name":"address","nodeType":"ElementaryTypeName","src":"6395:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2805,"mutability":"mutable","name":"amount","nameLocation":"6425:6:25","nodeType":"VariableDeclaration","scope":2823,"src":"6417:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2804,"name":"uint256","nodeType":"ElementaryTypeName","src":"6417:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6394:38:25"},"returnParameters":{"id":2807,"nodeType":"ParameterList","parameters":[],"src":"6442:0:25"},"scope":2935,"src":"6373:175:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1979],"body":{"id":2933,"nodeType":"Block","src":"6883:981:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2839,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6897:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6901:6:25","memberName":"sender","nodeType":"MemberAccess","src":"6897:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2841,"name":"stargateRouterAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"6911:21:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6897:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c79205374617267617465206973207065726d697474656420746f2063616c6c20736752656365697665","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6934:46:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_5a267dde6b27d43e272bb2037a542b88bf55a0b6a5c36fa1965ab7e904ec9984","typeString":"literal_string \"only Stargate is permitted to call sgReceive\""},"value":"only Stargate is permitted to call sgReceive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5a267dde6b27d43e272bb2037a542b88bf55a0b6a5c36fa1965ab7e904ec9984","typeString":"literal_string \"only Stargate is permitted to call sgReceive\""}],"id":2838,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6889:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6889:92:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2845,"nodeType":"ExpressionStatement","src":"6889:92:25"},{"assignments":[2848],"declarations":[{"constant":false,"id":2848,"mutability":"mutable","name":"bridgePayload","nameLocation":"7008:13:25","nodeType":"VariableDeclaration","scope":2933,"src":"6987:34:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BridgePayload_$83_memory_ptr","typeString":"struct BridgePayload"},"typeName":{"id":2847,"nodeType":"UserDefinedTypeName","pathNode":{"id":2846,"name":"BridgePayload","nameLocations":["6987:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":83,"src":"6987:13:25"},"referencedDeclaration":83,"src":"6987:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_BridgePayload_$83_storage_ptr","typeString":"struct BridgePayload"}},"visibility":"internal"}],"id":2855,"initialValue":{"arguments":[{"id":2851,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"7035:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2852,"name":"BridgePayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"7045:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BridgePayload_$83_storage_ptr_$","typeString":"type(struct BridgePayload storage pointer)"}}],"id":2853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7044:15:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BridgePayload_$83_storage_ptr_$","typeString":"type(struct BridgePayload storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_struct$_BridgePayload_$83_storage_ptr_$","typeString":"type(struct BridgePayload storage pointer)"}],"expression":{"id":2849,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7024:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7028:6:25","memberName":"decode","nodeType":"MemberAccess","src":"7024:10:25","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7024:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BridgePayload_$83_memory_ptr","typeString":"struct BridgePayload memory"}},"nodeType":"VariableDeclarationStatement","src":"6987:73:25"},{"eventCall":{"arguments":[{"id":2857,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"7087:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2858,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"7101:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2859,"name":"bridgePayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"7109:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_BridgePayload_$83_memory_ptr","typeString":"struct BridgePayload memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_BridgePayload_$83_memory_ptr","typeString":"struct BridgePayload memory"}],"id":2856,"name":"SgReceiveCalled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"7071:15:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_BridgePayload_$83_memory_ptr_$returns$__$","typeString":"function (address,uint256,struct BridgePayload memory)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7071:52:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2861,"nodeType":"EmitStatement","src":"7066:57:25"},{"assignments":[2864],"declarations":[{"constant":false,"id":2864,"mutability":"mutable","name":"startingToken","nameLocation":"7137:13:25","nodeType":"VariableDeclaration","scope":2933,"src":"7130:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"},"typeName":{"id":2863,"nodeType":"UserDefinedTypeName","pathNode":{"id":2862,"name":"IERC20","nameLocations":["7130:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"7130:6:25"},"referencedDeclaration":1201,"src":"7130:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"visibility":"internal"}],"id":2868,"initialValue":{"arguments":[{"id":2866,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"7160:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2865,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"7153:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1201_$","typeString":"type(contract IERC20)"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7153:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"7130:43:25"},{"expression":{"arguments":[{"id":2872,"name":"startingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"7211:13:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},{"id":2873,"name":"frontDoorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"7226:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2874,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"7244:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2869,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"7179:9:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$1543_$","typeString":"type(library SafeERC20)"}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7189:21:25","memberName":"safeIncreaseAllowance","nodeType":"MemberAccess","referencedDeclaration":1400,"src":"7179:31:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1201_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7179:72:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2876,"nodeType":"ExpressionStatement","src":"7179:72:25"},{"assignments":[2881],"declarations":[{"constant":false,"id":2881,"mutability":"mutable","name":"startingAssets","nameLocation":"7279:14:25","nodeType":"VariableDeclaration","scope":2933,"src":"7258:35:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount[]"},"typeName":{"baseType":{"id":2879,"nodeType":"UserDefinedTypeName","pathNode":{"id":2878,"name":"AssetAmount","nameLocations":["7258:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"7258:11:25"},"referencedDeclaration":66,"src":"7258:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":2880,"nodeType":"ArrayTypeName","src":"7258:13:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}},"visibility":"internal"}],"id":2888,"initialValue":{"arguments":[{"hexValue":"31","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7314:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7296:17:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct AssetAmount memory[] memory)"},"typeName":{"baseType":{"id":2883,"nodeType":"UserDefinedTypeName","pathNode":{"id":2882,"name":"AssetAmount","nameLocations":["7300:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"7300:11:25"},"referencedDeclaration":66,"src":"7300:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":2884,"nodeType":"ArrayTypeName","src":"7300:13:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}}},"id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7296:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7258:58:25"},{"expression":{"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2889,"name":"startingAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"7322:14:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}},"id":2891,"indexExpression":{"hexValue":"30","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7337:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7322:17:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":2894,"name":"AssetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"7360:9:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$72_$","typeString":"type(enum AssetType)"}},"id":2895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7370:5:25","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":70,"src":"7360:15:25","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"}},{"id":2896,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"7377:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_AssetType_$72","typeString":"enum AssetType"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2893,"name":"Asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"7354:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Asset_$57_storage_ptr_$","typeString":"type(struct Asset storage pointer)"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7354:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$57_memory_ptr","typeString":"struct Asset memory"}},{"id":2898,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"7392:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Asset_$57_memory_ptr","typeString":"struct Asset memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2892,"name":"AssetAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"7342:11:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AssetAmount_$66_storage_ptr_$","typeString":"type(struct AssetAmount storage pointer)"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7342:57:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"src":"7322:77:25","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_memory_ptr","typeString":"struct AssetAmount memory"}},"id":2901,"nodeType":"ExpressionStatement","src":"7322:77:25"},{"assignments":[2904],"declarations":[{"constant":false,"id":2904,"mutability":"mutable","name":"runner","nameLocation":"7421:6:25","nodeType":"VariableDeclaration","scope":2933,"src":"7405:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWorkflowRunner_$28","typeString":"contract IWorkflowRunner"},"typeName":{"id":2903,"nodeType":"UserDefinedTypeName","pathNode":{"id":2902,"name":"IWorkflowRunner","nameLocations":["7405:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":28,"src":"7405:15:25"},"referencedDeclaration":28,"src":"7405:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IWorkflowRunner_$28","typeString":"contract IWorkflowRunner"}},"visibility":"internal"}],"id":2908,"initialValue":{"arguments":[{"id":2906,"name":"frontDoorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"7446:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2905,"name":"IWorkflowRunner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"7430:15:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWorkflowRunner_$28_$","typeString":"type(contract IWorkflowRunner)"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7430:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWorkflowRunner_$28","typeString":"contract IWorkflowRunner"}},"nodeType":"VariableDeclarationStatement","src":"7405:58:25"},{"clauses":[{"block":{"id":2919,"nodeType":"Block","src":"7640:53:25","statements":[]},"errorName":"","id":2920,"nodeType":"TryCatchClause","src":"7640:53:25"},{"block":{"id":2930,"nodeType":"Block","src":"7700:160:25","statements":[{"expression":{"arguments":[{"id":2924,"name":"startingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"7804:13:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"}},{"expression":{"id":2925,"name":"bridgePayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"7819:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_BridgePayload_$83_memory_ptr","typeString":"struct BridgePayload memory"}},"id":2926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7833:11:25","memberName":"userAddress","nodeType":"MemberAccess","referencedDeclaration":77,"src":"7819:25:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2927,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"7846:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1201","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2921,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"7781:9:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$1543_$","typeString":"type(library SafeERC20)"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7791:12:25","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1294,"src":"7781:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1201_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7781:72:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2929,"nodeType":"ExpressionStatement","src":"7781:72:25"}]},"errorName":"","id":2931,"nodeType":"TryCatchClause","src":"7694:166:25"}],"externalCall":{"arguments":[{"expression":{"id":2911,"name":"bridgePayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"7552:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_BridgePayload_$83_memory_ptr","typeString":"struct BridgePayload memory"}},"id":2912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7566:11:25","memberName":"userAddress","nodeType":"MemberAccess","referencedDeclaration":77,"src":"7552:25:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2913,"name":"bridgePayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"7579:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_BridgePayload_$83_memory_ptr","typeString":"struct BridgePayload memory"}},"id":2914,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7593:5:25","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":79,"src":"7579:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2915,"name":"bridgePayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"7600:13:25","typeDescriptions":{"typeIdentifier":"t_struct$_BridgePayload_$83_memory_ptr","typeString":"struct BridgePayload memory"}},"id":2916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7614:8:25","memberName":"workflow","nodeType":"MemberAccess","referencedDeclaration":82,"src":"7600:22:25","typeDescriptions":{"typeIdentifier":"t_struct$_Workflow_$93_memory_ptr","typeString":"struct Workflow memory"}},{"id":2917,"name":"startingAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"7624:14:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Workflow_$93_memory_ptr","typeString":"struct Workflow memory"},{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount memory[] memory"}],"expression":{"id":2909,"name":"runner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"7528:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IWorkflowRunner_$28","typeString":"contract IWorkflowRunner"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7535:16:25","memberName":"continueWorkflow","nodeType":"MemberAccess","referencedDeclaration":27,"src":"7528:23:25","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_uint256_$_t_struct$_Workflow_$93_memory_ptr_$_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256,struct Workflow memory,struct AssetAmount memory[] memory) payable external"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7528:111:25","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2932,"nodeType":"TryStatement","src":"7524:336:25"}]},"functionSelector":"ab8236f3","id":2934,"implemented":true,"kind":"function","modifiers":[],"name":"sgReceive","nameLocation":"6561:9:25","nodeType":"FunctionDefinition","parameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2934,"src":"6576:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2824,"name":"uint16","nodeType":"ElementaryTypeName","src":"6576:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2934,"src":"6629:12:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2826,"name":"bytes","nodeType":"ElementaryTypeName","src":"6629:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2934,"src":"6676:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"6676:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"tokenAddress","nameLocation":"6728:12:25","nodeType":"VariableDeclaration","scope":2934,"src":"6720:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"6720:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"amount","nameLocation":"6795:6:25","nodeType":"VariableDeclaration","scope":2934,"src":"6787:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"6787:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2835,"mutability":"mutable","name":"payload","nameLocation":"6862:7:25","nodeType":"VariableDeclaration","scope":2934,"src":"6849:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2834,"name":"bytes","nodeType":"ElementaryTypeName","src":"6849:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6570:303:25"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[],"src":"6883:0:25"},"scope":2935,"src":"6552:1312:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2936,"src":"1823:6043:25","usedErrors":[]}],"src":"32:7835:25"},"id":25},"contracts/WorkflowContinuingStep.sol":{"ast":{"absolutePath":"contracts/WorkflowContinuingStep.sol","exportedSymbols":{"Asset":[57],"AssetAmount":[66],"AssetType":[72],"IWorkflowStep":[48],"WorkflowContinuingStep":[2955],"WorkflowStepResult":[138]},"id":2956,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2937,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"32:24:26"},{"absolutePath":"@freemarket/core/contracts/IWorkflowStep.sol","file":"@freemarket/core/contracts/IWorkflowStep.sol","id":2938,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2956,"sourceUnit":49,"src":"58:54:26","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2939,"name":"IWorkflowStep","nameLocations":["158:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":48,"src":"158:13:26"},"id":2940,"nodeType":"InheritanceSpecifier","src":"158:13:26"}],"canonicalName":"WorkflowContinuingStep","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":2955,"linearizedBaseContracts":[2955,48],"name":"WorkflowContinuingStep","nameLocation":"132:22:26","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"92cabcced306320fcb4c1a1d8c0cec733aea48602b9740e521a95ae20030009d","id":2954,"name":"WorkflowBridged","nameLocation":"182:15:26","nodeType":"EventDefinition","parameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"indexed":false,"mutability":"mutable","name":"stepType","nameLocation":"205:8:26","nodeType":"VariableDeclaration","scope":2954,"src":"198:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2941,"name":"string","nodeType":"ElementaryTypeName","src":"198:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2944,"indexed":false,"mutability":"mutable","name":"targetChain","nameLocation":"222:11:26","nodeType":"VariableDeclaration","scope":2954,"src":"215:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2943,"name":"uint16","nodeType":"ElementaryTypeName","src":"215:6:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2946,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"243:5:26","nodeType":"VariableDeclaration","scope":2954,"src":"235:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2945,"name":"uint256","nodeType":"ElementaryTypeName","src":"235:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2950,"indexed":false,"mutability":"mutable","name":"expectedAssets","nameLocation":"264:14:26","nodeType":"VariableDeclaration","scope":2954,"src":"250:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","typeString":"struct AssetAmount[]"},"typeName":{"baseType":{"id":2948,"nodeType":"UserDefinedTypeName","pathNode":{"id":2947,"name":"AssetAmount","nameLocations":["250:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"250:11:26"},"referencedDeclaration":66,"src":"250:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_AssetAmount_$66_storage_ptr","typeString":"struct AssetAmount"}},"id":2949,"nodeType":"ArrayTypeName","src":"250:13:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetAmount_$66_storage_$dyn_storage_ptr","typeString":"struct AssetAmount[]"}},"visibility":"internal"},{"constant":false,"id":2952,"indexed":false,"mutability":"mutable","name":"continuationWorkflow","nameLocation":"286:20:26","nodeType":"VariableDeclaration","scope":2954,"src":"280:26:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2951,"name":"bytes","nodeType":"ElementaryTypeName","src":"280:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"197:110:26"},"src":"176:132:26"}],"scope":2956,"src":"114:196:26","usedErrors":[]}],"src":"32:279:26"},"id":26}},"contracts":{"@freemarket/core/contracts/IWorkflowRunner.sol":{"IWorkflowRunner":{"abi":[{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"components":[{"internalType":"address","name":"workflowRunnerAddress","type":"address"},{"components":[{"internalType":"uint16","name":"stepTypeId","type":"uint16"},{"internalType":"address","name":"stepAddress","type":"address"},{"components":[{"internalType":"bool","name":"sourceIsCaller","type":"bool"},{"internalType":"bool","name":"amountIsPercent","type":"bool"},{"components":[{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"}],"internalType":"struct Asset","name":"asset","type":"tuple"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct WorkflowStepInputAsset[]","name":"inputAssets","type":"tuple[]"},{"internalType":"bytes","name":"argData","type":"bytes"},{"internalType":"int16","name":"nextStepIndex","type":"int16"}],"internalType":"struct WorkflowStep[]","name":"steps","type":"tuple[]"}],"internalType":"struct Workflow","name":"workflow","type":"tuple"},{"components":[{"components":[{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"}],"internalType":"struct Asset","name":"asset","type":"tuple"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct AssetAmount[]","name":"startingAssets","type":"tuple[]"}],"name":"continueWorkflow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"workflowRunnerAddress","type":"address"},{"components":[{"internalType":"uint16","name":"stepTypeId","type":"uint16"},{"internalType":"address","name":"stepAddress","type":"address"},{"components":[{"internalType":"bool","name":"sourceIsCaller","type":"bool"},{"internalType":"bool","name":"amountIsPercent","type":"bool"},{"components":[{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"}],"internalType":"struct Asset","name":"asset","type":"tuple"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct WorkflowStepInputAsset[]","name":"inputAssets","type":"tuple[]"},{"internalType":"bytes","name":"argData","type":"bytes"},{"internalType":"int16","name":"nextStepIndex","type":"int16"}],"internalType":"struct WorkflowStep[]","name":"steps","type":"tuple[]"}],"internalType":"struct Workflow","name":"workflow","type":"tuple"}],"name":"executeWorkflow","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{"executeWorkflow((address,(uint16,address,(bool,bool,(uint8,address),uint256)[],bytes,int16)[]))":{"params":{"workflow":"The workflow to execute."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"continueWorkflow(address,uint256,(address,(uint16,address,(bool,bool,(uint8,address),uint256)[],bytes,int16)[]),((uint8,address),uint256)[])":"f92b3d15","executeWorkflow((address,(uint16,address,(bool,bool,(uint8,address),uint256)[],bytes,int16)[]))":"52faae30"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"workflowRunnerAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"stepTypeId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"stepAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"sourceIsCaller\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"amountIsPercent\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct WorkflowStepInputAsset[]\",\"name\":\"inputAssets\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"argData\",\"type\":\"bytes\"},{\"internalType\":\"int16\",\"name\":\"nextStepIndex\",\"type\":\"int16\"}],\"internalType\":\"struct WorkflowStep[]\",\"name\":\"steps\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Workflow\",\"name\":\"workflow\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"startingAssets\",\"type\":\"tuple[]\"}],\"name\":\"continueWorkflow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"workflowRunnerAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"stepTypeId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"stepAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"sourceIsCaller\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"amountIsPercent\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct WorkflowStepInputAsset[]\",\"name\":\"inputAssets\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"argData\",\"type\":\"bytes\"},{\"internalType\":\"int16\",\"name\":\"nextStepIndex\",\"type\":\"int16\"}],\"internalType\":\"struct WorkflowStep[]\",\"name\":\"steps\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Workflow\",\"name\":\"workflow\",\"type\":\"tuple\"}],\"name\":\"executeWorkflow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeWorkflow((address,(uint16,address,(bool,bool,(uint8,address),uint256)[],bytes,int16)[]))\":{\"params\":{\"workflow\":\"The workflow to execute.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"continueWorkflow(address,uint256,(address,(uint16,address,(bool,bool,(uint8,address),uint256)[],bytes,int16)[]),((uint8,address),uint256)[])\":{\"notice\":\"Continue a workflow that started on a different chain.This is not callable by 3rd parties, only approved bridge integrations call this method.\"},\"executeWorkflow((address,(uint16,address,(bool,bool,(uint8,address),uint256)[],bytes,int16)[]))\":{\"notice\":\"Initiate the execution of a workflow.\"}},\"notice\":\"An interface defining the entry point to the engine for executing workflows.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@freemarket/core/contracts/IWorkflowRunner.sol\":\"IWorkflowRunner\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@freemarket/core/contracts/IWorkflowRunner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './model/AssetAmount.sol';\\nimport './model/Workflow.sol';\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\n\\n/// @notice An interface defining the entry point to the engine for executing workflows.\\ninterface IWorkflowRunner {\\n  /// @notice Initiate the execution of a workflow.\\n  /// @param workflow The workflow to execute.\\n  function executeWorkflow(Workflow calldata workflow) external payable;\\n\\n  /// @notice Continue a workflow that started on a different chain.\\n  /// @notice This is not callable by 3rd parties, only approved bridge integrations call this method.\\n  function continueWorkflow(\\n    address userAddress,\\n    uint256 nonce,\\n    Workflow memory workflow,\\n    AssetAmount[] memory startingAssets\\n  ) external payable;\\n}\\n\",\"keccak256\":\"0xef6461c7c07007e97af766fc8d2e338c457d13faf0f88d495ffcd39d232d6749\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/Asset.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./AssetType.sol\\\";\\n\\nstruct Asset {\\n    AssetType assetType;\\n    address assetAddress; // 0x0 for ETH, the ERC20 address.  If it's an account balance, this could represent the token of the account\\n}\\n\",\"keccak256\":\"0x2031c32d59aa2c1c6081156d4d06c9c6aff579a0b8f5d2f81ad86ff503e9e8a8\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetAmount.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './Asset.sol';\\n\\nstruct AssetAmount {\\n  Asset asset;\\n  uint256 amount;\\n}\\n\",\"keccak256\":\"0x4f57b823b38d6e8727dfa94708f63573854b74e44553f6f609bca64cc718ff0e\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetType.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nenum AssetType {\\n    Native,\\n    ERC20,\\n    ERC721\\n}\\n\",\"keccak256\":\"0xb9592fa2334517b52dae64c34f0254b4d75b20b60da00c5fc5c6e0316487e963\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/Workflow.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './WorkflowStep.sol';\\n\\n// The main workflow data structure.\\nstruct Workflow {\\n  // The address of the WorkflowRunner contract, allowing the caller to specify an older version of the runner.\\n  // If this is the zero address, the most current version of the runner will be used.\\n  // If a non-zero address is specified, it must be a whitelisted address of a previous WorkflowRunner contract.\\n  address workflowRunnerAddress;\\n  // The nodes in the directed graph of steps.\\n  // The start step is defined to be at index 0.\\n  // The 'edges' in the graph are defined within each WorkflowStep,\\n  // but can be overriden in the return value of a step.\\n  WorkflowStep[] steps;\\n}\\n\",\"keccak256\":\"0x072a08c653c65ca63534905aabbffe989c8749cefb2ef7d8cd9c12e0d92094af\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/WorkflowStep.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./WorkflowStepInputAsset.sol\\\";\\n\\n// Parameters for a workflow step\\nstruct WorkflowStep {\\n    // The logical identifer of the step (e.g., 10 represents WrapEtherStep).\\n    uint16 stepTypeId;\\n    // The contract address of a specific version of the action.\\n    // Individual step contracts may be upgraded over time, and this allows\\n    // workflows 'freeze' the version of contract for this step\\n    // A value of address(0) means use the latest and greatest version  of\\n    // this step based only on stepTypeId.\\n    address stepAddress;\\n    // The input assets to this step.\\n    WorkflowStepInputAsset[] inputAssets;\\n    // Additional step-specific parameters for this step, typically serialized in standard abi encoding.\\n    bytes argData;\\n    // The index of the next step in the directed graph of steps. (see the Workflow.steps array)\\n    int16 nextStepIndex;\\n}\\n\",\"keccak256\":\"0x6441da101e655b2593b54896d8698dad0efe3458e2ec5a28db65f264913d12c0\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/WorkflowStepInputAsset.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './Asset.sol';\\n\\n// an input asset to a WorkflowStep\\nstruct WorkflowStepInputAsset {\\n  // if true, the source of the asset is the caller of the workflow, otherwise it is the output of some previous step\\n  bool sourceIsCaller;\\n  // if true 'amount' is treated as a percent, with 4 decimals of precision (1000000 represents 100%)\\n  bool amountIsPercent;\\n  // the input asset\\n  Asset asset;\\n  // the amount of the input asset\\n  uint256 amount;\\n}\\n\",\"keccak256\":\"0x2a478c09e1deb0268eba6ba5f3721d2e2a4b666b9f0735cfa0735dc9ebe70c4b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"continueWorkflow(address,uint256,(address,(uint16,address,(bool,bool,(uint8,address),uint256)[],bytes,int16)[]),((uint8,address),uint256)[])":{"notice":"Continue a workflow that started on a different chain.This is not callable by 3rd parties, only approved bridge integrations call this method."},"executeWorkflow((address,(uint16,address,(bool,bool,(uint8,address),uint256)[],bytes,int16)[]))":{"notice":"Initiate the execution of a workflow."}},"notice":"An interface defining the entry point to the engine for executing workflows.","version":1}}},"@freemarket/core/contracts/IWorkflowStep.sol":{"IWorkflowStep":{"abi":[{"inputs":[{"components":[{"components":[{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"}],"internalType":"struct Asset","name":"asset","type":"tuple"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct AssetAmount[]","name":"assetAmounts","type":"tuple[]"},{"internalType":"bytes","name":"argData","type":"bytes"}],"name":"execute","outputs":[{"components":[{"components":[{"components":[{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"}],"internalType":"struct Asset","name":"asset","type":"tuple"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct AssetAmount[]","name":"inputAssetAmounts","type":"tuple[]"},{"components":[{"components":[{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"}],"internalType":"struct Asset","name":"asset","type":"tuple"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct AssetAmount[]","name":"outputAssetAmounts","type":"tuple[]"},{"internalType":"int16","name":"nextStepIndex","type":"int16"},{"internalType":"int24","name":"fee","type":"int24"}],"internalType":"struct WorkflowStepResult","name":"","type":"tuple"}],"stateMutability":"payable","type":"function"}],"devdoc":{"author":"Marty Saxton","kind":"dev","methods":{"execute(((uint8,address),uint256)[],bytes)":{"params":{"argData":"Step specific arguments in ABI encoding","assetAmounts":"AssetAmounts to be used by the step"},"returns":{"_0":"the outcome of the step invocation"}}},"title":"The interface between WorkflowRunner and each Step implementation.abi","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"execute(((uint8,address),uint256)[],bytes)":"7bb26ca7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"assetAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"argData\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"inputAssetAmounts\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"outputAssetAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"int16\",\"name\":\"nextStepIndex\",\"type\":\"int16\"},{\"internalType\":\"int24\",\"name\":\"fee\",\"type\":\"int24\"}],\"internalType\":\"struct WorkflowStepResult\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Marty Saxton\",\"kind\":\"dev\",\"methods\":{\"execute(((uint8,address),uint256)[],bytes)\":{\"params\":{\"argData\":\"Step specific arguments in ABI encoding\",\"assetAmounts\":\"AssetAmounts to be used by the step\"},\"returns\":{\"_0\":\"the outcome of the step invocation\"}}},\"title\":\"The interface between WorkflowRunner and each Step implementation.abi\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute(((uint8,address),uint256)[],bytes)\":{\"notice\":\"called by WorkflowRunner to execute a workflow step.\"}},\"notice\":\"All steps must implement this interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@freemarket/core/contracts/IWorkflowStep.sol\":\"IWorkflowStep\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@freemarket/core/contracts/IWorkflowStep.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./model/Asset.sol\\\";\\nimport \\\"./model/AssetAmount.sol\\\";\\nimport \\\"./model/WorkflowStepResult.sol\\\";\\n\\n/// @title The interface between WorkflowRunner and each Step implementation.abi\\n/// @author Marty Saxton\\n/// @notice All steps must implement this interface.\\ninterface IWorkflowStep {\\n    /// @notice called by WorkflowRunner to execute a workflow step.\\n    /// @param assetAmounts AssetAmounts to be used by the step\\n    /// @param argData Step specific arguments in ABI encoding\\n    /// @return the outcome of the step invocation\\n    function execute(AssetAmount[] calldata assetAmounts, bytes calldata argData)\\n        external\\n        payable\\n        returns (WorkflowStepResult memory);\\n}\\n\",\"keccak256\":\"0xce8590c782238edd5fa7293798bc02411f7b408ad4caeaaab2ac052e97ab1cdf\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/Asset.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./AssetType.sol\\\";\\n\\nstruct Asset {\\n    AssetType assetType;\\n    address assetAddress; // 0x0 for ETH, the ERC20 address.  If it's an account balance, this could represent the token of the account\\n}\\n\",\"keccak256\":\"0x2031c32d59aa2c1c6081156d4d06c9c6aff579a0b8f5d2f81ad86ff503e9e8a8\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetAmount.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './Asset.sol';\\n\\nstruct AssetAmount {\\n  Asset asset;\\n  uint256 amount;\\n}\\n\",\"keccak256\":\"0x4f57b823b38d6e8727dfa94708f63573854b74e44553f6f609bca64cc718ff0e\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetType.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nenum AssetType {\\n    Native,\\n    ERC20,\\n    ERC721\\n}\\n\",\"keccak256\":\"0xb9592fa2334517b52dae64c34f0254b4d75b20b60da00c5fc5c6e0316487e963\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/WorkflowStepResult.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './AssetAmount.sol';\\n\\n// The return value from the execution of a step.\\nstruct WorkflowStepResult {\\n  // The amounts of each input asset that resulted from the step execution.\\n  AssetAmount[] inputAssetAmounts;\\n  // The amounts of each output asset that resulted from the step execution.\\n  AssetAmount[] outputAssetAmounts;\\n  // The index of the next step in a workflow.\\n  // This value allows the step to override the default nextStepIndex\\n  // statically defined\\n  // -1 means terminate the workflow\\n  // -2 means do not override the statically defined nextStepIndex in WorkflowStep\\n  int16 nextStepIndex;\\n  // the fee to be withheald out of the output assets (in decibips)\\n  // -1 means use the default fee\\n  int24 fee;\\n}\\n\",\"keccak256\":\"0xfc2e23b8851d12ef7cc6f72414af0fafacda3ffe04656f396e837ffa6d2e21ee\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"execute(((uint8,address),uint256)[],bytes)":{"notice":"called by WorkflowRunner to execute a workflow step."}},"notice":"All steps must implement this interface.","version":1}}},"@freemarket/step-sdk/contracts/LibActionHelpers.sol":{"LibActionHelpers":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209a2d403b361e6a1ce3b251538f8e05d4ca3bce59fb946f49d4548897cf873ce164736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0x2D BLOCKHASH EXTCODESIZE CALLDATASIZE 0x1E PUSH11 0x1CE3B251538F8E05D4CA3B 0xCE MSIZE 0xFB SWAP5 PUSH16 0x49D4548897CF873CE164736F6C634300 ADDMOD SLT STOP CALLER ","sourceMap":"182:778:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209a2d403b361e6a1ce3b251538f8e05d4ca3bce59fb946f49d4548897cf873ce164736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0x2D BLOCKHASH EXTCODESIZE CALLDATASIZE 0x1E PUSH11 0x1CE3B251538F8E05D4CA3B 0xCE MSIZE 0xFB SWAP5 PUSH16 0x49D4548897CF873CE164736F6C634300 ADDMOD SLT STOP CALLER ","sourceMap":"182:778:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"noOutputAssetsResult()":"infinite","singleAssetResult(enum AssetType,address,uint256)":"infinite","singleTokenResult(address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@freemarket/step-sdk/contracts/LibActionHelpers.sol\":\"LibActionHelpers\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@freemarket/core/contracts/model/Asset.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./AssetType.sol\\\";\\n\\nstruct Asset {\\n    AssetType assetType;\\n    address assetAddress; // 0x0 for ETH, the ERC20 address.  If it's an account balance, this could represent the token of the account\\n}\\n\",\"keccak256\":\"0x2031c32d59aa2c1c6081156d4d06c9c6aff579a0b8f5d2f81ad86ff503e9e8a8\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetAmount.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './Asset.sol';\\n\\nstruct AssetAmount {\\n  Asset asset;\\n  uint256 amount;\\n}\\n\",\"keccak256\":\"0x4f57b823b38d6e8727dfa94708f63573854b74e44553f6f609bca64cc718ff0e\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetType.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nenum AssetType {\\n    Native,\\n    ERC20,\\n    ERC721\\n}\\n\",\"keccak256\":\"0xb9592fa2334517b52dae64c34f0254b4d75b20b60da00c5fc5c6e0316487e963\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/WorkflowStepResult.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './AssetAmount.sol';\\n\\n// The return value from the execution of a step.\\nstruct WorkflowStepResult {\\n  // The amounts of each input asset that resulted from the step execution.\\n  AssetAmount[] inputAssetAmounts;\\n  // The amounts of each output asset that resulted from the step execution.\\n  AssetAmount[] outputAssetAmounts;\\n  // The index of the next step in a workflow.\\n  // This value allows the step to override the default nextStepIndex\\n  // statically defined\\n  // -1 means terminate the workflow\\n  // -2 means do not override the statically defined nextStepIndex in WorkflowStep\\n  int16 nextStepIndex;\\n  // the fee to be withheald out of the output assets (in decibips)\\n  // -1 means use the default fee\\n  int24 fee;\\n}\\n\",\"keccak256\":\"0xfc2e23b8851d12ef7cc6f72414af0fafacda3ffe04656f396e837ffa6d2e21ee\",\"license\":\"MIT\"},\"@freemarket/step-sdk/contracts/LibActionHelpers.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport '@freemarket/core/contracts/model/AssetType.sol';\\nimport '@freemarket/core/contracts/model/WorkflowStepResult.sol';\\n\\nlibrary LibActionHelpers {\\n  function singleAssetResult(AssetType assetType, address assetAddress, uint256 amount) internal pure returns (WorkflowStepResult memory) {\\n    Asset memory asset = Asset(assetType, assetAddress);\\n    AssetAmount[] memory ouputAssetAmounts = new AssetAmount[](1);\\n    ouputAssetAmounts[0] = AssetAmount(asset, amount);\\n    return WorkflowStepResult(new AssetAmount[](0), ouputAssetAmounts, -2, -1);\\n  }\\n\\n  function singleTokenResult(address assetAddress, uint256 amount) internal pure returns (WorkflowStepResult memory) {\\n    return singleAssetResult(AssetType.ERC20, assetAddress, amount);\\n  }\\n\\n  function noOutputAssetsResult() internal pure returns (WorkflowStepResult memory) {\\n    return singleAssetResult(AssetType.Native, address(0), 0);\\n  }\\n}\\n\",\"keccak256\":\"0x3017f42ec45c2ee13e81220ac9833f47456f6ee9002fbefd9fdb12055ad7e863\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@freemarket/step-sdk/contracts/LibStepResultBuilder.sol":{"LibStepResultBuilder":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c0d240bb8e854f6545116c0fe3060ff7068a23e000b66490ffe6227e3112270b64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xD2 BLOCKHASH 0xBB DUP15 DUP6 0x4F PUSH6 0x45116C0FE306 0xF 0xF7 MOD DUP11 0x23 0xE0 STOP 0xB6 PUSH5 0x90FFE6227E BALANCE SLT 0x27 SIGNEXTEND PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"286:2506:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c0d240bb8e854f6545116c0fe3060ff7068a23e000b66490ffe6227e3112270b64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xD2 BLOCKHASH 0xBB DUP15 DUP6 0x4F PUSH6 0x45116C0FE306 0xF 0xF7 MOD DUP11 0x23 0xE0 STOP 0xB6 PUSH5 0x90FFE6227E BALANCE SLT 0x27 SIGNEXTEND PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"286:2506:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"addInputAssetAmount(struct StepResultBuilder memory,struct AssetAmount memory)":"infinite","addInputNative(struct StepResultBuilder memory,uint256)":"infinite","addInputToken(struct StepResultBuilder memory,address,uint256)":"infinite","addOutputAssetAmount(struct StepResultBuilder memory,struct AssetAmount memory)":"infinite","addOutputNative(struct StepResultBuilder memory,uint256)":"infinite","addOutputToken(struct StepResultBuilder memory,address,uint256)":"infinite","create(uint256,uint256)":"infinite","setFee(struct StepResultBuilder memory,int24)":"infinite","setNextStepIndex(struct StepResultBuilder memory,int16)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@freemarket/step-sdk/contracts/LibStepResultBuilder.sol\":\"LibStepResultBuilder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@freemarket/core/contracts/model/Asset.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./AssetType.sol\\\";\\n\\nstruct Asset {\\n    AssetType assetType;\\n    address assetAddress; // 0x0 for ETH, the ERC20 address.  If it's an account balance, this could represent the token of the account\\n}\\n\",\"keccak256\":\"0x2031c32d59aa2c1c6081156d4d06c9c6aff579a0b8f5d2f81ad86ff503e9e8a8\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetAmount.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './Asset.sol';\\n\\nstruct AssetAmount {\\n  Asset asset;\\n  uint256 amount;\\n}\\n\",\"keccak256\":\"0x4f57b823b38d6e8727dfa94708f63573854b74e44553f6f609bca64cc718ff0e\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetType.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nenum AssetType {\\n    Native,\\n    ERC20,\\n    ERC721\\n}\\n\",\"keccak256\":\"0xb9592fa2334517b52dae64c34f0254b4d75b20b60da00c5fc5c6e0316487e963\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/WorkflowStepResult.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './AssetAmount.sol';\\n\\n// The return value from the execution of a step.\\nstruct WorkflowStepResult {\\n  // The amounts of each input asset that resulted from the step execution.\\n  AssetAmount[] inputAssetAmounts;\\n  // The amounts of each output asset that resulted from the step execution.\\n  AssetAmount[] outputAssetAmounts;\\n  // The index of the next step in a workflow.\\n  // This value allows the step to override the default nextStepIndex\\n  // statically defined\\n  // -1 means terminate the workflow\\n  // -2 means do not override the statically defined nextStepIndex in WorkflowStep\\n  int16 nextStepIndex;\\n  // the fee to be withheald out of the output assets (in decibips)\\n  // -1 means use the default fee\\n  int24 fee;\\n}\\n\",\"keccak256\":\"0xfc2e23b8851d12ef7cc6f72414af0fafacda3ffe04656f396e837ffa6d2e21ee\",\"license\":\"MIT\"},\"@freemarket/step-sdk/contracts/LibStepResultBuilder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport '@freemarket/core/contracts/model/AssetType.sol';\\nimport '@freemarket/core/contracts/model/WorkflowStepResult.sol';\\n\\nstruct StepResultBuilder {\\n  uint256 inputIndex;\\n  uint256 outputIndex;\\n  WorkflowStepResult result;\\n}\\n\\nlibrary LibStepResultBuilder {\\n  function create(uint256 inputAssetCount, uint256 outputAssetCount) internal pure returns (StepResultBuilder memory) {\\n    AssetAmount[] memory inputAssetAmounts = new AssetAmount[](inputAssetCount);\\n    AssetAmount[] memory ouputAssetAmounts = new AssetAmount[](outputAssetCount);\\n    return StepResultBuilder(0, 0, WorkflowStepResult(inputAssetAmounts, ouputAssetAmounts, -2, -1));\\n  }\\n\\n  function addInputToken(\\n    StepResultBuilder memory builder,\\n    address tokenAddress,\\n    uint256 amount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.inputAssetAmounts[builder.inputIndex++] = AssetAmount(Asset(AssetType.ERC20, tokenAddress), amount);\\n    return builder;\\n  }\\n\\n  function addInputAssetAmount(\\n    StepResultBuilder memory builder,\\n    AssetAmount memory assetAmount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.inputAssetAmounts[builder.inputIndex++] = assetAmount;\\n    return builder;\\n  }\\n\\n  function addOutputToken(\\n    StepResultBuilder memory builder,\\n    address tokenAddress,\\n    uint256 amount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.outputAssetAmounts[builder.outputIndex++] = AssetAmount(Asset(AssetType.ERC20, tokenAddress), amount);\\n    return builder;\\n  }\\n\\n  function addInputNative(StepResultBuilder memory builder, uint256 amount) internal pure returns (StepResultBuilder memory) {\\n    builder.result.inputAssetAmounts[builder.inputIndex++] = AssetAmount(Asset(AssetType.Native, address(0)), amount);\\n    return builder;\\n  }\\n\\n  function addOutputNative(StepResultBuilder memory builder, uint256 amount) internal pure returns (StepResultBuilder memory) {\\n    builder.result.outputAssetAmounts[builder.outputIndex++] = AssetAmount(Asset(AssetType.Native, address(0)), amount);\\n    return builder;\\n  }\\n\\n  function addOutputAssetAmount(\\n    StepResultBuilder memory builder,\\n    AssetAmount memory assetAmount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.outputAssetAmounts[builder.outputIndex++] = assetAmount;\\n    return builder;\\n  }\\n\\n  function setNextStepIndex(StepResultBuilder memory builder, int16 nextStepIndex) internal pure returns (StepResultBuilder memory) {\\n    builder.result.nextStepIndex = nextStepIndex;\\n    return builder;\\n  }\\n\\n  function setFee(StepResultBuilder memory builder, int24 feeInDeciBips) internal pure returns (StepResultBuilder memory) {\\n    builder.result.fee = feeInDeciBips;\\n    return builder;\\n  }\\n}\\n\",\"keccak256\":\"0xabc9d9235341ee0c69e8834cd227646063bfb6961f4fb509901537076b0e7589\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_581":{"entryPoint":null,"id":581,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:27","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:27","statements":[{"nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:27"},"nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:27"},"nodeType":"YulFunctionCall","src":"187:12:27"},"nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:27"},"nodeType":"YulFunctionCall","src":"310:12:27"},"nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nodeType":"YulBlock","src":"423:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:27"},"nodeType":"YulFunctionCall","src":"433:12:27"},"nodeType":"YulExpressionStatement","src":"433:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:27"},{"body":{"nodeType":"YulBlock","src":"546:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:27"},"nodeType":"YulFunctionCall","src":"556:12:27"},"nodeType":"YulExpressionStatement","src":"556:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:27"},{"body":{"nodeType":"YulBlock","src":"628:54:27","statements":[{"nodeType":"YulAssignment","src":"638:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:27"},"nodeType":"YulFunctionCall","src":"652:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:27"},"nodeType":"YulFunctionCall","src":"668:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:27"},"nodeType":"YulFunctionCall","src":"648:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:27","type":""}],"src":"580:102:27"},{"body":{"nodeType":"YulBlock","src":"716:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:27"},"nodeType":"YulFunctionCall","src":"726:88:27"},"nodeType":"YulExpressionStatement","src":"726:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:27"},"nodeType":"YulFunctionCall","src":"823:15:27"},"nodeType":"YulExpressionStatement","src":"823:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:27"},"nodeType":"YulFunctionCall","src":"847:15:27"},"nodeType":"YulExpressionStatement","src":"847:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:27"},{"body":{"nodeType":"YulBlock","src":"917:238:27","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:27"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:27"},"nodeType":"YulFunctionCall","src":"957:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:27"},"nodeType":"YulFunctionCall","src":"945:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:27"},"nodeType":"YulFunctionCall","src":"1098:18:27"},"nodeType":"YulExpressionStatement","src":"1098:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:27"},"nodeType":"YulFunctionCall","src":"1036:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:27"},"nodeType":"YulFunctionCall","src":"1072:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:27"},"nodeType":"YulFunctionCall","src":"1033:62:27"},"nodeType":"YulIf","src":"1030:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:27"},"nodeType":"YulFunctionCall","src":"1127:22:27"},"nodeType":"YulExpressionStatement","src":"1127:22:27"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:27","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:27","type":""}],"src":"874:281:27"},{"body":{"nodeType":"YulBlock","src":"1202:88:27","statements":[{"nodeType":"YulAssignment","src":"1212:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:27"},"nodeType":"YulFunctionCall","src":"1222:20:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:27"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:27"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:27"},"nodeType":"YulFunctionCall","src":"1251:33:27"},"nodeType":"YulExpressionStatement","src":"1251:33:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:27","type":""}],"src":"1161:129:27"},{"body":{"nodeType":"YulBlock","src":"1363:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:27"},"nodeType":"YulFunctionCall","src":"1470:18:27"},"nodeType":"YulExpressionStatement","src":"1470:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:27"},"nodeType":"YulFunctionCall","src":"1437:30:27"},"nodeType":"YulIf","src":"1434:56:27"},{"nodeType":"YulAssignment","src":"1500:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:27"},"nodeType":"YulFunctionCall","src":"1508:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:27"}]},{"nodeType":"YulAssignment","src":"1574:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:27"},"nodeType":"YulFunctionCall","src":"1582:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:27"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:27","type":""}],"src":"1296:308:27"},{"body":{"nodeType":"YulBlock","src":"1672:184:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:27"},"nodeType":"YulFunctionCall","src":"1772:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:27"},"nodeType":"YulFunctionCall","src":"1791:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:27"},"nodeType":"YulFunctionCall","src":"1785:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:27"},"nodeType":"YulFunctionCall","src":"1765:39:27"},"nodeType":"YulExpressionStatement","src":"1765:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:27"},"nodeType":"YulFunctionCall","src":"1709:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:27","statements":[{"nodeType":"YulAssignment","src":"1725:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:27"},"nodeType":"YulFunctionCall","src":"1730:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:27","statements":[]},"src":"1701:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:27"},"nodeType":"YulFunctionCall","src":"1830:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:27"},"nodeType":"YulFunctionCall","src":"1823:27:27"},"nodeType":"YulExpressionStatement","src":"1823:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:27","type":""}],"src":"1610:246:27"},{"body":{"nodeType":"YulBlock","src":"1957:339:27","statements":[{"nodeType":"YulAssignment","src":"1967:75:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:27"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:27"},"nodeType":"YulFunctionCall","src":"1992:49:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:27"},"nodeType":"YulFunctionCall","src":"1976:66:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:27"},"nodeType":"YulFunctionCall","src":"2051:21:27"},"nodeType":"YulExpressionStatement","src":"2051:21:27"},{"nodeType":"YulVariableDeclaration","src":"2081:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:27"},"nodeType":"YulFunctionCall","src":"2092:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:27"},"nodeType":"YulFunctionCall","src":"2148:79:27"},"nodeType":"YulExpressionStatement","src":"2148:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:27"},"nodeType":"YulFunctionCall","src":"2123:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:27"},"nodeType":"YulFunctionCall","src":"2120:25:27"},"nodeType":"YulIf","src":"2117:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:27"},"nodeType":"YulFunctionCall","src":"2238:52:27"},"nodeType":"YulExpressionStatement","src":"2238:52:27"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:27","type":""}],"src":"1862:434:27"},{"body":{"nodeType":"YulBlock","src":"2389:282:27","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:27"},"nodeType":"YulFunctionCall","src":"2440:79:27"},"nodeType":"YulExpressionStatement","src":"2440:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:27"},"nodeType":"YulFunctionCall","src":"2413:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:27"},"nodeType":"YulFunctionCall","src":"2409:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:27"},"nodeType":"YulFunctionCall","src":"2402:35:27"},"nodeType":"YulIf","src":"2399:122:27"},{"nodeType":"YulVariableDeclaration","src":"2530:27:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:27"},"nodeType":"YulFunctionCall","src":"2544:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:27"},"nodeType":"YulFunctionCall","src":"2634:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:27"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:27"},"nodeType":"YulFunctionCall","src":"2575:90:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:27"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:27","type":""}],"src":"2316:355:27"},{"body":{"nodeType":"YulBlock","src":"2791:739:27","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:27"},"nodeType":"YulFunctionCall","src":"2839:79:27"},"nodeType":"YulExpressionStatement","src":"2839:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:27"},"nodeType":"YulFunctionCall","src":"2808:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:27"},"nodeType":"YulFunctionCall","src":"2804:32:27"},"nodeType":"YulIf","src":"2801:119:27"},{"nodeType":"YulBlock","src":"2930:291:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:27"},"nodeType":"YulFunctionCall","src":"2965:17:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:27"},"nodeType":"YulFunctionCall","src":"2959:24:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:27"},"nodeType":"YulFunctionCall","src":"3032:79:27"},"nodeType":"YulExpressionStatement","src":"3032:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:27"},"nodeType":"YulFunctionCall","src":"2999:30:27"},"nodeType":"YulIf","src":"2996:117:27"},{"nodeType":"YulAssignment","src":"3127:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:27"},"nodeType":"YulFunctionCall","src":"3179:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:27"},"nodeType":"YulFunctionCall","src":"3137:74:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:27"}]}]},{"nodeType":"YulBlock","src":"3231:292:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:27"},"nodeType":"YulFunctionCall","src":"3266:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:27"},"nodeType":"YulFunctionCall","src":"3260:25:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:27"},"nodeType":"YulFunctionCall","src":"3334:79:27"},"nodeType":"YulExpressionStatement","src":"3334:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:27"},"nodeType":"YulFunctionCall","src":"3301:30:27"},"nodeType":"YulIf","src":"3298:117:27"},{"nodeType":"YulAssignment","src":"3429:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:27"},"nodeType":"YulFunctionCall","src":"3481:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:27"},"nodeType":"YulFunctionCall","src":"3439:74:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:27"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:27","type":""}],"src":"2677:853:27"},{"body":{"nodeType":"YulBlock","src":"3595:40:27","statements":[{"nodeType":"YulAssignment","src":"3606:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:27"},"nodeType":"YulFunctionCall","src":"3616:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:27","type":""}],"src":"3536:99:27"},{"body":{"nodeType":"YulBlock","src":"3669:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:27"},"nodeType":"YulFunctionCall","src":"3679:88:27"},"nodeType":"YulExpressionStatement","src":"3679:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:27"},"nodeType":"YulFunctionCall","src":"3776:15:27"},"nodeType":"YulExpressionStatement","src":"3776:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:27"},"nodeType":"YulFunctionCall","src":"3800:15:27"},"nodeType":"YulExpressionStatement","src":"3800:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:27"},{"body":{"nodeType":"YulBlock","src":"3878:269:27","statements":[{"nodeType":"YulAssignment","src":"3888:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:27"},"nodeType":"YulFunctionCall","src":"3898:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:27"},"nodeType":"YulFunctionCall","src":"3945:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:27","statements":[{"nodeType":"YulAssignment","src":"4010:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:27"},"nodeType":"YulFunctionCall","src":"4020:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:27"},"nodeType":"YulFunctionCall","src":"3969:26:27"},"nodeType":"YulIf","src":"3966:81:27"},{"body":{"nodeType":"YulBlock","src":"4099:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:27"},"nodeType":"YulFunctionCall","src":"4113:18:27"},"nodeType":"YulExpressionStatement","src":"4113:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:27"},"nodeType":"YulFunctionCall","src":"4083:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:27"},"nodeType":"YulFunctionCall","src":"4060:38:27"},"nodeType":"YulIf","src":"4057:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:27","type":""}],"src":"3827:320:27"},{"body":{"nodeType":"YulBlock","src":"4207:87:27","statements":[{"nodeType":"YulAssignment","src":"4217:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:27"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:27","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:27"},"nodeType":"YulFunctionCall","src":"4238:14:27"},"nodeType":"YulExpressionStatement","src":"4238:14:27"},{"nodeType":"YulAssignment","src":"4261:26:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:27"},"nodeType":"YulFunctionCall","src":"4269:18:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:27"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:27","type":""}],"src":"4153:141:27"},{"body":{"nodeType":"YulBlock","src":"4344:49:27","statements":[{"nodeType":"YulAssignment","src":"4354:33:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:27"},"nodeType":"YulFunctionCall","src":"4368:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:27","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:27"},"nodeType":"YulFunctionCall","src":"4364:23:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:27"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:27","type":""}],"src":"4300:93:27"},{"body":{"nodeType":"YulBlock","src":"4452:54:27","statements":[{"nodeType":"YulAssignment","src":"4462:37:27","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:27"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:27"},"nodeType":"YulFunctionCall","src":"4483:16:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:27"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:27","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:27","type":""}],"src":"4399:107:27"},{"body":{"nodeType":"YulBlock","src":"4588:317:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:27","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:27","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:27"},"nodeType":"YulFunctionCall","src":"4615:18:27"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:27","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:27"},"nodeType":"YulFunctionCall","src":"4654:97:27"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:27","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:27","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:27"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:27"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:27"},"nodeType":"YulFunctionCall","src":"4772:39:27"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:27"}]},{"nodeType":"YulAssignment","src":"4820:30:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:27"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:27"},"nodeType":"YulFunctionCall","src":"4840:9:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:27"},"nodeType":"YulFunctionCall","src":"4829:21:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:27"}]},{"nodeType":"YulAssignment","src":"4859:40:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:27"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:27"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:27"},"nodeType":"YulFunctionCall","src":"4879:19:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:27"},"nodeType":"YulFunctionCall","src":"4869:30:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:27"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:27","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:27","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:27","type":""}],"src":"4512:393:27"},{"body":{"nodeType":"YulBlock","src":"4956:32:27","statements":[{"nodeType":"YulAssignment","src":"4966:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:27","type":""}],"src":"4911:77:27"},{"body":{"nodeType":"YulBlock","src":"5026:28:27","statements":[{"nodeType":"YulAssignment","src":"5036:12:27","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:27"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:27","type":""}],"src":"4994:60:27"},{"body":{"nodeType":"YulBlock","src":"5120:82:27","statements":[{"nodeType":"YulAssignment","src":"5130:66:27","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:27"},"nodeType":"YulFunctionCall","src":"5170:24:27"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:27"},"nodeType":"YulFunctionCall","src":"5161:34:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:27"},"nodeType":"YulFunctionCall","src":"5143:53:27"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:27"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:27","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:27","type":""}],"src":"5060:142:27"},{"body":{"nodeType":"YulBlock","src":"5255:28:27","statements":[{"nodeType":"YulAssignment","src":"5265:12:27","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:27"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:27","type":""}],"src":"5208:75:27"},{"body":{"nodeType":"YulBlock","src":"5365:193:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:27","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:27"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:27"},"nodeType":"YulFunctionCall","src":"5399:39:27"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:27"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:27"},"nodeType":"YulFunctionCall","src":"5488:11:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:27"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:27"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:27"},"nodeType":"YulFunctionCall","src":"5509:41:27"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:27"},"nodeType":"YulFunctionCall","src":"5460:91:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:27"},"nodeType":"YulFunctionCall","src":"5447:105:27"},"nodeType":"YulExpressionStatement","src":"5447:105:27"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:27","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:27","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:27","type":""}],"src":"5289:269:27"},{"body":{"nodeType":"YulBlock","src":"5613:24:27","statements":[{"nodeType":"YulAssignment","src":"5623:8:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:27","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:27"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:27","type":""}],"src":"5564:73:27"},{"body":{"nodeType":"YulBlock","src":"5696:136:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:27","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:27"},"nodeType":"YulFunctionCall","src":"5720:32:27"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:27"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:27"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:27"},"nodeType":"YulFunctionCall","src":"5761:65:27"},"nodeType":"YulExpressionStatement","src":"5761:65:27"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:27","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:27","type":""}],"src":"5643:189:27"},{"body":{"nodeType":"YulBlock","src":"5888:136:27","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:27","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:27","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:27"},"nodeType":"YulFunctionCall","src":"5969:39:27"},"nodeType":"YulExpressionStatement","src":"5969:39:27"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:27"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:27"},"nodeType":"YulFunctionCall","src":"5905:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:27","statements":[{"nodeType":"YulAssignment","src":"5922:22:27","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:27"},"nodeType":"YulFunctionCall","src":"5931:13:27"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:27"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:27","statements":[]},"src":"5898:120:27"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:27","type":""}],"src":"5838:186:27"},{"body":{"nodeType":"YulBlock","src":"6109:464:27","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:27"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:27"},"nodeType":"YulFunctionCall","src":"6165:38:27"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:27","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:27"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:27"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:27"},"nodeType":"YulFunctionCall","src":"6249:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:27"},"nodeType":"YulFunctionCall","src":"6235:44:27"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:27","statements":[{"nodeType":"YulAssignment","src":"6438:23:27","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:27"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:27"},"nodeType":"YulFunctionCall","src":"6417:18:27"},"nodeType":"YulIf","src":"6414:49:27"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:27"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:27"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:27"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:27"},"nodeType":"YulFunctionCall","src":"6532:22:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:27"},"nodeType":"YulFunctionCall","src":"6518:37:27"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:27"},"nodeType":"YulFunctionCall","src":"6476:80:27"},"nodeType":"YulExpressionStatement","src":"6476:80:27"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:27"},"nodeType":"YulFunctionCall","src":"6123:11:27"},"nodeType":"YulIf","src":"6120:446:27"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:27","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:27","type":""}],"src":"6030:543:27"},{"body":{"nodeType":"YulBlock","src":"6642:54:27","statements":[{"nodeType":"YulAssignment","src":"6652:37:27","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:27"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:27"},"nodeType":"YulFunctionCall","src":"6673:16:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:27"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:27","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:27","type":""}],"src":"6579:117:27"},{"body":{"nodeType":"YulBlock","src":"6753:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:27","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:27","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:27"},"nodeType":"YulFunctionCall","src":"6808:13:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:27"},"nodeType":"YulFunctionCall","src":"6823:6:27"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:27"},"nodeType":"YulFunctionCall","src":"6779:51:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:27"},"nodeType":"YulFunctionCall","src":"6775:56:27"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:27","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:27"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:27"},"nodeType":"YulFunctionCall","src":"6850:15:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:27"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:27","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:27","type":""}],"src":"6702:169:27"},{"body":{"nodeType":"YulBlock","src":"6957:214:27","statements":[{"nodeType":"YulAssignment","src":"7090:37:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:27"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:27"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:27"},"nodeType":"YulFunctionCall","src":"7098:29:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:27"}]},{"nodeType":"YulAssignment","src":"7136:29:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:27","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:27"},"nodeType":"YulFunctionCall","src":"7153:11:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:27"},"nodeType":"YulFunctionCall","src":"7144:21:27"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:27"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:27","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:27","type":""}],"src":"6876:295:27"},{"body":{"nodeType":"YulBlock","src":"7268:1303:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:27"},"nodeType":"YulFunctionCall","src":"7293:37:27"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:27"},"nodeType":"YulFunctionCall","src":"7417:18:27"},"nodeType":"YulExpressionStatement","src":"7417:18:27"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:27"},"nodeType":"YulFunctionCall","src":"7384:30:27"},"nodeType":"YulIf","src":"7381:56:27"},{"nodeType":"YulVariableDeclaration","src":"7447:52:27","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:27"},"nodeType":"YulFunctionCall","src":"7487:11:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:27"},"nodeType":"YulFunctionCall","src":"7461:38:27"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:27"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:27"},"nodeType":"YulFunctionCall","src":"7546:67:27"},"nodeType":"YulExpressionStatement","src":"7546:67:27"},{"nodeType":"YulVariableDeclaration","src":"7623:18:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:27","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:27","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:27"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:27","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:27","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:27"},"nodeType":"YulFunctionCall","src":"7756:9:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:27"},"nodeType":"YulFunctionCall","src":"7744:22:27"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:27","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:27"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:27"},"nodeType":"YulFunctionCall","src":"7794:37:27"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:27"},"nodeType":"YulFunctionCall","src":"7951:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:27"},"nodeType":"YulFunctionCall","src":"7945:26:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:27"},"nodeType":"YulFunctionCall","src":"7930:42:27"},"nodeType":"YulExpressionStatement","src":"7930:42:27"},{"nodeType":"YulAssignment","src":"7989:24:27","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:27"},"nodeType":"YulFunctionCall","src":"7999:14:27"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:27"}]},{"nodeType":"YulAssignment","src":"8030:31:27","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:27"},"nodeType":"YulFunctionCall","src":"8043:18:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:27"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:27"},"nodeType":"YulFunctionCall","src":"7875:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:27","statements":[{"nodeType":"YulAssignment","src":"7892:17:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:27"},"nodeType":"YulFunctionCall","src":"7897:12:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:27","statements":[]},"src":"7867:208:27"},{"body":{"nodeType":"YulBlock","src":"8111:156:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:27"},"nodeType":"YulFunctionCall","src":"8152:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:27"},"nodeType":"YulFunctionCall","src":"8146:26:27"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:27"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:27"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:27","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:27"},"nodeType":"YulFunctionCall","src":"8234:17:27"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:27"},"nodeType":"YulFunctionCall","src":"8204:48:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:27"},"nodeType":"YulFunctionCall","src":"8189:64:27"},"nodeType":"YulExpressionStatement","src":"8189:64:27"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:27"},"nodeType":"YulFunctionCall","src":"8091:19:27"},"nodeType":"YulIf","src":"8088:179:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:27"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:27","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:27"},"nodeType":"YulFunctionCall","src":"8297:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:27"},"nodeType":"YulFunctionCall","src":"8293:22:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:27"},"nodeType":"YulFunctionCall","src":"8280:36:27"},"nodeType":"YulExpressionStatement","src":"8280:36:27"}]},"nodeType":"YulCase","src":"7708:618:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:27","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:27","statements":[{"nodeType":"YulAssignment","src":"8412:35:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:27"},"nodeType":"YulFunctionCall","src":"8427:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:27"},"nodeType":"YulFunctionCall","src":"8421:26:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:27"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:27"},"nodeType":"YulIf","src":"8384:77:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:27"},"nodeType":"YulFunctionCall","src":"8487:67:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:27"},"nodeType":"YulFunctionCall","src":"8474:81:27"},"nodeType":"YulExpressionStatement","src":"8474:81:27"}]},"nodeType":"YulCase","src":"8335:230:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:27"},"nodeType":"YulFunctionCall","src":"7685:14:27"},"nodeType":"YulSwitch","src":"7678:887:27"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:27","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:27","type":""}],"src":"7176:1395:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220cfa590969dc1fe52ec32dbe13f59185757e4c4868929d9f856f7b780f8d2e89764736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xA5 SWAP1 SWAP7 SWAP14 0xC1 INVALID MSTORE 0xEC ORIGIN 0xDB 0xE1 EXTCODEHASH MSIZE XOR JUMPI JUMPI 0xE4 0xC4 DUP7 DUP10 0x29 0xD9 0xF8 JUMP 0xF7 0xB7 DUP1 0xF8 0xD2 0xE8 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"1401:11610:12:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2050:5;2042;:13;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;:::i;:::-;;1976:113;;1401:11610;;7:75:27;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1401:11610:12:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1122":{"entryPoint":2679,"id":1122,"parameterSlots":3,"returnSlots":0},"@_approve_1057":{"entryPoint":1447,"id":1057,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1111":{"entryPoint":2674,"id":1111,"parameterSlots":3,"returnSlots":0},"@_msgSender_1885":{"entryPoint":1439,"id":1885,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1100":{"entryPoint":1904,"id":1100,"parameterSlots":3,"returnSlots":0},"@_transfer_883":{"entryPoint":2044,"id":883,"parameterSlots":3,"returnSlots":0},"@allowance_678":{"entryPoint":1304,"id":678,"parameterSlots":2,"returnSlots":1},"@approve_703":{"entryPoint":776,"id":703,"parameterSlots":2,"returnSlots":1},"@balanceOf_635":{"entryPoint":932,"id":635,"parameterSlots":1,"returnSlots":1},"@decimals_611":{"entryPoint":868,"id":611,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_806":{"entryPoint":1150,"id":806,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_765":{"entryPoint":877,"id":765,"parameterSlots":2,"returnSlots":1},"@name_591":{"entryPoint":630,"id":591,"parameterSlots":0,"returnSlots":1},"@symbol_601":{"entryPoint":1004,"id":601,"parameterSlots":0,"returnSlots":1},"@totalSupply_621":{"entryPoint":811,"id":621,"parameterSlots":0,"returnSlots":1},"@transferFrom_736":{"entryPoint":821,"id":736,"parameterSlots":3,"returnSlots":1},"@transfer_660":{"entryPoint":1269,"id":660,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3015,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3286,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3565,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2899,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3258,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2712,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3422,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2862,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2754,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4309,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3909,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4055,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4455,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4163,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3763,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3617,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2971,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:27","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:27","statements":[{"nodeType":"YulAssignment","src":"77:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:27"},"nodeType":"YulFunctionCall","src":"87:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:27","type":""}],"src":"7:99:27"},{"body":{"nodeType":"YulBlock","src":"208:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:27"},"nodeType":"YulFunctionCall","src":"218:19:27"},"nodeType":"YulExpressionStatement","src":"218:19:27"},{"nodeType":"YulAssignment","src":"246:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:27"},"nodeType":"YulFunctionCall","src":"261:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:27","type":""}],"src":"112:169:27"},{"body":{"nodeType":"YulBlock","src":"349:184:27","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:27"},"nodeType":"YulFunctionCall","src":"449:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:27"},"nodeType":"YulFunctionCall","src":"468:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:27"},"nodeType":"YulFunctionCall","src":"462:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:27"},"nodeType":"YulFunctionCall","src":"442:39:27"},"nodeType":"YulExpressionStatement","src":"442:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:27"},"nodeType":"YulFunctionCall","src":"386:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:27","statements":[{"nodeType":"YulAssignment","src":"402:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:27"},"nodeType":"YulFunctionCall","src":"407:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:27","statements":[]},"src":"378:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:27"},"nodeType":"YulFunctionCall","src":"507:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:27"},"nodeType":"YulFunctionCall","src":"500:27:27"},"nodeType":"YulExpressionStatement","src":"500:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:27","type":""}],"src":"287:246:27"},{"body":{"nodeType":"YulBlock","src":"587:54:27","statements":[{"nodeType":"YulAssignment","src":"597:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:27"},"nodeType":"YulFunctionCall","src":"611:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:27"},"nodeType":"YulFunctionCall","src":"627:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:27"},"nodeType":"YulFunctionCall","src":"607:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:27","type":""}],"src":"539:102:27"},{"body":{"nodeType":"YulBlock","src":"739:285:27","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:27"},"nodeType":"YulFunctionCall","src":"763:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:27","type":""}]},{"nodeType":"YulAssignment","src":"811:78:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:27"},"nodeType":"YulFunctionCall","src":"818:71:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:27"},"nodeType":"YulFunctionCall","src":"933:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:27"},"nodeType":"YulFunctionCall","src":"898:65:27"},"nodeType":"YulExpressionStatement","src":"898:65:27"},{"nodeType":"YulAssignment","src":"972:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:27"},"nodeType":"YulFunctionCall","src":"988:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:27"},"nodeType":"YulFunctionCall","src":"979:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:27","type":""}],"src":"647:377:27"},{"body":{"nodeType":"YulBlock","src":"1148:195:27","statements":[{"nodeType":"YulAssignment","src":"1158:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:27"},"nodeType":"YulFunctionCall","src":"1166:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:27"},"nodeType":"YulFunctionCall","src":"1201:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:27"},"nodeType":"YulFunctionCall","src":"1220:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:27"},"nodeType":"YulFunctionCall","src":"1194:47:27"},"nodeType":"YulExpressionStatement","src":"1194:47:27"},{"nodeType":"YulAssignment","src":"1250:86:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:27"},"nodeType":"YulFunctionCall","src":"1258:78:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:27","type":""}],"src":"1030:313:27"},{"body":{"nodeType":"YulBlock","src":"1389:35:27","statements":[{"nodeType":"YulAssignment","src":"1399:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:27"},"nodeType":"YulFunctionCall","src":"1409:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:27","type":""}],"src":"1349:75:27"},{"body":{"nodeType":"YulBlock","src":"1519:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:27"},"nodeType":"YulFunctionCall","src":"1529:12:27"},"nodeType":"YulExpressionStatement","src":"1529:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:27"},{"body":{"nodeType":"YulBlock","src":"1642:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:27"},"nodeType":"YulFunctionCall","src":"1652:12:27"},"nodeType":"YulExpressionStatement","src":"1652:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:27"},{"body":{"nodeType":"YulBlock","src":"1721:81:27","statements":[{"nodeType":"YulAssignment","src":"1731:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:27"},"nodeType":"YulFunctionCall","src":"1742:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:27","type":""}],"src":"1676:126:27"},{"body":{"nodeType":"YulBlock","src":"1853:51:27","statements":[{"nodeType":"YulAssignment","src":"1863:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:27"},"nodeType":"YulFunctionCall","src":"1874:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:27","type":""}],"src":"1808:96:27"},{"body":{"nodeType":"YulBlock","src":"1953:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:27"},"nodeType":"YulFunctionCall","src":"2012:12:27"},"nodeType":"YulExpressionStatement","src":"2012:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:27"},"nodeType":"YulFunctionCall","src":"1983:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:27"},"nodeType":"YulFunctionCall","src":"1973:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:27"},"nodeType":"YulFunctionCall","src":"1966:43:27"},"nodeType":"YulIf","src":"1963:63:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:27","type":""}],"src":"1910:122:27"},{"body":{"nodeType":"YulBlock","src":"2090:87:27","statements":[{"nodeType":"YulAssignment","src":"2100:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:27"},"nodeType":"YulFunctionCall","src":"2109:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:27"},"nodeType":"YulFunctionCall","src":"2138:33:27"},"nodeType":"YulExpressionStatement","src":"2138:33:27"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:27","type":""}],"src":"2038:139:27"},{"body":{"nodeType":"YulBlock","src":"2228:32:27","statements":[{"nodeType":"YulAssignment","src":"2238:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:27","type":""}],"src":"2183:77:27"},{"body":{"nodeType":"YulBlock","src":"2309:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:27"},"nodeType":"YulFunctionCall","src":"2368:12:27"},"nodeType":"YulExpressionStatement","src":"2368:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:27"},"nodeType":"YulFunctionCall","src":"2339:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:27"},"nodeType":"YulFunctionCall","src":"2329:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:27"},"nodeType":"YulFunctionCall","src":"2322:43:27"},"nodeType":"YulIf","src":"2319:63:27"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:27","type":""}],"src":"2266:122:27"},{"body":{"nodeType":"YulBlock","src":"2446:87:27","statements":[{"nodeType":"YulAssignment","src":"2456:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:27"},"nodeType":"YulFunctionCall","src":"2465:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:27"},"nodeType":"YulFunctionCall","src":"2494:33:27"},"nodeType":"YulExpressionStatement","src":"2494:33:27"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:27","type":""}],"src":"2394:139:27"},{"body":{"nodeType":"YulBlock","src":"2622:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:27"},"nodeType":"YulFunctionCall","src":"2670:79:27"},"nodeType":"YulExpressionStatement","src":"2670:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:27"},"nodeType":"YulFunctionCall","src":"2639:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:27"},"nodeType":"YulFunctionCall","src":"2635:32:27"},"nodeType":"YulIf","src":"2632:119:27"},{"nodeType":"YulBlock","src":"2761:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:27"},"nodeType":"YulFunctionCall","src":"2836:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:27"},"nodeType":"YulFunctionCall","src":"2815:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:27"}]}]},{"nodeType":"YulBlock","src":"2888:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:27"},"nodeType":"YulFunctionCall","src":"2964:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:27"},"nodeType":"YulFunctionCall","src":"2943:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:27","type":""}],"src":"2539:474:27"},{"body":{"nodeType":"YulBlock","src":"3061:48:27","statements":[{"nodeType":"YulAssignment","src":"3071:32:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:27"},"nodeType":"YulFunctionCall","src":"3089:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:27"},"nodeType":"YulFunctionCall","src":"3082:21:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:27"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:27","type":""}],"src":"3019:90:27"},{"body":{"nodeType":"YulBlock","src":"3174:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:27"},"nodeType":"YulFunctionCall","src":"3196:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:27"},"nodeType":"YulFunctionCall","src":"3184:34:27"},"nodeType":"YulExpressionStatement","src":"3184:34:27"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:27","type":""}],"src":"3115:109:27"},{"body":{"nodeType":"YulBlock","src":"3322:118:27","statements":[{"nodeType":"YulAssignment","src":"3332:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:27"},"nodeType":"YulFunctionCall","src":"3340:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:27"},"nodeType":"YulFunctionCall","src":"3415:17:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:27"},"nodeType":"YulFunctionCall","src":"3368:65:27"},"nodeType":"YulExpressionStatement","src":"3368:65:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:27","type":""}],"src":"3230:210:27"},{"body":{"nodeType":"YulBlock","src":"3511:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:27"},"nodeType":"YulFunctionCall","src":"3533:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:27"},"nodeType":"YulFunctionCall","src":"3521:37:27"},"nodeType":"YulExpressionStatement","src":"3521:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:27","type":""}],"src":"3446:118:27"},{"body":{"nodeType":"YulBlock","src":"3668:124:27","statements":[{"nodeType":"YulAssignment","src":"3678:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:27"},"nodeType":"YulFunctionCall","src":"3686:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:27"},"nodeType":"YulFunctionCall","src":"3767:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:27"},"nodeType":"YulFunctionCall","src":"3714:71:27"},"nodeType":"YulExpressionStatement","src":"3714:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:27","type":""}],"src":"3570:222:27"},{"body":{"nodeType":"YulBlock","src":"3898:519:27","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:27"},"nodeType":"YulFunctionCall","src":"3946:79:27"},"nodeType":"YulExpressionStatement","src":"3946:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:27"},"nodeType":"YulFunctionCall","src":"3915:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:27"},"nodeType":"YulFunctionCall","src":"3911:32:27"},"nodeType":"YulIf","src":"3908:119:27"},{"nodeType":"YulBlock","src":"4037:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:27"},"nodeType":"YulFunctionCall","src":"4112:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:27"},"nodeType":"YulFunctionCall","src":"4091:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:27"}]}]},{"nodeType":"YulBlock","src":"4164:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:27"},"nodeType":"YulFunctionCall","src":"4240:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:27"},"nodeType":"YulFunctionCall","src":"4219:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:27"}]}]},{"nodeType":"YulBlock","src":"4292:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:27"},"nodeType":"YulFunctionCall","src":"4368:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:27"},"nodeType":"YulFunctionCall","src":"4347:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:27","type":""}],"src":"3798:619:27"},{"body":{"nodeType":"YulBlock","src":"4466:43:27","statements":[{"nodeType":"YulAssignment","src":"4476:27:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:27"},"nodeType":"YulFunctionCall","src":"4487:16:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:27"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:27","type":""}],"src":"4423:86:27"},{"body":{"nodeType":"YulBlock","src":"4576:51:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:27"},"nodeType":"YulFunctionCall","src":"4598:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:27"},"nodeType":"YulFunctionCall","src":"4586:35:27"},"nodeType":"YulExpressionStatement","src":"4586:35:27"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:27","type":""}],"src":"4515:112:27"},{"body":{"nodeType":"YulBlock","src":"4727:120:27","statements":[{"nodeType":"YulAssignment","src":"4737:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:27"},"nodeType":"YulFunctionCall","src":"4745:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:27"},"nodeType":"YulFunctionCall","src":"4822:17:27"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:27"},"nodeType":"YulFunctionCall","src":"4773:67:27"},"nodeType":"YulExpressionStatement","src":"4773:67:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:27","type":""}],"src":"4633:214:27"},{"body":{"nodeType":"YulBlock","src":"4919:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:27"},"nodeType":"YulFunctionCall","src":"4967:79:27"},"nodeType":"YulExpressionStatement","src":"4967:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:27"},"nodeType":"YulFunctionCall","src":"4936:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:27"},"nodeType":"YulFunctionCall","src":"4932:32:27"},"nodeType":"YulIf","src":"4929:119:27"},{"nodeType":"YulBlock","src":"5058:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:27"},"nodeType":"YulFunctionCall","src":"5133:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:27"},"nodeType":"YulFunctionCall","src":"5112:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:27","type":""}],"src":"4853:329:27"},{"body":{"nodeType":"YulBlock","src":"5271:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:27"},"nodeType":"YulFunctionCall","src":"5319:79:27"},"nodeType":"YulExpressionStatement","src":"5319:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:27"},"nodeType":"YulFunctionCall","src":"5288:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:27"},"nodeType":"YulFunctionCall","src":"5284:32:27"},"nodeType":"YulIf","src":"5281:119:27"},{"nodeType":"YulBlock","src":"5410:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:27"},"nodeType":"YulFunctionCall","src":"5485:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:27"},"nodeType":"YulFunctionCall","src":"5464:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:27"}]}]},{"nodeType":"YulBlock","src":"5537:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:27"},"nodeType":"YulFunctionCall","src":"5613:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:27"},"nodeType":"YulFunctionCall","src":"5592:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:27","type":""}],"src":"5188:474:27"},{"body":{"nodeType":"YulBlock","src":"5696:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:27"},"nodeType":"YulFunctionCall","src":"5706:88:27"},"nodeType":"YulExpressionStatement","src":"5706:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:27"},"nodeType":"YulFunctionCall","src":"5803:15:27"},"nodeType":"YulExpressionStatement","src":"5803:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:27"},"nodeType":"YulFunctionCall","src":"5827:15:27"},"nodeType":"YulExpressionStatement","src":"5827:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:27"},{"body":{"nodeType":"YulBlock","src":"5905:269:27","statements":[{"nodeType":"YulAssignment","src":"5915:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:27"},"nodeType":"YulFunctionCall","src":"5925:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:27"},"nodeType":"YulFunctionCall","src":"5972:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:27","statements":[{"nodeType":"YulAssignment","src":"6037:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:27"},"nodeType":"YulFunctionCall","src":"6047:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:27"},"nodeType":"YulFunctionCall","src":"5996:26:27"},"nodeType":"YulIf","src":"5993:81:27"},{"body":{"nodeType":"YulBlock","src":"6126:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:27"},"nodeType":"YulFunctionCall","src":"6140:18:27"},"nodeType":"YulExpressionStatement","src":"6140:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:27"},"nodeType":"YulFunctionCall","src":"6110:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:27"},"nodeType":"YulFunctionCall","src":"6087:38:27"},"nodeType":"YulIf","src":"6084:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:27","type":""}],"src":"5854:320:27"},{"body":{"nodeType":"YulBlock","src":"6208:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:27"},"nodeType":"YulFunctionCall","src":"6218:88:27"},"nodeType":"YulExpressionStatement","src":"6218:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:27"},"nodeType":"YulFunctionCall","src":"6315:15:27"},"nodeType":"YulExpressionStatement","src":"6315:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:27"},"nodeType":"YulFunctionCall","src":"6339:15:27"},"nodeType":"YulExpressionStatement","src":"6339:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:27"},{"body":{"nodeType":"YulBlock","src":"6410:147:27","statements":[{"nodeType":"YulAssignment","src":"6420:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:27"},"nodeType":"YulFunctionCall","src":"6425:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:27"}]},{"nodeType":"YulAssignment","src":"6454:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:27"},"nodeType":"YulFunctionCall","src":"6459:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:27"}]},{"nodeType":"YulAssignment","src":"6488:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:27"},"nodeType":"YulFunctionCall","src":"6495:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:27"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:27"},"nodeType":"YulFunctionCall","src":"6530:18:27"},"nodeType":"YulExpressionStatement","src":"6530:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:27"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:27"},"nodeType":"YulFunctionCall","src":"6517:10:27"},"nodeType":"YulIf","src":"6514:36:27"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:27","type":""}],"src":"6366:191:27"},{"body":{"nodeType":"YulBlock","src":"6669:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:27"},"nodeType":"YulFunctionCall","src":"6687:14:27"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:27","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:27"},"nodeType":"YulFunctionCall","src":"6680:58:27"},"nodeType":"YulExpressionStatement","src":"6680:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:27"},"nodeType":"YulFunctionCall","src":"6755:15:27"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:27","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:27"},"nodeType":"YulFunctionCall","src":"6748:32:27"},"nodeType":"YulExpressionStatement","src":"6748:32:27"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:27","type":""}],"src":"6563:224:27"},{"body":{"nodeType":"YulBlock","src":"6939:220:27","statements":[{"nodeType":"YulAssignment","src":"6949:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:27"},"nodeType":"YulFunctionCall","src":"6956:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:27"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:27"},"nodeType":"YulFunctionCall","src":"7032:93:27"},"nodeType":"YulExpressionStatement","src":"7032:93:27"},{"nodeType":"YulAssignment","src":"7134:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:27"},"nodeType":"YulFunctionCall","src":"7141:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:27"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:27","type":""}],"src":"6793:366:27"},{"body":{"nodeType":"YulBlock","src":"7336:248:27","statements":[{"nodeType":"YulAssignment","src":"7346:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:27"},"nodeType":"YulFunctionCall","src":"7354:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:27"},"nodeType":"YulFunctionCall","src":"7389:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:27"},"nodeType":"YulFunctionCall","src":"7408:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:27"},"nodeType":"YulFunctionCall","src":"7382:47:27"},"nodeType":"YulExpressionStatement","src":"7382:47:27"},{"nodeType":"YulAssignment","src":"7438:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:27"},"nodeType":"YulFunctionCall","src":"7446:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:27","type":""}],"src":"7165:419:27"},{"body":{"nodeType":"YulBlock","src":"7696:117:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:27"},"nodeType":"YulFunctionCall","src":"7714:14:27"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:27","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:27"},"nodeType":"YulFunctionCall","src":"7707:58:27"},"nodeType":"YulExpressionStatement","src":"7707:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:27"},"nodeType":"YulFunctionCall","src":"7782:15:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:27"},"nodeType":"YulFunctionCall","src":"7775:31:27"},"nodeType":"YulExpressionStatement","src":"7775:31:27"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:27","type":""}],"src":"7590:223:27"},{"body":{"nodeType":"YulBlock","src":"7965:220:27","statements":[{"nodeType":"YulAssignment","src":"7975:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:27","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:27"},"nodeType":"YulFunctionCall","src":"7982:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:27"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:27"},"nodeType":"YulFunctionCall","src":"8058:93:27"},"nodeType":"YulExpressionStatement","src":"8058:93:27"},{"nodeType":"YulAssignment","src":"8160:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:27"},"nodeType":"YulFunctionCall","src":"8167:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:27"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:27","type":""}],"src":"7819:366:27"},{"body":{"nodeType":"YulBlock","src":"8362:248:27","statements":[{"nodeType":"YulAssignment","src":"8372:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:27"},"nodeType":"YulFunctionCall","src":"8380:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:27"},"nodeType":"YulFunctionCall","src":"8415:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:27"},"nodeType":"YulFunctionCall","src":"8434:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:27"},"nodeType":"YulFunctionCall","src":"8408:47:27"},"nodeType":"YulExpressionStatement","src":"8408:47:27"},{"nodeType":"YulAssignment","src":"8464:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:27"},"nodeType":"YulFunctionCall","src":"8472:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:27","type":""}],"src":"8191:419:27"},{"body":{"nodeType":"YulBlock","src":"8722:115:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:27"},"nodeType":"YulFunctionCall","src":"8740:14:27"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:27","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:27"},"nodeType":"YulFunctionCall","src":"8733:58:27"},"nodeType":"YulExpressionStatement","src":"8733:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:27"},"nodeType":"YulFunctionCall","src":"8808:15:27"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:27","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:27"},"nodeType":"YulFunctionCall","src":"8801:29:27"},"nodeType":"YulExpressionStatement","src":"8801:29:27"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:27","type":""}],"src":"8616:221:27"},{"body":{"nodeType":"YulBlock","src":"8989:220:27","statements":[{"nodeType":"YulAssignment","src":"8999:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:27","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:27"},"nodeType":"YulFunctionCall","src":"9006:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:27"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:27"},"nodeType":"YulFunctionCall","src":"9082:93:27"},"nodeType":"YulExpressionStatement","src":"9082:93:27"},{"nodeType":"YulAssignment","src":"9184:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:27"},"nodeType":"YulFunctionCall","src":"9191:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:27"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:27","type":""}],"src":"8843:366:27"},{"body":{"nodeType":"YulBlock","src":"9386:248:27","statements":[{"nodeType":"YulAssignment","src":"9396:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:27"},"nodeType":"YulFunctionCall","src":"9404:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:27"},"nodeType":"YulFunctionCall","src":"9439:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:27"},"nodeType":"YulFunctionCall","src":"9458:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:27"},"nodeType":"YulFunctionCall","src":"9432:47:27"},"nodeType":"YulExpressionStatement","src":"9432:47:27"},{"nodeType":"YulAssignment","src":"9488:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:27"},"nodeType":"YulFunctionCall","src":"9496:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:27","type":""}],"src":"9215:419:27"},{"body":{"nodeType":"YulBlock","src":"9746:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:27"},"nodeType":"YulFunctionCall","src":"9764:14:27"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:27","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:27"},"nodeType":"YulFunctionCall","src":"9757:55:27"},"nodeType":"YulExpressionStatement","src":"9757:55:27"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:27","type":""}],"src":"9640:179:27"},{"body":{"nodeType":"YulBlock","src":"9971:220:27","statements":[{"nodeType":"YulAssignment","src":"9981:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:27","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:27"},"nodeType":"YulFunctionCall","src":"9988:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:27"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:27"},"nodeType":"YulFunctionCall","src":"10064:93:27"},"nodeType":"YulExpressionStatement","src":"10064:93:27"},{"nodeType":"YulAssignment","src":"10166:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:27"},"nodeType":"YulFunctionCall","src":"10173:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:27"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:27","type":""}],"src":"9825:366:27"},{"body":{"nodeType":"YulBlock","src":"10368:248:27","statements":[{"nodeType":"YulAssignment","src":"10378:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:27"},"nodeType":"YulFunctionCall","src":"10386:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:27"},"nodeType":"YulFunctionCall","src":"10421:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:27"},"nodeType":"YulFunctionCall","src":"10440:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:27"},"nodeType":"YulFunctionCall","src":"10414:47:27"},"nodeType":"YulExpressionStatement","src":"10414:47:27"},{"nodeType":"YulAssignment","src":"10470:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:27"},"nodeType":"YulFunctionCall","src":"10478:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:27","type":""}],"src":"10197:419:27"},{"body":{"nodeType":"YulBlock","src":"10728:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:27"},"nodeType":"YulFunctionCall","src":"10746:14:27"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:27","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:27"},"nodeType":"YulFunctionCall","src":"10739:58:27"},"nodeType":"YulExpressionStatement","src":"10739:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:27"},"nodeType":"YulFunctionCall","src":"10814:15:27"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:27","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:27"},"nodeType":"YulFunctionCall","src":"10807:32:27"},"nodeType":"YulExpressionStatement","src":"10807:32:27"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:27","type":""}],"src":"10622:224:27"},{"body":{"nodeType":"YulBlock","src":"10998:220:27","statements":[{"nodeType":"YulAssignment","src":"11008:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:27"},"nodeType":"YulFunctionCall","src":"11015:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:27"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:27"},"nodeType":"YulFunctionCall","src":"11091:93:27"},"nodeType":"YulExpressionStatement","src":"11091:93:27"},{"nodeType":"YulAssignment","src":"11193:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:27"},"nodeType":"YulFunctionCall","src":"11200:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:27"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:27","type":""}],"src":"10852:366:27"},{"body":{"nodeType":"YulBlock","src":"11395:248:27","statements":[{"nodeType":"YulAssignment","src":"11405:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:27"},"nodeType":"YulFunctionCall","src":"11413:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:27"},"nodeType":"YulFunctionCall","src":"11448:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:27"},"nodeType":"YulFunctionCall","src":"11467:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:27"},"nodeType":"YulFunctionCall","src":"11441:47:27"},"nodeType":"YulExpressionStatement","src":"11441:47:27"},{"nodeType":"YulAssignment","src":"11497:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:27"},"nodeType":"YulFunctionCall","src":"11505:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:27","type":""}],"src":"11224:419:27"},{"body":{"nodeType":"YulBlock","src":"11755:116:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:27"},"nodeType":"YulFunctionCall","src":"11773:14:27"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:27","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:27"},"nodeType":"YulFunctionCall","src":"11766:58:27"},"nodeType":"YulExpressionStatement","src":"11766:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:27"},"nodeType":"YulFunctionCall","src":"11841:15:27"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:27","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:27"},"nodeType":"YulFunctionCall","src":"11834:30:27"},"nodeType":"YulExpressionStatement","src":"11834:30:27"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:27","type":""}],"src":"11649:222:27"},{"body":{"nodeType":"YulBlock","src":"12023:220:27","statements":[{"nodeType":"YulAssignment","src":"12033:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:27","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:27"},"nodeType":"YulFunctionCall","src":"12040:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:27"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:27"},"nodeType":"YulFunctionCall","src":"12116:93:27"},"nodeType":"YulExpressionStatement","src":"12116:93:27"},{"nodeType":"YulAssignment","src":"12218:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:27"},"nodeType":"YulFunctionCall","src":"12225:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:27"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:27","type":""}],"src":"11877:366:27"},{"body":{"nodeType":"YulBlock","src":"12420:248:27","statements":[{"nodeType":"YulAssignment","src":"12430:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:27"},"nodeType":"YulFunctionCall","src":"12438:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:27"},"nodeType":"YulFunctionCall","src":"12473:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:27"},"nodeType":"YulFunctionCall","src":"12492:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:27"},"nodeType":"YulFunctionCall","src":"12466:47:27"},"nodeType":"YulExpressionStatement","src":"12466:47:27"},{"nodeType":"YulAssignment","src":"12522:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:27"},"nodeType":"YulFunctionCall","src":"12530:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:27","type":""}],"src":"12249:419:27"},{"body":{"nodeType":"YulBlock","src":"12780:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:27"},"nodeType":"YulFunctionCall","src":"12798:14:27"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:27","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:27"},"nodeType":"YulFunctionCall","src":"12791:58:27"},"nodeType":"YulExpressionStatement","src":"12791:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:27"},"nodeType":"YulFunctionCall","src":"12866:15:27"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:27","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:27"},"nodeType":"YulFunctionCall","src":"12859:33:27"},"nodeType":"YulExpressionStatement","src":"12859:33:27"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:27","type":""}],"src":"12674:225:27"},{"body":{"nodeType":"YulBlock","src":"13051:220:27","statements":[{"nodeType":"YulAssignment","src":"13061:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:27"},"nodeType":"YulFunctionCall","src":"13068:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:27"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:27"},"nodeType":"YulFunctionCall","src":"13144:93:27"},"nodeType":"YulExpressionStatement","src":"13144:93:27"},{"nodeType":"YulAssignment","src":"13246:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:27"},"nodeType":"YulFunctionCall","src":"13253:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:27"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:27","type":""}],"src":"12905:366:27"},{"body":{"nodeType":"YulBlock","src":"13448:248:27","statements":[{"nodeType":"YulAssignment","src":"13458:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:27"},"nodeType":"YulFunctionCall","src":"13466:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:27"},"nodeType":"YulFunctionCall","src":"13501:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:27"},"nodeType":"YulFunctionCall","src":"13520:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:27"},"nodeType":"YulFunctionCall","src":"13494:47:27"},"nodeType":"YulExpressionStatement","src":"13494:47:27"},{"nodeType":"YulAssignment","src":"13550:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:27"},"nodeType":"YulFunctionCall","src":"13558:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:27","type":""}],"src":"13277:419:27"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea2646970667358221220cfa590969dc1fe52ec32dbe13f59185757e4c4868929d9f856f7b780f8d2e89764736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xA5 SWAP1 SWAP7 SWAP14 0xC1 INVALID MSTORE 0xEC ORIGIN 0xDB 0xE1 EXTCODEHASH MSIZE XOR JUMPI JUMPI 0xE4 0xC4 DUP7 DUP10 0x29 0xD9 0xF8 JUMP 0xF7 0xB7 DUP1 0xF8 0xD2 0xE8 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"1401:11610:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;3406:125::-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;3974:149::-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;640:96:18:-;693:7;719:10;712:17;;640:96;:::o;10504:370:12:-;10652:1;10635:19;;:5;:19;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;12180:121::-;;;;:::o;12889:120::-;;;;:::o;7:99:27:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"931000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"432","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":552,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":558,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":560,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":562,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":564,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094b437a7cf33b6b74cd00203af6bc6e7cde6c48729c18f140d4da14bd665747a64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xB4 CALLDATACOPY 0xA7 0xCF CALLER 0xB6 0xB7 0x4C 0xD0 MUL SUB 0xAF PUSH12 0xC6E7CDE6C48729C18F140D4D LOG1 0x4B 0xD6 PUSH6 0x747A64736F6C PUSH4 0x43000812 STOP CALLER ","sourceMap":"707:3748:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094b437a7cf33b6b74cd00203af6bc6e7cde6c48729c18f140d4da14bd665747a64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xB4 CALLDATACOPY 0xA7 0xCF CALLER 0xB6 0xB7 0x4C 0xD0 MUL SUB 0xAF PUSH12 0xC6E7CDE6C48729C18F140D4D LOG1 0x4B 0xD6 PUSH6 0x747A64736F6C PUSH4 0x43000812 STOP CALLER ","sourceMap":"707:3748:16:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e1776e2faafc18623cd62aec6db8f0a5b799b967f1dbd956b971b4d39b19b4164736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E OR PUSH23 0xE2FAAFC18623CD62AEC6DB8F0A5B799B967F1DBD956B97 SHL 0x4D CODECOPY 0xB1 SWAP12 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:8964:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e1776e2faafc18623cd62aec6db8f0a5b799b967f1dbd956b971b4d39b19b4164736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E OR PUSH23 0xE2FAAFC18623CD62AEC6DB8F0A5B799B967F1DBD956B97 SHL 0x4D CODECOPY 0xB1 SWAP12 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:8964:17:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/IStargateFactory.sol":{"IStargateFactory":{"abi":[{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"allPools","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allPools(uint256)":"41d1de97","getPool(uint256)":"068bcd8d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"allPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IStargateFactory.sol\":\"IStargateFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IStargateFactory.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.13;\\n\\ninterface IStargateFactory {\\n  function getPool(uint256) external view returns (address);\\n\\n  function allPools(uint256 index) external view returns (address);\\n}\\n\",\"keccak256\":\"0xed0d80a5abdafe433c9539ffcab8d327221322e4da5ace27015982e1b93f58c6\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/IStargateFeeLibrary.sol":{"IStargateFeeLibrary":{"abi":[{"inputs":[{"internalType":"uint256","name":"_srcPoolId","type":"uint256"},{"internalType":"uint256","name":"_dstPoolId","type":"uint256"},{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256","name":"_amountSD","type":"uint256"}],"name":"getFees","outputs":[{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"eqFee","type":"uint256"},{"internalType":"uint256","name":"eqReward","type":"uint256"},{"internalType":"uint256","name":"lpFee","type":"uint256"},{"internalType":"uint256","name":"protocolFee","type":"uint256"},{"internalType":"uint256","name":"lkbRemove","type":"uint256"}],"internalType":"struct SwapObj","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getFees(uint256,uint256,uint16,address,uint256)":"1ab62430","getVersion()":"0d8e6e2c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_srcPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountSD\",\"type\":\"uint256\"}],\"name\":\"getFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eqFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eqReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lkbRemove\",\"type\":\"uint256\"}],\"internalType\":\"struct SwapObj\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IStargateFeeLibrary.sol\":\"IStargateFeeLibrary\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IStargateFeeLibrary.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.13;\\n\\nstruct SwapObj {\\n  uint256 amount;\\n  uint256 eqFee;\\n  uint256 eqReward;\\n  uint256 lpFee;\\n  uint256 protocolFee;\\n  uint256 lkbRemove;\\n}\\n\\ninterface IStargateFeeLibrary {\\n  function getFees(\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    uint16 _dstChainId,\\n    address _from,\\n    uint256 _amountSD\\n  ) external view returns (SwapObj memory);\\n\\n  function getVersion() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x361eedc056f7f753d34242ac6bb1362b07989e89df6b6123adff9b964e65aec5\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/IStargatePool.sol":{"IStargatePool":{"abi":[{"inputs":[],"name":"feeLibrary","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"feeLibrary()":"001edfab","token()":"fc0c546a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IStargatePool.sol\":\"IStargatePool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IStargatePool.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.13;\\n\\ninterface IStargatePool {\\n  function token() external view returns (address);\\n\\n  function feeLibrary() external view returns (address);\\n}\\n\",\"keccak256\":\"0x4b41db6bb275f8d00d4f39c1e3b5e4faa5b8c11200361d47b200d36668ed4a14\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/IStargateReceiver.sol":{"IStargateReceiver":{"abi":[{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"amountLD","type":"uint256"},{"internalType":"bytes","name":"payload","type":"bytes"}],"name":"sgReceive","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"sgReceive(uint16,bytes,uint256,address,uint256,bytes)":"ab8236f3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"sgReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IStargateReceiver.sol\":\"IStargateReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IStargateReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.13;\\n\\ninterface IStargateReceiver {\\n  function sgReceive(\\n    uint16 _srcChainId, // the remote chainId sending the tokens\\n    bytes memory _srcAddress, // the remote Bridge address\\n    uint256 _nonce,\\n    address _token, // the token contract on the local chain\\n    uint256 amountLD, // the qty of local _token contract tokens\\n    bytes memory payload\\n  ) external;\\n}\\n\",\"keccak256\":\"0x26033fad335fad67a88b8f1d3d761b595ff882ba513cf759926d4c2fab2ef4b4\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/IStargateRouter.sol":{"IStargateRouter":{"abi":[{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"_amountLD","type":"uint256"},{"internalType":"address","name":"_to","type":"address"}],"name":"addLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcPoolId","type":"uint16"},{"internalType":"uint256","name":"_amountLP","type":"uint256"},{"internalType":"address","name":"_to","type":"address"}],"name":"instantRedeemLocal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint8","name":"_functionType","type":"uint8"},{"internalType":"bytes","name":"_toAddress","type":"bytes"},{"internalType":"bytes","name":"_transferAndCallPayload","type":"bytes"},{"components":[{"internalType":"uint256","name":"dstGasForCall","type":"uint256"},{"internalType":"uint256","name":"dstNativeAmount","type":"uint256"},{"internalType":"bytes","name":"dstNativeAddr","type":"bytes"}],"internalType":"struct IStargateRouter.lzTxObj","name":"_lzTxParams","type":"tuple"}],"name":"quoteLayerZeroFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_srcPoolId","type":"uint256"},{"internalType":"uint256","name":"_dstPoolId","type":"uint256"},{"internalType":"address payable","name":"_refundAddress","type":"address"},{"internalType":"uint256","name":"_amountLP","type":"uint256"},{"internalType":"bytes","name":"_to","type":"bytes"},{"components":[{"internalType":"uint256","name":"dstGasForCall","type":"uint256"},{"internalType":"uint256","name":"dstNativeAmount","type":"uint256"},{"internalType":"bytes","name":"dstNativeAddr","type":"bytes"}],"internalType":"struct IStargateRouter.lzTxObj","name":"_lzTxParams","type":"tuple"}],"name":"redeemLocal","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_srcPoolId","type":"uint256"},{"internalType":"uint256","name":"_dstPoolId","type":"uint256"},{"internalType":"address payable","name":"_refundAddress","type":"address"},{"internalType":"uint256","name":"_amountLP","type":"uint256"},{"internalType":"uint256","name":"_minAmountLD","type":"uint256"},{"internalType":"bytes","name":"_to","type":"bytes"},{"components":[{"internalType":"uint256","name":"dstGasForCall","type":"uint256"},{"internalType":"uint256","name":"dstNativeAmount","type":"uint256"},{"internalType":"bytes","name":"dstNativeAddr","type":"bytes"}],"internalType":"struct IStargateRouter.lzTxObj","name":"_lzTxParams","type":"tuple"}],"name":"redeemRemote","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_srcPoolId","type":"uint256"},{"internalType":"uint256","name":"_dstPoolId","type":"uint256"},{"internalType":"address payable","name":"_refundAddress","type":"address"}],"name":"sendCredits","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_srcPoolId","type":"uint256"},{"internalType":"uint256","name":"_dstPoolId","type":"uint256"},{"internalType":"address payable","name":"_refundAddress","type":"address"},{"internalType":"uint256","name":"_amountLD","type":"uint256"},{"internalType":"uint256","name":"_minAmountLD","type":"uint256"},{"components":[{"internalType":"uint256","name":"dstGasForCall","type":"uint256"},{"internalType":"uint256","name":"dstNativeAmount","type":"uint256"},{"internalType":"bytes","name":"dstNativeAddr","type":"bytes"}],"internalType":"struct IStargateRouter.lzTxObj","name":"_lzTxParams","type":"tuple"},{"internalType":"bytes","name":"_to","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"swap","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addLiquidity(uint256,uint256,address)":"87b21efc","factory()":"c45a0155","instantRedeemLocal(uint16,uint256,address)":"c4de93a5","quoteLayerZeroFee(uint16,uint8,bytes,bytes,(uint256,uint256,bytes))":"0a512369","redeemLocal(uint16,uint256,uint256,address,uint256,bytes,(uint256,uint256,bytes))":"8f2e1d18","redeemRemote(uint16,uint256,uint256,address,uint256,uint256,bytes,(uint256,uint256,bytes))":"84d0dba3","sendCredits(uint16,uint256,uint256,address)":"9ba3aa74","swap(uint16,uint256,uint256,address,uint256,uint256,(uint256,uint256,bytes),bytes,bytes)":"9fbf10fc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcPoolId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_amountLP\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"instantRedeemLocal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"_functionType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_toAddress\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_transferAndCallPayload\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct IStargateRouter.lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"}],\"name\":\"quoteLayerZeroFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_srcPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountLP\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_to\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct IStargateRouter.lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"}],\"name\":\"redeemLocal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_srcPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minAmountLD\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_to\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct IStargateRouter.lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"}],\"name\":\"redeemRemote\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_srcPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"}],\"name\":\"sendCredits\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_srcPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minAmountLD\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct IStargateRouter.lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_to\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IStargateRouter.sol\":\"IStargateRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IStargateRouter.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.13;\\n\\n// abicoder v2 is enabled by default: https://docs.soliditylang.org/en/v0.8.0/080-breaking-changes.html\\n// pragma abicoder v2;\\n\\ninterface IStargateRouter {\\n  function factory() external view returns (address);\\n\\n  struct lzTxObj {\\n    uint256 dstGasForCall;\\n    uint256 dstNativeAmount;\\n    bytes dstNativeAddr;\\n  }\\n\\n  function addLiquidity(\\n    uint256 _poolId,\\n    uint256 _amountLD,\\n    address _to\\n  ) external;\\n\\n  function swap(\\n    uint16 _dstChainId,\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    address payable _refundAddress,\\n    uint256 _amountLD,\\n    uint256 _minAmountLD,\\n    lzTxObj memory _lzTxParams,\\n    bytes calldata _to,\\n    bytes calldata _payload\\n  ) external payable;\\n\\n  function redeemRemote(\\n    uint16 _dstChainId,\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    address payable _refundAddress,\\n    uint256 _amountLP,\\n    uint256 _minAmountLD,\\n    bytes calldata _to,\\n    lzTxObj memory _lzTxParams\\n  ) external payable;\\n\\n  function instantRedeemLocal(\\n    uint16 _srcPoolId,\\n    uint256 _amountLP,\\n    address _to\\n  ) external returns (uint256);\\n\\n  function redeemLocal(\\n    uint16 _dstChainId,\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    address payable _refundAddress,\\n    uint256 _amountLP,\\n    bytes calldata _to,\\n    lzTxObj memory _lzTxParams\\n  ) external payable;\\n\\n  function sendCredits(\\n    uint16 _dstChainId,\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    address payable _refundAddress\\n  ) external payable;\\n\\n  function quoteLayerZeroFee(\\n    uint16 _dstChainId,\\n    uint8 _functionType,\\n    bytes calldata _toAddress,\\n    bytes calldata _transferAndCallPayload,\\n    lzTxObj memory _lzTxParams\\n  ) external view returns (uint256, uint256);\\n}\\n\",\"keccak256\":\"0xb2cc74a6db000da1443cc79d48c843f57e233a4dfd542bbce3a43748fffae32a\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MockStargateRouter.sol":{"MockStargateRouter":{"abi":[{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"_amountLD","type":"uint256"},{"internalType":"address","name":"_to","type":"address"}],"name":"addLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"clear","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"i","type":"uint256"}],"name":"getSwapInvocationAt","outputs":[{"components":[{"internalType":"uint16","name":"dstChainId","type":"uint16"},{"internalType":"uint256","name":"srcPoolId","type":"uint256"},{"internalType":"uint256","name":"dstPoolId","type":"uint256"},{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"},{"internalType":"bytes","name":"to","type":"bytes"},{"components":[{"internalType":"uint256","name":"dstGasForCall","type":"uint256"},{"internalType":"uint256","name":"dstNativeAmount","type":"uint256"},{"internalType":"bytes","name":"dstNativeAddr","type":"bytes"}],"internalType":"struct IStargateRouter.lzTxObj","name":"lzTxParams","type":"tuple"},{"internalType":"bytes","name":"payload","type":"bytes"}],"internalType":"struct MockStargateRouter.MockStargateRouterSwapArgs","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSwapInvocationCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSwapInvocations","outputs":[{"components":[{"internalType":"uint16","name":"dstChainId","type":"uint16"},{"internalType":"uint256","name":"srcPoolId","type":"uint256"},{"internalType":"uint256","name":"dstPoolId","type":"uint256"},{"internalType":"address payable","name":"refundAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"},{"internalType":"bytes","name":"to","type":"bytes"},{"components":[{"internalType":"uint256","name":"dstGasForCall","type":"uint256"},{"internalType":"uint256","name":"dstNativeAmount","type":"uint256"},{"internalType":"bytes","name":"dstNativeAddr","type":"bytes"}],"internalType":"struct IStargateRouter.lzTxObj","name":"lzTxParams","type":"tuple"},{"internalType":"bytes","name":"payload","type":"bytes"}],"internalType":"struct MockStargateRouter.MockStargateRouterSwapArgs[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"instantRedeemLocal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint8","name":"","type":"uint8"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"components":[{"internalType":"uint256","name":"dstGasForCall","type":"uint256"},{"internalType":"uint256","name":"dstNativeAmount","type":"uint256"},{"internalType":"bytes","name":"dstNativeAddr","type":"bytes"}],"internalType":"struct IStargateRouter.lzTxObj","name":"","type":"tuple"}],"name":"quoteLayerZeroFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_srcPoolId","type":"uint256"},{"internalType":"uint256","name":"_dstPoolId","type":"uint256"},{"internalType":"address payable","name":"_refundAddress","type":"address"},{"internalType":"uint256","name":"_amountLP","type":"uint256"},{"internalType":"bytes","name":"_to","type":"bytes"},{"components":[{"internalType":"uint256","name":"dstGasForCall","type":"uint256"},{"internalType":"uint256","name":"dstNativeAmount","type":"uint256"},{"internalType":"bytes","name":"dstNativeAddr","type":"bytes"}],"internalType":"struct IStargateRouter.lzTxObj","name":"_lzTxParams","type":"tuple"}],"name":"redeemLocal","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_srcPoolId","type":"uint256"},{"internalType":"uint256","name":"_dstPoolId","type":"uint256"},{"internalType":"address payable","name":"_refundAddress","type":"address"},{"internalType":"uint256","name":"_amountLP","type":"uint256"},{"internalType":"uint256","name":"_minAmountLD","type":"uint256"},{"internalType":"bytes","name":"_to","type":"bytes"},{"components":[{"internalType":"uint256","name":"dstGasForCall","type":"uint256"},{"internalType":"uint256","name":"dstNativeAmount","type":"uint256"},{"internalType":"bytes","name":"dstNativeAddr","type":"bytes"}],"internalType":"struct IStargateRouter.lzTxObj","name":"_lzTxParams","type":"tuple"}],"name":"redeemRemote","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_srcPoolId","type":"uint256"},{"internalType":"uint256","name":"_dstPoolId","type":"uint256"},{"internalType":"address payable","name":"_refundAddress","type":"address"}],"name":"sendCredits","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_srcPoolId","type":"uint256"},{"internalType":"uint256","name":"_dstPoolId","type":"uint256"},{"internalType":"address payable","name":"_refundAddress","type":"address"},{"internalType":"uint256","name":"_amountLD","type":"uint256"},{"internalType":"uint256","name":"_minAmountLD","type":"uint256"},{"components":[{"internalType":"uint256","name":"dstGasForCall","type":"uint256"},{"internalType":"uint256","name":"dstNativeAmount","type":"uint256"},{"internalType":"bytes","name":"dstNativeAddr","type":"bytes"}],"internalType":"struct IStargateRouter.lzTxObj","name":"_lzTxParams","type":"tuple"},{"internalType":"bytes","name":"_to","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"swap","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50611c81806100206000396000f3fe6080604052600436106100a75760003560e01c80638b68be29116100645780638b68be291461019c5780638f2e1d18146101d95780639ba3aa74146101f55780639fbf10fc14610211578063c45a01551461022d578063c4de93a514610258576100a7565b80630a512369146100ac57806317293c87146100ea57806352efea6e14610115578063617904311461012c57806384d0dba31461015757806387b21efc14610173575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610f44565b610295565b6040516100e192919061102b565b60405180910390f35b3480156100f657600080fd5b506100ff6102ab565b60405161010c9190611054565b60405180910390f35b34801561012157600080fd5b5061012a6102b7565b005b34801561013857600080fd5b5061014161039a565b60405161014e9190611332565b60405180910390f35b610171600480360381019061016c9190611380565b610676565b005b34801561017f57600080fd5b5061019a600480360381019061019591906114b0565b610681565b005b3480156101a857600080fd5b506101c360048036038101906101be9190611503565b610686565b6040516101d09190611603565b60405180910390f35b6101f360048036038101906101ee9190611625565b61093f565b005b61020f600480360381019061020a9190611703565b610949565b005b61022b6004803603810190610226919061176a565b61094f565b005b34801561023957600080fd5b50610242610b5f565b60405161024f91906118a1565b60405180910390f35b34801561026457600080fd5b5061027f600480360381019061027a91906118bc565b610b64565b60405161028c9190611054565b60405180910390f35b6000806000809150915097509795505050505050565b60008080549050905090565b5b6000808054905011156103985760008054806102d7576102d661190f565b5b60019003818190600052602060002090600b0201600080820160006101000a81549061ffff0219169055600182016000905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600482016000905560058201600090556006820160006103589190610b6d565b60078201600080820160009055600182016000905560028201600061037d9190610b6d565b5050600a8201600061038f9190610b6d565b505090556102b8565b565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561066d57838290600052602060002090600b0201604051806101200160405290816000820160009054906101000a900461ffff1661ffff1661ffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820180546104909061196d565b80601f01602080910402602001604051908101604052809291908181526020018280546104bc9061196d565b80156105095780601f106104de57610100808354040283529160200191610509565b820191906000526020600020905b8154815290600101906020018083116104ec57829003601f168201915b505050505081526020016007820160405180606001604052908160008201548152602001600182015481526020016002820180546105469061196d565b80601f01602080910402602001604051908101604052809291908181526020018280546105729061196d565b80156105bf5780601f10610594576101008083540402835291602001916105bf565b820191906000526020600020905b8154815290600101906020018083116105a257829003601f168201915b5050505050815250508152602001600a820180546105dc9061196d565b80601f01602080910402602001604051908101604052809291908181526020018280546106089061196d565b80156106555780601f1061062a57610100808354040283529160200191610655565b820191906000526020600020905b81548152906001019060200180831161063857829003601f168201915b505050505081525050815260200190600101906103be565b50505050905090565b505050505050505050565b505050565b61068e610bad565b600082815481106106a2576106a161199e565b5b90600052602060002090600b0201604051806101200160405290816000820160009054906101000a900461ffff1661ffff1661ffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820154815260200160068201805461076a9061196d565b80601f01602080910402602001604051908101604052809291908181526020018280546107969061196d565b80156107e35780601f106107b8576101008083540402835291602001916107e3565b820191906000526020600020905b8154815290600101906020018083116107c657829003601f168201915b505050505081526020016007820160405180606001604052908160008201548152602001600182015481526020016002820180546108209061196d565b80601f016020809104026020016040519081016040528092919081815260200182805461084c9061196d565b80156108995780601f1061086e57610100808354040283529160200191610899565b820191906000526020600020905b81548152906001019060200180831161087c57829003601f168201915b5050505050815250508152602001600a820180546108b69061196d565b80601f01602080910402602001604051908101604052809291908181526020018280546108e29061196d565b801561092f5780601f106109045761010080835404028352916020019161092f565b820191906000526020600020905b81548152906001019060200180831161091257829003601f168201915b5050505050815250509050919050565b5050505050505050565b50505050565b60006040518061012001604052808d61ffff1681526020018c81526020018b81526020018a73ffffffffffffffffffffffffffffffffffffffff16815260200189815260200188815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200187815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081525090806001815401808255809150506001900390600052602060002090600b020160009091909190915060008201518160000160006101000a81548161ffff021916908361ffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a0820151816005015560c0820151816006019081610b039190611b79565b5060e08201518160070160008201518160000155602082015181600101556040820151816002019081610b369190611b79565b50505061010082015181600a019081610b4f9190611b79565b5050505050505050505050505050565b600090565b60009392505050565b508054610b799061196d565b6000825580601f10610b8b5750610baa565b601f016020900490600052602060002090810190610ba99190610c19565b5b50565b604051806101200160405280600061ffff1681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160608152602001610c0c610c36565b8152602001606081525090565b5b80821115610c32576000816000905550600101610c1a565b5090565b60405180606001604052806000815260200160008152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600061ffff82169050919050565b610c8281610c6b565b8114610c8d57600080fd5b50565b600081359050610c9f81610c79565b92915050565b600060ff82169050919050565b610cbb81610ca5565b8114610cc657600080fd5b50565b600081359050610cd881610cb2565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610d0357610d02610cde565b5b8235905067ffffffffffffffff811115610d2057610d1f610ce3565b5b602083019150836001820283011115610d3c57610d3b610ce8565b5b9250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d9182610d48565b810181811067ffffffffffffffff82111715610db057610daf610d59565b5b80604052505050565b6000610dc3610c57565b9050610dcf8282610d88565b919050565b600080fd5b6000819050919050565b610dec81610dd9565b8114610df757600080fd5b50565b600081359050610e0981610de3565b92915050565b600080fd5b600067ffffffffffffffff821115610e2f57610e2e610d59565b5b610e3882610d48565b9050602081019050919050565b82818337600083830152505050565b6000610e67610e6284610e14565b610db9565b905082815260208101848484011115610e8357610e82610e0f565b5b610e8e848285610e45565b509392505050565b600082601f830112610eab57610eaa610cde565b5b8135610ebb848260208601610e54565b91505092915050565b600060608284031215610eda57610ed9610d43565b5b610ee46060610db9565b90506000610ef484828501610dfa565b6000830152506020610f0884828501610dfa565b602083015250604082013567ffffffffffffffff811115610f2c57610f2b610dd4565b5b610f3884828501610e96565b60408301525092915050565b600080600080600080600060a0888a031215610f6357610f62610c61565b5b6000610f718a828b01610c90565b9750506020610f828a828b01610cc9565b965050604088013567ffffffffffffffff811115610fa357610fa2610c66565b5b610faf8a828b01610ced565b9550955050606088013567ffffffffffffffff811115610fd257610fd1610c66565b5b610fde8a828b01610ced565b9350935050608088013567ffffffffffffffff81111561100157611000610c66565b5b61100d8a828b01610ec4565b91505092959891949750929550565b61102581610dd9565b82525050565b6000604082019050611040600083018561101c565b61104d602083018461101c565b9392505050565b6000602082019050611069600083018461101c565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6110a481610c6b565b82525050565b6110b381610dd9565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110e4826110b9565b9050919050565b6110f4816110d9565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611134578082015181840152602081019050611119565b60008484015250505050565b600061114b826110fa565b6111558185611105565b9350611165818560208601611116565b61116e81610d48565b840191505092915050565b600060608301600083015161119160008601826110aa565b5060208301516111a460208601826110aa565b50604083015184820360408601526111bc8282611140565b9150508091505092915050565b6000610120830160008301516111e2600086018261109b565b5060208301516111f560208601826110aa565b50604083015161120860408601826110aa565b50606083015161121b60608601826110eb565b50608083015161122e60808601826110aa565b5060a083015161124160a08601826110aa565b5060c083015184820360c08601526112598282611140565b91505060e083015184820360e08601526112738282611179565b91505061010083015184820361010086015261128f8282611140565b9150508091505092915050565b60006112a883836111c9565b905092915050565b6000602082019050919050565b60006112c88261106f565b6112d2818561107a565b9350836020820285016112e48561108b565b8060005b858110156113205784840389528151611301858261129c565b945061130c836112b0565b925060208a019950506001810190506112e8565b50829750879550505050505092915050565b6000602082019050818103600083015261134c81846112bd565b905092915050565b61135d816110d9565b811461136857600080fd5b50565b60008135905061137a81611354565b92915050565b60008060008060008060008060006101008a8c0312156113a3576113a2610c61565b5b60006113b18c828d01610c90565b99505060206113c28c828d01610dfa565b98505060406113d38c828d01610dfa565b97505060606113e48c828d0161136b565b96505060806113f58c828d01610dfa565b95505060a06114068c828d01610dfa565b94505060c08a013567ffffffffffffffff81111561142757611426610c66565b5b6114338c828d01610ced565b935093505060e08a013567ffffffffffffffff81111561145657611455610c66565b5b6114628c828d01610ec4565b9150509295985092959850929598565b600061147d826110b9565b9050919050565b61148d81611472565b811461149857600080fd5b50565b6000813590506114aa81611484565b92915050565b6000806000606084860312156114c9576114c8610c61565b5b60006114d786828701610dfa565b93505060206114e886828701610dfa565b92505060406114f98682870161149b565b9150509250925092565b60006020828403121561151957611518610c61565b5b600061152784828501610dfa565b91505092915050565b600061012083016000830151611549600086018261109b565b50602083015161155c60208601826110aa565b50604083015161156f60408601826110aa565b50606083015161158260608601826110eb565b50608083015161159560808601826110aa565b5060a08301516115a860a08601826110aa565b5060c083015184820360c08601526115c08282611140565b91505060e083015184820360e08601526115da8282611179565b9150506101008301518482036101008601526115f68282611140565b9150508091505092915050565b6000602082019050818103600083015261161d8184611530565b905092915050565b60008060008060008060008060e0898b03121561164557611644610c61565b5b60006116538b828c01610c90565b98505060206116648b828c01610dfa565b97505060406116758b828c01610dfa565b96505060606116868b828c0161136b565b95505060806116978b828c01610dfa565b94505060a089013567ffffffffffffffff8111156116b8576116b7610c66565b5b6116c48b828c01610ced565b935093505060c089013567ffffffffffffffff8111156116e7576116e6610c66565b5b6116f38b828c01610ec4565b9150509295985092959890939650565b6000806000806080858703121561171d5761171c610c61565b5b600061172b87828801610c90565b945050602061173c87828801610dfa565b935050604061174d87828801610dfa565b925050606061175e8782880161136b565b91505092959194509250565b60008060008060008060008060008060006101208c8e0312156117905761178f610c61565b5b600061179e8e828f01610c90565b9b505060206117af8e828f01610dfa565b9a505060406117c08e828f01610dfa565b99505060606117d18e828f0161136b565b98505060806117e28e828f01610dfa565b97505060a06117f38e828f01610dfa565b96505060c08c013567ffffffffffffffff81111561181457611813610c66565b5b6118208e828f01610ec4565b95505060e08c013567ffffffffffffffff81111561184157611840610c66565b5b61184d8e828f01610ced565b94509450506101008c013567ffffffffffffffff81111561187157611870610c66565b5b61187d8e828f01610ced565b92509250509295989b509295989b9093969950565b61189b81611472565b82525050565b60006020820190506118b66000830184611892565b92915050565b6000806000606084860312156118d5576118d4610c61565b5b60006118e386828701610c90565b93505060206118f486828701610dfa565b92505060406119058682870161149b565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061198557607f821691505b6020821081036119985761199761193e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611a2f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826119f2565b611a3986836119f2565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611a76611a71611a6c84610dd9565b611a51565b610dd9565b9050919050565b6000819050919050565b611a9083611a5b565b611aa4611a9c82611a7d565b8484546119ff565b825550505050565b600090565b611ab9611aac565b611ac4818484611a87565b505050565b5b81811015611ae857611add600082611ab1565b600181019050611aca565b5050565b601f821115611b2d57611afe816119cd565b611b07846119e2565b81016020851015611b16578190505b611b2a611b22856119e2565b830182611ac9565b50505b505050565b600082821c905092915050565b6000611b5060001984600802611b32565b1980831691505092915050565b6000611b698383611b3f565b9150826002028217905092915050565b611b82826110fa565b67ffffffffffffffff811115611b9b57611b9a610d59565b5b611ba5825461196d565b611bb0828285611aec565b600060209050601f831160018114611be35760008415611bd1578287015190505b611bdb8582611b5d565b865550611c43565b601f198416611bf1866119cd565b60005b82811015611c1957848901518255600182019150602085019450602081019050611bf4565b86831015611c365784890151611c32601f891682611b3f565b8355505b6001600288020188555050505b50505050505056fea26469706673582212208f4c82bb4e6f9f60bf1ca4eb250222b364684d7ea711c29372104d66b7d85a4d64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C81 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B68BE29 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8B68BE29 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x8F2E1D18 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x9BA3AA74 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x9FBF10FC EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xC4DE93A5 EQ PUSH2 0x258 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0xA512369 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x17293C87 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x52EFEA6E EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x61790431 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x84D0DBA3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x87B21EFC EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xF44 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP3 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x2B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x681 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x93F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x94F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x18BC JUMP JUMPDEST PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP GT ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 SLOAD DUP1 PUSH2 0x2D7 JUMPI PUSH2 0x2D6 PUSH2 0x190F JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH2 0xFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x7 DUP3 ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xB6D JUMP JUMPDEST POP POP PUSH1 0xA DUP3 ADD PUSH1 0x0 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0xB6D JUMP JUMPDEST POP POP SWAP1 SSTORE PUSH2 0x2B8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x66D JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0x490 SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BC SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x509 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4DE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x509 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x546 SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x572 SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x594 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD DUP1 SLOAD PUSH2 0x5DC SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x608 SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x655 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x62A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x655 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x638 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3BE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x68E PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6A2 JUMPI PUSH2 0x6A1 PUSH2 0x199E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0x76A SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x796 SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x820 SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x84C SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x899 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x86E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x899 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x87C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD DUP1 SLOAD PUSH2 0x8B6 SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E2 SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x92F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x904 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x92F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x912 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP14 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SWAP1 DUP2 PUSH2 0xB03 SWAP2 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST POP POP POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SWAP1 DUP2 PUSH2 0xB4F SWAP2 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0xB79 SWAP1 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0xB8B JUMPI POP PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xBA9 SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0C PUSH2 0xC36 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xC32 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xC1A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC82 DUP2 PUSH2 0xC6B JUMP JUMPDEST DUP2 EQ PUSH2 0xC8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC9F DUP2 PUSH2 0xC79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCBB DUP2 PUSH2 0xCA5 JUMP JUMPDEST DUP2 EQ PUSH2 0xCC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCD8 DUP2 PUSH2 0xCB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xD03 JUMPI PUSH2 0xD02 PUSH2 0xCDE JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD20 JUMPI PUSH2 0xD1F PUSH2 0xCE3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xD3C JUMPI PUSH2 0xD3B PUSH2 0xCE8 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xD91 DUP3 PUSH2 0xD48 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xDB0 JUMPI PUSH2 0xDAF PUSH2 0xD59 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC3 PUSH2 0xC57 JUMP JUMPDEST SWAP1 POP PUSH2 0xDCF DUP3 DUP3 PUSH2 0xD88 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDEC DUP2 PUSH2 0xDD9 JUMP JUMPDEST DUP2 EQ PUSH2 0xDF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE09 DUP2 PUSH2 0xDE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE2F JUMPI PUSH2 0xE2E PUSH2 0xD59 JUMP JUMPDEST JUMPDEST PUSH2 0xE38 DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE67 PUSH2 0xE62 DUP5 PUSH2 0xE14 JUMP JUMPDEST PUSH2 0xDB9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xE83 JUMPI PUSH2 0xE82 PUSH2 0xE0F JUMP JUMPDEST JUMPDEST PUSH2 0xE8E DUP5 DUP3 DUP6 PUSH2 0xE45 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEAB JUMPI PUSH2 0xEAA PUSH2 0xCDE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEBB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xE54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEDA JUMPI PUSH2 0xED9 PUSH2 0xD43 JUMP JUMPDEST JUMPDEST PUSH2 0xEE4 PUSH1 0x60 PUSH2 0xDB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEF4 DUP5 DUP3 DUP6 ADD PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xF08 DUP5 DUP3 DUP6 ADD PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF2C JUMPI PUSH2 0xF2B PUSH2 0xDD4 JUMP JUMPDEST JUMPDEST PUSH2 0xF38 DUP5 DUP3 DUP6 ADD PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH2 0xF62 PUSH2 0xC61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF71 DUP11 DUP3 DUP12 ADD PUSH2 0xC90 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xF82 DUP11 DUP3 DUP12 ADD PUSH2 0xCC9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFA3 JUMPI PUSH2 0xFA2 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0xFAF DUP11 DUP3 DUP12 ADD PUSH2 0xCED JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFD2 JUMPI PUSH2 0xFD1 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0xFDE DUP11 DUP3 DUP12 ADD PUSH2 0xCED JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1001 JUMPI PUSH2 0x1000 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0x100D DUP11 DUP3 DUP12 ADD PUSH2 0xEC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x1025 DUP2 PUSH2 0xDD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1040 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x101C JUMP JUMPDEST PUSH2 0x104D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x101C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1069 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x101C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A4 DUP2 PUSH2 0xC6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x10B3 DUP2 PUSH2 0xDD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E4 DUP3 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F4 DUP2 PUSH2 0x10D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1134 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114B DUP3 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x1155 DUP2 DUP6 PUSH2 0x1105 JUMP JUMPDEST SWAP4 POP PUSH2 0x1165 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x116E DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x1191 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x11A4 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x11BC DUP3 DUP3 PUSH2 0x1140 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x11E2 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x109B JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x11F5 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1208 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x121B PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x10EB JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x122E PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x1241 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1259 DUP3 DUP3 PUSH2 0x1140 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xE0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x1273 DUP3 DUP3 PUSH2 0x1179 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x100 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x128F DUP3 DUP3 PUSH2 0x1140 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A8 DUP4 DUP4 PUSH2 0x11C9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C8 DUP3 PUSH2 0x106F JUMP JUMPDEST PUSH2 0x12D2 DUP2 DUP6 PUSH2 0x107A JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x12E4 DUP6 PUSH2 0x108B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1320 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1301 DUP6 DUP3 PUSH2 0x129C JUMP JUMPDEST SWAP5 POP PUSH2 0x130C DUP4 PUSH2 0x12B0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x12E8 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x134C DUP2 DUP5 PUSH2 0x12BD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x135D DUP2 PUSH2 0x10D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x137A DUP2 PUSH2 0x1354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x13A3 JUMPI PUSH2 0x13A2 PUSH2 0xC61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13B1 DUP13 DUP3 DUP14 ADD PUSH2 0xC90 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 PUSH2 0x13C2 DUP13 DUP3 DUP14 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 PUSH2 0x13D3 DUP13 DUP3 DUP14 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0x13E4 DUP13 DUP3 DUP14 ADD PUSH2 0x136B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH2 0x13F5 DUP13 DUP3 DUP14 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH2 0x1406 DUP13 DUP3 DUP14 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1427 JUMPI PUSH2 0x1426 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0x1433 DUP13 DUP3 DUP14 ADD PUSH2 0xCED JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0xE0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1456 JUMPI PUSH2 0x1455 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0x1462 DUP13 DUP3 DUP14 ADD PUSH2 0xEC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147D DUP3 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x148D DUP2 PUSH2 0x1472 JUMP JUMPDEST DUP2 EQ PUSH2 0x1498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14AA DUP2 PUSH2 0x1484 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14C9 JUMPI PUSH2 0x14C8 PUSH2 0xC61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14D7 DUP7 DUP3 DUP8 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14E8 DUP7 DUP3 DUP8 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14F9 DUP7 DUP3 DUP8 ADD PUSH2 0x149B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1519 JUMPI PUSH2 0x1518 PUSH2 0xC61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1527 DUP5 DUP3 DUP6 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x1549 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x109B JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x155C PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x156F PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1582 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x10EB JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1595 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x15A8 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x15C0 DUP3 DUP3 PUSH2 0x1140 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xE0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x15DA DUP3 DUP3 PUSH2 0x1179 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x100 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x15F6 DUP3 DUP3 PUSH2 0x1140 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x161D DUP2 DUP5 PUSH2 0x1530 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1645 JUMPI PUSH2 0x1644 PUSH2 0xC61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1653 DUP12 DUP3 DUP13 ADD PUSH2 0xC90 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1664 DUP12 DUP3 DUP13 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x1675 DUP12 DUP3 DUP13 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x1686 DUP12 DUP3 DUP13 ADD PUSH2 0x136B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x1697 DUP12 DUP3 DUP13 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16B8 JUMPI PUSH2 0x16B7 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0x16C4 DUP12 DUP3 DUP13 ADD PUSH2 0xCED JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E7 JUMPI PUSH2 0x16E6 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0x16F3 DUP12 DUP3 DUP13 ADD PUSH2 0xEC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x171D JUMPI PUSH2 0x171C PUSH2 0xC61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172B DUP8 DUP3 DUP9 ADD PUSH2 0xC90 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x173C DUP8 DUP3 DUP9 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x174D DUP8 DUP3 DUP9 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x175E DUP8 DUP3 DUP9 ADD PUSH2 0x136B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x1790 JUMPI PUSH2 0x178F PUSH2 0xC61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x179E DUP15 DUP3 DUP16 ADD PUSH2 0xC90 JUMP JUMPDEST SWAP12 POP POP PUSH1 0x20 PUSH2 0x17AF DUP15 DUP3 DUP16 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP11 POP POP PUSH1 0x40 PUSH2 0x17C0 DUP15 DUP3 DUP16 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP10 POP POP PUSH1 0x60 PUSH2 0x17D1 DUP15 DUP3 DUP16 ADD PUSH2 0x136B JUMP JUMPDEST SWAP9 POP POP PUSH1 0x80 PUSH2 0x17E2 DUP15 DUP3 DUP16 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP8 POP POP PUSH1 0xA0 PUSH2 0x17F3 DUP15 DUP3 DUP16 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP7 POP POP PUSH1 0xC0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1814 JUMPI PUSH2 0x1813 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0x1820 DUP15 DUP3 DUP16 ADD PUSH2 0xEC4 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xE0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1841 JUMPI PUSH2 0x1840 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0x184D DUP15 DUP3 DUP16 ADD PUSH2 0xCED JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH2 0x100 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1871 JUMPI PUSH2 0x1870 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0x187D DUP15 DUP3 DUP16 ADD PUSH2 0xCED JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH2 0x189B DUP2 PUSH2 0x1472 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1892 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18D5 JUMPI PUSH2 0x18D4 PUSH2 0xC61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18E3 DUP7 DUP3 DUP8 ADD PUSH2 0xC90 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18F4 DUP7 DUP3 DUP8 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1905 DUP7 DUP3 DUP8 ADD PUSH2 0x149B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1985 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1998 JUMPI PUSH2 0x1997 PUSH2 0x193E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A2F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x1A39 DUP7 DUP4 PUSH2 0x19F2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A76 PUSH2 0x1A71 PUSH2 0x1A6C DUP5 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x1A51 JUMP JUMPDEST PUSH2 0xDD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A90 DUP4 PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x1AA4 PUSH2 0x1A9C DUP3 PUSH2 0x1A7D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x19FF JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1AB9 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x1AC4 DUP2 DUP5 DUP5 PUSH2 0x1A87 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AE8 JUMPI PUSH2 0x1ADD PUSH1 0x0 DUP3 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1ACA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B2D JUMPI PUSH2 0x1AFE DUP2 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x1B07 DUP5 PUSH2 0x19E2 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1B16 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1B2A PUSH2 0x1B22 DUP6 PUSH2 0x19E2 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1AC9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1B32 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B69 DUP4 DUP4 PUSH2 0x1B3F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B82 DUP3 PUSH2 0x10FA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B9B JUMPI PUSH2 0x1B9A PUSH2 0xD59 JUMP JUMPDEST JUMPDEST PUSH2 0x1BA5 DUP3 SLOAD PUSH2 0x196D JUMP JUMPDEST PUSH2 0x1BB0 DUP3 DUP3 DUP6 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1BE3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1BD1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1BDB DUP6 DUP3 PUSH2 0x1B5D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1BF1 DUP7 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C19 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BF4 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1C36 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1C32 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1B3F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0x4C DUP3 0xBB 0x4E PUSH16 0x9F60BF1CA4EB250222B364684D7EA711 0xC2 SWAP4 PUSH19 0x104D66B7D85A4D64736F6C6343000812003300 ","sourceMap":"97:2439:24:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@addLiquidity_2190":{"entryPoint":1665,"id":2190,"parameterSlots":3,"returnSlots":0},"@clear_2180":{"entryPoint":695,"id":2180,"parameterSlots":0,"returnSlots":0},"@factory_2329":{"entryPoint":2911,"id":2329,"parameterSlots":0,"returnSlots":1},"@getSwapInvocationAt_2156":{"entryPoint":1670,"id":2156,"parameterSlots":1,"returnSlots":1},"@getSwapInvocationCount_2165":{"entryPoint":683,"id":2165,"parameterSlots":0,"returnSlots":1},"@getSwapInvocations_2143":{"entryPoint":922,"id":2143,"parameterSlots":0,"returnSlots":1},"@instantRedeemLocal_2264":{"entryPoint":2916,"id":2264,"parameterSlots":3,"returnSlots":1},"@quoteLayerZeroFee_2318":{"entryPoint":661,"id":2318,"parameterSlots":7,"returnSlots":2},"@redeemLocal_2283":{"entryPoint":2367,"id":2283,"parameterSlots":8,"returnSlots":0},"@redeemRemote_2250":{"entryPoint":1654,"id":2250,"parameterSlots":9,"returnSlots":0},"@sendCredits_2295":{"entryPoint":2377,"id":2295,"parameterSlots":4,"returnSlots":0},"@swap_2229":{"entryPoint":2383,"id":2229,"parameterSlots":11,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":3668,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5275,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":4971,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":3309,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":3734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_lzTxObj_$1994_memory_ptr":{"entryPoint":3780,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":3216,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3578,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":3273,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16t_uint256t_address":{"entryPoint":6332,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_uint256t_uint256t_address_payable":{"entryPoint":5891,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint16t_uint256t_uint256t_address_payablet_uint256t_bytes_calldata_ptrt_struct$_lzTxObj_$1994_memory_ptr":{"entryPoint":5669,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_uint16t_uint256t_uint256t_address_payablet_uint256t_uint256t_bytes_calldata_ptrt_struct$_lzTxObj_$1994_memory_ptr":{"entryPoint":4992,"id":null,"parameterSlots":2,"returnSlots":9},"abi_decode_tuple_t_uint16t_uint256t_uint256t_address_payablet_uint256t_uint256t_struct$_lzTxObj_$1994_memory_ptrt_bytes_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":5994,"id":null,"parameterSlots":2,"returnSlots":11},"abi_decode_tuple_t_uint16t_uint8t_bytes_calldata_ptrt_bytes_calldata_ptrt_struct$_lzTxObj_$1994_memory_ptr":{"entryPoint":3908,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_uint256":{"entryPoint":5379,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_address":{"entryPoint":5296,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr":{"entryPoint":4764,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_payable_to_t_address_payable":{"entryPoint":4331,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6290,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":4797,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":4416,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr":{"entryPoint":4553,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_fromStack":{"entryPoint":5424,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_lzTxObj_$1994_memory_ptr_to_t_struct$_lzTxObj_$1994_memory_ptr":{"entryPoint":4473,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16":{"entryPoint":4251,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":4266,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4124,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6305,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4914,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr__to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr__fromStack_reversed":{"entryPoint":5635,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4180,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4139,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":3513,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3159,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":3604,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr":{"entryPoint":4235,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage":{"entryPoint":6605,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr":{"entryPoint":4207,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4346,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr":{"entryPoint":4784,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":4218,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":4357,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_bytes_storage":{"entryPoint":6892,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":5234,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":4313,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":3179,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4281,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3545,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3237,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":6857,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":6747,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":7033,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":3653,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4374,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":6626,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6509,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":7005,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":3464,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":6737,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":6975,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":6462,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":6415,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6558,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3417,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":6781,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":3299,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3294,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":3395,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":3540,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3304,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":3599,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3174,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3169,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3400,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":6642,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":6962,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":6833,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":6655,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":6791,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5252,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":4948,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":3193,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3555,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":3250,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":6828,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:32273:27","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:27","statements":[{"nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:27"},"nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:27"},"nodeType":"YulFunctionCall","src":"187:12:27"},"nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:27"},"nodeType":"YulFunctionCall","src":"310:12:27"},"nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nodeType":"YulBlock","src":"378:45:27","statements":[{"nodeType":"YulAssignment","src":"388:29:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"410:6:27","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:27"},"nodeType":"YulFunctionCall","src":"399:18:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:27"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:27","type":""}],"src":"334:89:27"},{"body":{"nodeType":"YulBlock","src":"471:78:27","statements":[{"body":{"nodeType":"YulBlock","src":"527:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"536:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"539:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"529:6:27"},"nodeType":"YulFunctionCall","src":"529:12:27"},"nodeType":"YulExpressionStatement","src":"529:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"494:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"518:5:27"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"501:16:27"},"nodeType":"YulFunctionCall","src":"501:23:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"491:2:27"},"nodeType":"YulFunctionCall","src":"491:34:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"484:6:27"},"nodeType":"YulFunctionCall","src":"484:42:27"},"nodeType":"YulIf","src":"481:62:27"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"464:5:27","type":""}],"src":"429:120:27"},{"body":{"nodeType":"YulBlock","src":"606:86:27","statements":[{"nodeType":"YulAssignment","src":"616:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"638:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"625:12:27"},"nodeType":"YulFunctionCall","src":"625:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"616:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"680:5:27"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"654:25:27"},"nodeType":"YulFunctionCall","src":"654:32:27"},"nodeType":"YulExpressionStatement","src":"654:32:27"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"584:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"592:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"600:5:27","type":""}],"src":"555:137:27"},{"body":{"nodeType":"YulBlock","src":"741:43:27","statements":[{"nodeType":"YulAssignment","src":"751:27:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"766:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"773:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"762:3:27"},"nodeType":"YulFunctionCall","src":"762:16:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"751:7:27"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"723:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"733:7:27","type":""}],"src":"698:86:27"},{"body":{"nodeType":"YulBlock","src":"831:77:27","statements":[{"body":{"nodeType":"YulBlock","src":"886:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"895:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"898:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"888:6:27"},"nodeType":"YulFunctionCall","src":"888:12:27"},"nodeType":"YulExpressionStatement","src":"888:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"854:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"877:5:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"861:15:27"},"nodeType":"YulFunctionCall","src":"861:22:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"851:2:27"},"nodeType":"YulFunctionCall","src":"851:33:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"844:6:27"},"nodeType":"YulFunctionCall","src":"844:41:27"},"nodeType":"YulIf","src":"841:61:27"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"824:5:27","type":""}],"src":"790:118:27"},{"body":{"nodeType":"YulBlock","src":"964:85:27","statements":[{"nodeType":"YulAssignment","src":"974:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"996:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"983:12:27"},"nodeType":"YulFunctionCall","src":"983:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"974:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1037:5:27"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"1012:24:27"},"nodeType":"YulFunctionCall","src":"1012:31:27"},"nodeType":"YulExpressionStatement","src":"1012:31:27"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"942:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"950:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"958:5:27","type":""}],"src":"914:135:27"},{"body":{"nodeType":"YulBlock","src":"1144:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1161:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1164:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1154:6:27"},"nodeType":"YulFunctionCall","src":"1154:12:27"},"nodeType":"YulExpressionStatement","src":"1154:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1055:117:27"},{"body":{"nodeType":"YulBlock","src":"1267:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1284:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1287:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1277:6:27"},"nodeType":"YulFunctionCall","src":"1277:12:27"},"nodeType":"YulExpressionStatement","src":"1277:12:27"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"1178:117:27"},{"body":{"nodeType":"YulBlock","src":"1390:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1407:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1410:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1400:6:27"},"nodeType":"YulFunctionCall","src":"1400:12:27"},"nodeType":"YulExpressionStatement","src":"1400:12:27"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1301:117:27"},{"body":{"nodeType":"YulBlock","src":"1511:478:27","statements":[{"body":{"nodeType":"YulBlock","src":"1560:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1562:77:27"},"nodeType":"YulFunctionCall","src":"1562:79:27"},"nodeType":"YulExpressionStatement","src":"1562:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1539:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1547:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1535:3:27"},"nodeType":"YulFunctionCall","src":"1535:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"1554:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1531:3:27"},"nodeType":"YulFunctionCall","src":"1531:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1524:6:27"},"nodeType":"YulFunctionCall","src":"1524:35:27"},"nodeType":"YulIf","src":"1521:122:27"},{"nodeType":"YulAssignment","src":"1652:30:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1675:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1662:12:27"},"nodeType":"YulFunctionCall","src":"1662:20:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1652:6:27"}]},{"body":{"nodeType":"YulBlock","src":"1725:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1727:77:27"},"nodeType":"YulFunctionCall","src":"1727:79:27"},"nodeType":"YulExpressionStatement","src":"1727:79:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1697:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1705:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1694:2:27"},"nodeType":"YulFunctionCall","src":"1694:30:27"},"nodeType":"YulIf","src":"1691:117:27"},{"nodeType":"YulAssignment","src":"1817:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1833:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1841:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1829:3:27"},"nodeType":"YulFunctionCall","src":"1829:17:27"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1817:8:27"}]},{"body":{"nodeType":"YulBlock","src":"1900:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"1902:77:27"},"nodeType":"YulFunctionCall","src":"1902:79:27"},"nodeType":"YulExpressionStatement","src":"1902:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1865:8:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1879:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1887:4:27","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1875:3:27"},"nodeType":"YulFunctionCall","src":"1875:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1861:3:27"},"nodeType":"YulFunctionCall","src":"1861:32:27"},{"name":"end","nodeType":"YulIdentifier","src":"1895:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1858:2:27"},"nodeType":"YulFunctionCall","src":"1858:41:27"},"nodeType":"YulIf","src":"1855:128:27"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1478:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"1486:3:27","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1494:8:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1504:6:27","type":""}],"src":"1437:552:27"},{"body":{"nodeType":"YulBlock","src":"2084:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2101:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2104:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2094:6:27"},"nodeType":"YulFunctionCall","src":"2094:12:27"},"nodeType":"YulExpressionStatement","src":"2094:12:27"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"1995:117:27"},{"body":{"nodeType":"YulBlock","src":"2166:54:27","statements":[{"nodeType":"YulAssignment","src":"2176:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2194:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2201:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2190:3:27"},"nodeType":"YulFunctionCall","src":"2190:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2210:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2206:3:27"},"nodeType":"YulFunctionCall","src":"2206:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2186:3:27"},"nodeType":"YulFunctionCall","src":"2186:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2176:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2149:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2159:6:27","type":""}],"src":"2118:102:27"},{"body":{"nodeType":"YulBlock","src":"2254:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2271:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2274:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2264:6:27"},"nodeType":"YulFunctionCall","src":"2264:88:27"},"nodeType":"YulExpressionStatement","src":"2264:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2368:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2371:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2361:6:27"},"nodeType":"YulFunctionCall","src":"2361:15:27"},"nodeType":"YulExpressionStatement","src":"2361:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2392:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2395:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2385:6:27"},"nodeType":"YulFunctionCall","src":"2385:15:27"},"nodeType":"YulExpressionStatement","src":"2385:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2226:180:27"},{"body":{"nodeType":"YulBlock","src":"2455:238:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2465:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2487:6:27"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2517:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2495:21:27"},"nodeType":"YulFunctionCall","src":"2495:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2483:3:27"},"nodeType":"YulFunctionCall","src":"2483:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2469:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2634:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2636:16:27"},"nodeType":"YulFunctionCall","src":"2636:18:27"},"nodeType":"YulExpressionStatement","src":"2636:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2577:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"2589:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2574:2:27"},"nodeType":"YulFunctionCall","src":"2574:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2613:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2625:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2610:2:27"},"nodeType":"YulFunctionCall","src":"2610:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2571:2:27"},"nodeType":"YulFunctionCall","src":"2571:62:27"},"nodeType":"YulIf","src":"2568:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2672:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2676:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2665:6:27"},"nodeType":"YulFunctionCall","src":"2665:22:27"},"nodeType":"YulExpressionStatement","src":"2665:22:27"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2441:6:27","type":""},{"name":"size","nodeType":"YulTypedName","src":"2449:4:27","type":""}],"src":"2412:281:27"},{"body":{"nodeType":"YulBlock","src":"2740:88:27","statements":[{"nodeType":"YulAssignment","src":"2750:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2760:18:27"},"nodeType":"YulFunctionCall","src":"2760:20:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2750:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2809:6:27"},{"name":"size","nodeType":"YulIdentifier","src":"2817:4:27"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2789:19:27"},"nodeType":"YulFunctionCall","src":"2789:33:27"},"nodeType":"YulExpressionStatement","src":"2789:33:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2724:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2733:6:27","type":""}],"src":"2699:129:27"},{"body":{"nodeType":"YulBlock","src":"2923:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2940:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2943:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2933:6:27"},"nodeType":"YulFunctionCall","src":"2933:12:27"},"nodeType":"YulExpressionStatement","src":"2933:12:27"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"2834:117:27"},{"body":{"nodeType":"YulBlock","src":"3002:32:27","statements":[{"nodeType":"YulAssignment","src":"3012:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"3023:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3012:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2984:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2994:7:27","type":""}],"src":"2957:77:27"},{"body":{"nodeType":"YulBlock","src":"3083:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"3140:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3149:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3152:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3142:6:27"},"nodeType":"YulFunctionCall","src":"3142:12:27"},"nodeType":"YulExpressionStatement","src":"3142:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3106:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3131:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3113:17:27"},"nodeType":"YulFunctionCall","src":"3113:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3103:2:27"},"nodeType":"YulFunctionCall","src":"3103:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3096:6:27"},"nodeType":"YulFunctionCall","src":"3096:43:27"},"nodeType":"YulIf","src":"3093:63:27"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3076:5:27","type":""}],"src":"3040:122:27"},{"body":{"nodeType":"YulBlock","src":"3220:87:27","statements":[{"nodeType":"YulAssignment","src":"3230:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3252:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3239:12:27"},"nodeType":"YulFunctionCall","src":"3239:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3230:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3295:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3268:26:27"},"nodeType":"YulFunctionCall","src":"3268:33:27"},"nodeType":"YulExpressionStatement","src":"3268:33:27"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3198:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"3206:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3214:5:27","type":""}],"src":"3168:139:27"},{"body":{"nodeType":"YulBlock","src":"3402:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3419:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3422:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3412:6:27"},"nodeType":"YulFunctionCall","src":"3412:12:27"},"nodeType":"YulExpressionStatement","src":"3412:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3313:117:27"},{"body":{"nodeType":"YulBlock","src":"3502:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"3607:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3609:16:27"},"nodeType":"YulFunctionCall","src":"3609:18:27"},"nodeType":"YulExpressionStatement","src":"3609:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3579:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3587:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3576:2:27"},"nodeType":"YulFunctionCall","src":"3576:30:27"},"nodeType":"YulIf","src":"3573:56:27"},{"nodeType":"YulAssignment","src":"3639:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3669:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3647:21:27"},"nodeType":"YulFunctionCall","src":"3647:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3639:4:27"}]},{"nodeType":"YulAssignment","src":"3713:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3725:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3731:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3721:3:27"},"nodeType":"YulFunctionCall","src":"3721:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3713:4:27"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3486:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3497:4:27","type":""}],"src":"3436:307:27"},{"body":{"nodeType":"YulBlock","src":"3813:82:27","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3836:3:27"},{"name":"src","nodeType":"YulIdentifier","src":"3841:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"3846:6:27"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3823:12:27"},"nodeType":"YulFunctionCall","src":"3823:30:27"},"nodeType":"YulExpressionStatement","src":"3823:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3873:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"3878:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3869:3:27"},"nodeType":"YulFunctionCall","src":"3869:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"3887:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3862:6:27"},"nodeType":"YulFunctionCall","src":"3862:27:27"},"nodeType":"YulExpressionStatement","src":"3862:27:27"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3795:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3800:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"3805:6:27","type":""}],"src":"3749:146:27"},{"body":{"nodeType":"YulBlock","src":"3984:340:27","statements":[{"nodeType":"YulAssignment","src":"3994:74:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4060:6:27"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4019:40:27"},"nodeType":"YulFunctionCall","src":"4019:48:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4003:15:27"},"nodeType":"YulFunctionCall","src":"4003:65:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3994:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4084:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"4091:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4077:6:27"},"nodeType":"YulFunctionCall","src":"4077:21:27"},"nodeType":"YulExpressionStatement","src":"4077:21:27"},{"nodeType":"YulVariableDeclaration","src":"4107:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4122:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"4129:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4118:3:27"},"nodeType":"YulFunctionCall","src":"4118:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4111:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4172:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4174:77:27"},"nodeType":"YulFunctionCall","src":"4174:79:27"},"nodeType":"YulExpressionStatement","src":"4174:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4153:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"4158:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4149:3:27"},"nodeType":"YulFunctionCall","src":"4149:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"4167:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4146:2:27"},"nodeType":"YulFunctionCall","src":"4146:25:27"},"nodeType":"YulIf","src":"4143:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4301:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"4306:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"4311:6:27"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4264:36:27"},"nodeType":"YulFunctionCall","src":"4264:54:27"},"nodeType":"YulExpressionStatement","src":"4264:54:27"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3957:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"3962:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"3970:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3978:5:27","type":""}],"src":"3901:423:27"},{"body":{"nodeType":"YulBlock","src":"4404:277:27","statements":[{"body":{"nodeType":"YulBlock","src":"4453:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4455:77:27"},"nodeType":"YulFunctionCall","src":"4455:79:27"},"nodeType":"YulExpressionStatement","src":"4455:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4432:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4440:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4428:3:27"},"nodeType":"YulFunctionCall","src":"4428:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"4447:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4424:3:27"},"nodeType":"YulFunctionCall","src":"4424:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4417:6:27"},"nodeType":"YulFunctionCall","src":"4417:35:27"},"nodeType":"YulIf","src":"4414:122:27"},{"nodeType":"YulVariableDeclaration","src":"4545:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4572:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4559:12:27"},"nodeType":"YulFunctionCall","src":"4559:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4549:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4588:87:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4648:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4656:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4644:3:27"},"nodeType":"YulFunctionCall","src":"4644:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"4663:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"4671:3:27"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4597:46:27"},"nodeType":"YulFunctionCall","src":"4597:78:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4588:5:27"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4382:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"4390:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4398:5:27","type":""}],"src":"4343:338:27"},{"body":{"nodeType":"YulBlock","src":"4805:853:27","statements":[{"body":{"nodeType":"YulBlock","src":"4849:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"4851:77:27"},"nodeType":"YulFunctionCall","src":"4851:79:27"},"nodeType":"YulExpressionStatement","src":"4851:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4826:3:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4831:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4822:3:27"},"nodeType":"YulFunctionCall","src":"4822:19:27"},{"kind":"number","nodeType":"YulLiteral","src":"4843:4:27","type":"","value":"0x60"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4818:3:27"},"nodeType":"YulFunctionCall","src":"4818:30:27"},"nodeType":"YulIf","src":"4815:117:27"},{"nodeType":"YulAssignment","src":"4941:30:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4966:4:27","type":"","value":"0x60"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4950:15:27"},"nodeType":"YulFunctionCall","src":"4950:21:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4941:5:27"}]},{"nodeType":"YulBlock","src":"4981:159:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5025:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5039:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5029:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5065:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"5072:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5061:3:27"},"nodeType":"YulFunctionCall","src":"5061:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5104:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5115:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5100:3:27"},"nodeType":"YulFunctionCall","src":"5100:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"5124:3:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5079:20:27"},"nodeType":"YulFunctionCall","src":"5079:49:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5054:6:27"},"nodeType":"YulFunctionCall","src":"5054:75:27"},"nodeType":"YulExpressionStatement","src":"5054:75:27"}]},{"nodeType":"YulBlock","src":"5150:162:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5196:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5210:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5200:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5237:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"5244:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5233:3:27"},"nodeType":"YulFunctionCall","src":"5233:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5276:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5287:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5272:3:27"},"nodeType":"YulFunctionCall","src":"5272:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"5296:3:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5251:20:27"},"nodeType":"YulFunctionCall","src":"5251:49:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5226:6:27"},"nodeType":"YulFunctionCall","src":"5226:75:27"},"nodeType":"YulExpressionStatement","src":"5226:75:27"}]},{"nodeType":"YulBlock","src":"5322:329:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5366:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5397:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5408:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5393:3:27"},"nodeType":"YulFunctionCall","src":"5393:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5380:12:27"},"nodeType":"YulFunctionCall","src":"5380:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5370:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5459:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"5461:77:27"},"nodeType":"YulFunctionCall","src":"5461:79:27"},"nodeType":"YulExpressionStatement","src":"5461:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5431:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"5439:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5428:2:27"},"nodeType":"YulFunctionCall","src":"5428:30:27"},"nodeType":"YulIf","src":"5425:117:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5567:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"5574:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5563:3:27"},"nodeType":"YulFunctionCall","src":"5563:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5615:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5626:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5611:3:27"},"nodeType":"YulFunctionCall","src":"5611:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"5635:3:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5581:29:27"},"nodeType":"YulFunctionCall","src":"5581:58:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5556:6:27"},"nodeType":"YulFunctionCall","src":"5556:84:27"},"nodeType":"YulExpressionStatement","src":"5556:84:27"}]}]},"name":"abi_decode_t_struct$_lzTxObj_$1994_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4780:9:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"4791:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4799:5:27","type":""}],"src":"4725:933:27"},{"body":{"nodeType":"YulBlock","src":"5858:1317:27","statements":[{"body":{"nodeType":"YulBlock","src":"5905:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5907:77:27"},"nodeType":"YulFunctionCall","src":"5907:79:27"},"nodeType":"YulExpressionStatement","src":"5907:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5879:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5888:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5875:3:27"},"nodeType":"YulFunctionCall","src":"5875:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5900:3:27","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5871:3:27"},"nodeType":"YulFunctionCall","src":"5871:33:27"},"nodeType":"YulIf","src":"5868:120:27"},{"nodeType":"YulBlock","src":"5998:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6013:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6027:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6017:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6042:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6076:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6087:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6072:3:27"},"nodeType":"YulFunctionCall","src":"6072:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6096:7:27"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"6052:19:27"},"nodeType":"YulFunctionCall","src":"6052:52:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6042:6:27"}]}]},{"nodeType":"YulBlock","src":"6124:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6139:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6153:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6143:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6169:61:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6202:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6213:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6198:3:27"},"nodeType":"YulFunctionCall","src":"6198:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6222:7:27"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"6179:18:27"},"nodeType":"YulFunctionCall","src":"6179:51:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6169:6:27"}]}]},{"nodeType":"YulBlock","src":"6250:297:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6265:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6296:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6307:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6292:3:27"},"nodeType":"YulFunctionCall","src":"6292:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6279:12:27"},"nodeType":"YulFunctionCall","src":"6279:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6269:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6358:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6360:77:27"},"nodeType":"YulFunctionCall","src":"6360:79:27"},"nodeType":"YulExpressionStatement","src":"6360:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6330:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6338:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6327:2:27"},"nodeType":"YulFunctionCall","src":"6327:30:27"},"nodeType":"YulIf","src":"6324:117:27"},{"nodeType":"YulAssignment","src":"6455:82:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6509:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6520:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6505:3:27"},"nodeType":"YulFunctionCall","src":"6505:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6529:7:27"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"6473:31:27"},"nodeType":"YulFunctionCall","src":"6473:64:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6455:6:27"},{"name":"value3","nodeType":"YulIdentifier","src":"6463:6:27"}]}]},{"nodeType":"YulBlock","src":"6557:297:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6572:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6603:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6614:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6599:3:27"},"nodeType":"YulFunctionCall","src":"6599:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6586:12:27"},"nodeType":"YulFunctionCall","src":"6586:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6576:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6665:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6667:77:27"},"nodeType":"YulFunctionCall","src":"6667:79:27"},"nodeType":"YulExpressionStatement","src":"6667:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6637:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6645:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6634:2:27"},"nodeType":"YulFunctionCall","src":"6634:30:27"},"nodeType":"YulIf","src":"6631:117:27"},{"nodeType":"YulAssignment","src":"6762:82:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6816:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6827:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6812:3:27"},"nodeType":"YulFunctionCall","src":"6812:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6836:7:27"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"6780:31:27"},"nodeType":"YulFunctionCall","src":"6780:64:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6762:6:27"},{"name":"value5","nodeType":"YulIdentifier","src":"6770:6:27"}]}]},{"nodeType":"YulBlock","src":"6864:304:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6879:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6910:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6921:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6906:3:27"},"nodeType":"YulFunctionCall","src":"6906:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6893:12:27"},"nodeType":"YulFunctionCall","src":"6893:33:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6883:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6973:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6975:77:27"},"nodeType":"YulFunctionCall","src":"6975:79:27"},"nodeType":"YulExpressionStatement","src":"6975:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6945:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6953:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6942:2:27"},"nodeType":"YulFunctionCall","src":"6942:30:27"},"nodeType":"YulIf","src":"6939:117:27"},{"nodeType":"YulAssignment","src":"7070:88:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7130:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"7141:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7126:3:27"},"nodeType":"YulFunctionCall","src":"7126:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7150:7:27"}],"functionName":{"name":"abi_decode_t_struct$_lzTxObj_$1994_memory_ptr","nodeType":"YulIdentifier","src":"7080:45:27"},"nodeType":"YulFunctionCall","src":"7080:78:27"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7070:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint16t_uint8t_bytes_calldata_ptrt_bytes_calldata_ptrt_struct$_lzTxObj_$1994_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5780:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5791:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5803:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5811:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5819:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5827:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5835:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5843:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"5851:6:27","type":""}],"src":"5664:1511:27"},{"body":{"nodeType":"YulBlock","src":"7246:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7263:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7286:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7268:17:27"},"nodeType":"YulFunctionCall","src":"7268:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7256:6:27"},"nodeType":"YulFunctionCall","src":"7256:37:27"},"nodeType":"YulExpressionStatement","src":"7256:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7234:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7241:3:27","type":""}],"src":"7181:118:27"},{"body":{"nodeType":"YulBlock","src":"7431:206:27","statements":[{"nodeType":"YulAssignment","src":"7441:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7453:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7464:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7449:3:27"},"nodeType":"YulFunctionCall","src":"7449:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7441:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7521:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7534:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7545:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7530:3:27"},"nodeType":"YulFunctionCall","src":"7530:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7477:43:27"},"nodeType":"YulFunctionCall","src":"7477:71:27"},"nodeType":"YulExpressionStatement","src":"7477:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7602:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7615:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7626:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7611:3:27"},"nodeType":"YulFunctionCall","src":"7611:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7558:43:27"},"nodeType":"YulFunctionCall","src":"7558:72:27"},"nodeType":"YulExpressionStatement","src":"7558:72:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7395:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7407:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7415:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7426:4:27","type":""}],"src":"7305:332:27"},{"body":{"nodeType":"YulBlock","src":"7741:124:27","statements":[{"nodeType":"YulAssignment","src":"7751:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7763:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7774:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7759:3:27"},"nodeType":"YulFunctionCall","src":"7759:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7751:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7831:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7844:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7855:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7840:3:27"},"nodeType":"YulFunctionCall","src":"7840:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7787:43:27"},"nodeType":"YulFunctionCall","src":"7787:71:27"},"nodeType":"YulExpressionStatement","src":"7787:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7713:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7725:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7736:4:27","type":""}],"src":"7643:222:27"},{"body":{"nodeType":"YulBlock","src":"7989:40:27","statements":[{"nodeType":"YulAssignment","src":"8000:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8016:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8010:5:27"},"nodeType":"YulFunctionCall","src":"8010:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8000:6:27"}]}]},"name":"array_length_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7972:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7982:6:27","type":""}],"src":"7871:158:27"},{"body":{"nodeType":"YulBlock","src":"8190:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8207:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"8212:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8200:6:27"},"nodeType":"YulFunctionCall","src":"8200:19:27"},"nodeType":"YulExpressionStatement","src":"8200:19:27"},{"nodeType":"YulAssignment","src":"8228:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8247:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8252:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8243:3:27"},"nodeType":"YulFunctionCall","src":"8243:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8228:11:27"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8162:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"8167:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8178:11:27","type":""}],"src":"8035:228:27"},{"body":{"nodeType":"YulBlock","src":"8385:60:27","statements":[{"nodeType":"YulAssignment","src":"8395:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8403:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8395:4:27"}]},{"nodeType":"YulAssignment","src":"8416:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8428:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8433:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8424:3:27"},"nodeType":"YulFunctionCall","src":"8424:14:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8416:4:27"}]}]},"name":"array_dataslot_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8372:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8380:4:27","type":""}],"src":"8269:176:27"},{"body":{"nodeType":"YulBlock","src":"8504:52:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8521:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8543:5:27"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"8526:16:27"},"nodeType":"YulFunctionCall","src":"8526:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8514:6:27"},"nodeType":"YulFunctionCall","src":"8514:36:27"},"nodeType":"YulExpressionStatement","src":"8514:36:27"}]},"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8492:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8499:3:27","type":""}],"src":"8451:105:27"},{"body":{"nodeType":"YulBlock","src":"8617:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8634:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8657:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8639:17:27"},"nodeType":"YulFunctionCall","src":"8639:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8627:6:27"},"nodeType":"YulFunctionCall","src":"8627:37:27"},"nodeType":"YulExpressionStatement","src":"8627:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8605:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8612:3:27","type":""}],"src":"8562:108:27"},{"body":{"nodeType":"YulBlock","src":"8721:81:27","statements":[{"nodeType":"YulAssignment","src":"8731:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8746:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"8753:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8742:3:27"},"nodeType":"YulFunctionCall","src":"8742:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8731:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8703:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8713:7:27","type":""}],"src":"8676:126:27"},{"body":{"nodeType":"YulBlock","src":"8861:51:27","statements":[{"nodeType":"YulAssignment","src":"8871:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8900:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8882:17:27"},"nodeType":"YulFunctionCall","src":"8882:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8871:7:27"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8843:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8853:7:27","type":""}],"src":"8808:104:27"},{"body":{"nodeType":"YulBlock","src":"8989:61:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9006:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9037:5:27"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"9011:25:27"},"nodeType":"YulFunctionCall","src":"9011:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8999:6:27"},"nodeType":"YulFunctionCall","src":"8999:45:27"},"nodeType":"YulExpressionStatement","src":"8999:45:27"}]},"name":"abi_encode_t_address_payable_to_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8977:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8984:3:27","type":""}],"src":"8918:132:27"},{"body":{"nodeType":"YulBlock","src":"9114:40:27","statements":[{"nodeType":"YulAssignment","src":"9125:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9141:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9135:5:27"},"nodeType":"YulFunctionCall","src":"9135:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9125:6:27"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9097:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9107:6:27","type":""}],"src":"9056:98:27"},{"body":{"nodeType":"YulBlock","src":"9245:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9262:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"9267:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9255:6:27"},"nodeType":"YulFunctionCall","src":"9255:19:27"},"nodeType":"YulExpressionStatement","src":"9255:19:27"},{"nodeType":"YulAssignment","src":"9283:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9302:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9307:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9298:3:27"},"nodeType":"YulFunctionCall","src":"9298:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9283:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9217:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"9222:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9233:11:27","type":""}],"src":"9160:158:27"},{"body":{"nodeType":"YulBlock","src":"9386:184:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9396:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9405:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9400:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"9465:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9490:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"9495:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9486:3:27"},"nodeType":"YulFunctionCall","src":"9486:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9509:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"9514:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9505:3:27"},"nodeType":"YulFunctionCall","src":"9505:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9499:5:27"},"nodeType":"YulFunctionCall","src":"9499:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9479:6:27"},"nodeType":"YulFunctionCall","src":"9479:39:27"},"nodeType":"YulExpressionStatement","src":"9479:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9426:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"9429:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9423:2:27"},"nodeType":"YulFunctionCall","src":"9423:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9437:19:27","statements":[{"nodeType":"YulAssignment","src":"9439:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9448:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"9451:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9444:3:27"},"nodeType":"YulFunctionCall","src":"9444:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9439:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"9419:3:27","statements":[]},"src":"9415:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9548:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"9553:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9544:3:27"},"nodeType":"YulFunctionCall","src":"9544:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"9562:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9537:6:27"},"nodeType":"YulFunctionCall","src":"9537:27:27"},"nodeType":"YulExpressionStatement","src":"9537:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9368:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9373:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"9378:6:27","type":""}],"src":"9324:246:27"},{"body":{"nodeType":"YulBlock","src":"9656:273:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9666:52:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9712:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9680:31:27"},"nodeType":"YulFunctionCall","src":"9680:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9670:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9727:67:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9782:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"9787:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9734:47:27"},"nodeType":"YulFunctionCall","src":"9734:60:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9727:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9842:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"9849:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9838:3:27"},"nodeType":"YulFunctionCall","src":"9838:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"9856:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"9861:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9803:34:27"},"nodeType":"YulFunctionCall","src":"9803:65:27"},"nodeType":"YulExpressionStatement","src":"9803:65:27"},{"nodeType":"YulAssignment","src":"9877:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9888:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9915:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9893:21:27"},"nodeType":"YulFunctionCall","src":"9893:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9884:3:27"},"nodeType":"YulFunctionCall","src":"9884:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9877:3:27"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9637:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9644:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9652:3:27","type":""}],"src":"9576:353:27"},{"body":{"nodeType":"YulBlock","src":"10121:683:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10131:26:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10147:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10152:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10143:3:27"},"nodeType":"YulFunctionCall","src":"10143:14:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"10135:4:27","type":""}]},{"nodeType":"YulBlock","src":"10167:173:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10211:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10241:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"10248:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10237:3:27"},"nodeType":"YulFunctionCall","src":"10237:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10231:5:27"},"nodeType":"YulFunctionCall","src":"10231:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10215:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10301:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10319:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10324:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10315:3:27"},"nodeType":"YulFunctionCall","src":"10315:14:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10267:33:27"},"nodeType":"YulFunctionCall","src":"10267:63:27"},"nodeType":"YulExpressionStatement","src":"10267:63:27"}]},{"nodeType":"YulBlock","src":"10350:175:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10396:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10426:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"10433:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10422:3:27"},"nodeType":"YulFunctionCall","src":"10422:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10416:5:27"},"nodeType":"YulFunctionCall","src":"10416:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10400:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10486:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10504:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10509:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10500:3:27"},"nodeType":"YulFunctionCall","src":"10500:14:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10452:33:27"},"nodeType":"YulFunctionCall","src":"10452:63:27"},"nodeType":"YulExpressionStatement","src":"10452:63:27"}]},{"nodeType":"YulBlock","src":"10535:242:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10579:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10609:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"10616:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10605:3:27"},"nodeType":"YulFunctionCall","src":"10605:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10599:5:27"},"nodeType":"YulFunctionCall","src":"10599:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"10583:12:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10647:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10652:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10643:3:27"},"nodeType":"YulFunctionCall","src":"10643:14:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10663:4:27"},{"name":"pos","nodeType":"YulIdentifier","src":"10669:3:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10659:3:27"},"nodeType":"YulFunctionCall","src":"10659:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10636:6:27"},"nodeType":"YulFunctionCall","src":"10636:38:27"},"nodeType":"YulExpressionStatement","src":"10636:38:27"},{"nodeType":"YulAssignment","src":"10687:79:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10747:12:27"},{"name":"tail","nodeType":"YulIdentifier","src":"10761:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10695:51:27"},"nodeType":"YulFunctionCall","src":"10695:71:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10687:4:27"}]}]},{"nodeType":"YulAssignment","src":"10787:11:27","value":{"name":"tail","nodeType":"YulIdentifier","src":"10794:4:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10787:3:27"}]}]},"name":"abi_encode_t_struct$_lzTxObj_$1994_memory_ptr_to_t_struct$_lzTxObj_$1994_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10100:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10107:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10116:3:27","type":""}],"src":"10007:797:27"},{"body":{"nodeType":"YulBlock","src":"11078:1930:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11088:28:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11104:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11109:6:27","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11100:3:27"},"nodeType":"YulFunctionCall","src":"11100:16:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"11092:4:27","type":""}]},{"nodeType":"YulBlock","src":"11126:168:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11167:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11197:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"11204:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11193:3:27"},"nodeType":"YulFunctionCall","src":"11193:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11187:5:27"},"nodeType":"YulFunctionCall","src":"11187:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11171:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11255:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11273:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11278:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11269:3:27"},"nodeType":"YulFunctionCall","src":"11269:14:27"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulIdentifier","src":"11223:31:27"},"nodeType":"YulFunctionCall","src":"11223:61:27"},"nodeType":"YulExpressionStatement","src":"11223:61:27"}]},{"nodeType":"YulBlock","src":"11304:169:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11344:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11374:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"11381:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11370:3:27"},"nodeType":"YulFunctionCall","src":"11370:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11364:5:27"},"nodeType":"YulFunctionCall","src":"11364:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11348:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11434:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11452:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11457:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:27"},"nodeType":"YulFunctionCall","src":"11448:14:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11400:33:27"},"nodeType":"YulFunctionCall","src":"11400:63:27"},"nodeType":"YulExpressionStatement","src":"11400:63:27"}]},{"nodeType":"YulBlock","src":"11483:169:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11523:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11553:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"11560:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11549:3:27"},"nodeType":"YulFunctionCall","src":"11549:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11543:5:27"},"nodeType":"YulFunctionCall","src":"11543:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11527:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11613:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11631:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11636:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11627:3:27"},"nodeType":"YulFunctionCall","src":"11627:14:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11579:33:27"},"nodeType":"YulFunctionCall","src":"11579:63:27"},"nodeType":"YulExpressionStatement","src":"11579:63:27"}]},{"nodeType":"YulBlock","src":"11662:189:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11706:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11736:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"11743:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11732:3:27"},"nodeType":"YulFunctionCall","src":"11732:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11726:5:27"},"nodeType":"YulFunctionCall","src":"11726:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11710:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11812:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11830:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11835:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11826:3:27"},"nodeType":"YulFunctionCall","src":"11826:14:27"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable","nodeType":"YulIdentifier","src":"11762:49:27"},"nodeType":"YulFunctionCall","src":"11762:79:27"},"nodeType":"YulExpressionStatement","src":"11762:79:27"}]},{"nodeType":"YulBlock","src":"11861:166:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11898:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11928:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"11935:4:27","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11924:3:27"},"nodeType":"YulFunctionCall","src":"11924:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11918:5:27"},"nodeType":"YulFunctionCall","src":"11918:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11902:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11988:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12006:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12011:4:27","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12002:3:27"},"nodeType":"YulFunctionCall","src":"12002:14:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11954:33:27"},"nodeType":"YulFunctionCall","src":"11954:63:27"},"nodeType":"YulExpressionStatement","src":"11954:63:27"}]},{"nodeType":"YulBlock","src":"12037:172:27","statements":[{"nodeType":"YulVariableDeclaration","src":"12080:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12110:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"12117:4:27","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12106:3:27"},"nodeType":"YulFunctionCall","src":"12106:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12100:5:27"},"nodeType":"YulFunctionCall","src":"12100:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12084:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12170:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12188:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12193:4:27","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12184:3:27"},"nodeType":"YulFunctionCall","src":"12184:14:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12136:33:27"},"nodeType":"YulFunctionCall","src":"12136:63:27"},"nodeType":"YulExpressionStatement","src":"12136:63:27"}]},{"nodeType":"YulBlock","src":"12219:231:27","statements":[{"nodeType":"YulVariableDeclaration","src":"12252:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12282:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"12289:4:27","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12278:3:27"},"nodeType":"YulFunctionCall","src":"12278:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12272:5:27"},"nodeType":"YulFunctionCall","src":"12272:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12256:12:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12320:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12325:4:27","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12316:3:27"},"nodeType":"YulFunctionCall","src":"12316:14:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12336:4:27"},{"name":"pos","nodeType":"YulIdentifier","src":"12342:3:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12332:3:27"},"nodeType":"YulFunctionCall","src":"12332:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12309:6:27"},"nodeType":"YulFunctionCall","src":"12309:38:27"},"nodeType":"YulExpressionStatement","src":"12309:38:27"},{"nodeType":"YulAssignment","src":"12360:79:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12420:12:27"},{"name":"tail","nodeType":"YulIdentifier","src":"12434:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12368:51:27"},"nodeType":"YulFunctionCall","src":"12368:71:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12360:4:27"}]}]},{"nodeType":"YulBlock","src":"12460:271:27","statements":[{"nodeType":"YulVariableDeclaration","src":"12501:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12531:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"12538:4:27","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12527:3:27"},"nodeType":"YulFunctionCall","src":"12527:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12521:5:27"},"nodeType":"YulFunctionCall","src":"12521:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12505:12:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12569:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12574:4:27","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12565:3:27"},"nodeType":"YulFunctionCall","src":"12565:14:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12585:4:27"},{"name":"pos","nodeType":"YulIdentifier","src":"12591:3:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12581:3:27"},"nodeType":"YulFunctionCall","src":"12581:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12558:6:27"},"nodeType":"YulFunctionCall","src":"12558:38:27"},"nodeType":"YulExpressionStatement","src":"12558:38:27"},{"nodeType":"YulAssignment","src":"12609:111:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12701:12:27"},{"name":"tail","nodeType":"YulIdentifier","src":"12715:4:27"}],"functionName":{"name":"abi_encode_t_struct$_lzTxObj_$1994_memory_ptr_to_t_struct$_lzTxObj_$1994_memory_ptr","nodeType":"YulIdentifier","src":"12617:83:27"},"nodeType":"YulFunctionCall","src":"12617:103:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12609:4:27"}]}]},{"nodeType":"YulBlock","src":"12741:240:27","statements":[{"nodeType":"YulVariableDeclaration","src":"12779:45:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12809:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"12816:6:27","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12805:3:27"},"nodeType":"YulFunctionCall","src":"12805:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12799:5:27"},"nodeType":"YulFunctionCall","src":"12799:25:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12783:12:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12849:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12854:6:27","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12845:3:27"},"nodeType":"YulFunctionCall","src":"12845:16:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12867:4:27"},{"name":"pos","nodeType":"YulIdentifier","src":"12873:3:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12863:3:27"},"nodeType":"YulFunctionCall","src":"12863:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12838:6:27"},"nodeType":"YulFunctionCall","src":"12838:40:27"},"nodeType":"YulExpressionStatement","src":"12838:40:27"},{"nodeType":"YulAssignment","src":"12891:79:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12951:12:27"},{"name":"tail","nodeType":"YulIdentifier","src":"12965:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12899:51:27"},"nodeType":"YulFunctionCall","src":"12899:71:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12891:4:27"}]}]},{"nodeType":"YulAssignment","src":"12991:11:27","value":{"name":"tail","nodeType":"YulIdentifier","src":"12998:4:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12991:3:27"}]}]},"name":"abi_encode_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11057:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11064:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11073:3:27","type":""}],"src":"10926:2082:27"},{"body":{"nodeType":"YulBlock","src":"13182:164:27","statements":[{"nodeType":"YulAssignment","src":"13192:148:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13328:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"13336:3:27"}],"functionName":{"name":"abi_encode_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr","nodeType":"YulIdentifier","src":"13206:121:27"},"nodeType":"YulFunctionCall","src":"13206:134:27"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"13192:10:27"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"13155:6:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13163:3:27","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"13171:10:27","type":""}],"src":"13014:332:27"},{"body":{"nodeType":"YulBlock","src":"13471:38:27","statements":[{"nodeType":"YulAssignment","src":"13481:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13493:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13498:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13489:3:27"},"nodeType":"YulFunctionCall","src":"13489:14:27"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"13481:4:27"}]}]},"name":"array_nextElement_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13458:3:27","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"13466:4:27","type":""}],"src":"13352:157:27"},{"body":{"nodeType":"YulBlock","src":"13847:1051:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13857:112:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13963:5:27"}],"functionName":{"name":"array_length_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13871:91:27"},"nodeType":"YulFunctionCall","src":"13871:98:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13861:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13978:137:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14103:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"14108:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13985:117:27"},"nodeType":"YulFunctionCall","src":"13985:130:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13978:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"14124:20:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"14141:3:27"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"14128:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14153:39:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14169:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14178:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"14186:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14174:3:27"},"nodeType":"YulFunctionCall","src":"14174:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14165:3:27"},"nodeType":"YulFunctionCall","src":"14165:27:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"14157:4:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14201:115:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14310:5:27"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14216:93:27"},"nodeType":"YulFunctionCall","src":"14216:100:27"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"14205:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14325:21:27","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"14339:7:27"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"14329:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"14415:438:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14436:3:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14445:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"14451:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14441:3:27"},"nodeType":"YulFunctionCall","src":"14441:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14429:6:27"},"nodeType":"YulFunctionCall","src":"14429:33:27"},"nodeType":"YulExpressionStatement","src":"14429:33:27"},{"nodeType":"YulVariableDeclaration","src":"14475:34:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14502:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14496:5:27"},"nodeType":"YulFunctionCall","src":"14496:13:27"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"14479:13:27","type":""}]},{"nodeType":"YulAssignment","src":"14522:160:27","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"14662:13:27"},{"name":"tail","nodeType":"YulIdentifier","src":"14677:4:27"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr","nodeType":"YulIdentifier","src":"14530:131:27"},"nodeType":"YulFunctionCall","src":"14530:152:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14522:4:27"}]},{"nodeType":"YulAssignment","src":"14695:114:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14802:6:27"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14705:96:27"},"nodeType":"YulFunctionCall","src":"14705:104:27"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14695:6:27"}]},{"nodeType":"YulAssignment","src":"14822:21:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14833:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14838:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14829:3:27"},"nodeType":"YulFunctionCall","src":"14829:14:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14822:3:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14377:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"14380:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14374:2:27"},"nodeType":"YulFunctionCall","src":"14374:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14388:18:27","statements":[{"nodeType":"YulAssignment","src":"14390:14:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14399:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"14402:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14395:3:27"},"nodeType":"YulFunctionCall","src":"14395:9:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14390:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"14359:14:27","statements":[{"nodeType":"YulVariableDeclaration","src":"14361:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"14370:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14365:1:27","type":""}]}]},"src":"14355:498:27"},{"nodeType":"YulAssignment","src":"14862:11:27","value":{"name":"tail","nodeType":"YulIdentifier","src":"14869:4:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14862:3:27"}]},{"nodeType":"YulAssignment","src":"14882:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"14889:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14882:3:27"}]}]},"name":"abi_encode_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13826:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13833:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13842:3:27","type":""}],"src":"13635:1263:27"},{"body":{"nodeType":"YulBlock","src":"15140:313:27","statements":[{"nodeType":"YulAssignment","src":"15150:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15162:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15173:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15158:3:27"},"nodeType":"YulFunctionCall","src":"15158:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15150:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15197:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15208:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15193:3:27"},"nodeType":"YulFunctionCall","src":"15193:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15216:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"15222:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15212:3:27"},"nodeType":"YulFunctionCall","src":"15212:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15186:6:27"},"nodeType":"YulFunctionCall","src":"15186:47:27"},"nodeType":"YulExpressionStatement","src":"15186:47:27"},{"nodeType":"YulAssignment","src":"15242:204:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15432:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"15441:4:27"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15250:181:27"},"nodeType":"YulFunctionCall","src":"15250:196:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15242:4:27"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15112:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15124:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15135:4:27","type":""}],"src":"14904:549:27"},{"body":{"nodeType":"YulBlock","src":"15510:87:27","statements":[{"body":{"nodeType":"YulBlock","src":"15575:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15584:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15587:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15577:6:27"},"nodeType":"YulFunctionCall","src":"15577:12:27"},"nodeType":"YulExpressionStatement","src":"15577:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15533:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15566:5:27"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"15540:25:27"},"nodeType":"YulFunctionCall","src":"15540:32:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15530:2:27"},"nodeType":"YulFunctionCall","src":"15530:43:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15523:6:27"},"nodeType":"YulFunctionCall","src":"15523:51:27"},"nodeType":"YulIf","src":"15520:71:27"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15503:5:27","type":""}],"src":"15459:138:27"},{"body":{"nodeType":"YulBlock","src":"15663:95:27","statements":[{"nodeType":"YulAssignment","src":"15673:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15695:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15682:12:27"},"nodeType":"YulFunctionCall","src":"15682:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15673:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15746:5:27"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"15711:34:27"},"nodeType":"YulFunctionCall","src":"15711:41:27"},"nodeType":"YulExpressionStatement","src":"15711:41:27"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15641:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"15649:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15657:5:27","type":""}],"src":"15603:155:27"},{"body":{"nodeType":"YulBlock","src":"16000:1535:27","statements":[{"body":{"nodeType":"YulBlock","src":"16047:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16049:77:27"},"nodeType":"YulFunctionCall","src":"16049:79:27"},"nodeType":"YulExpressionStatement","src":"16049:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16021:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"16030:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16017:3:27"},"nodeType":"YulFunctionCall","src":"16017:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"16042:3:27","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16013:3:27"},"nodeType":"YulFunctionCall","src":"16013:33:27"},"nodeType":"YulIf","src":"16010:120:27"},{"nodeType":"YulBlock","src":"16140:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"16155:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"16169:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16159:6:27","type":""}]},{"nodeType":"YulAssignment","src":"16184:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16218:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"16229:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16214:3:27"},"nodeType":"YulFunctionCall","src":"16214:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16238:7:27"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"16194:19:27"},"nodeType":"YulFunctionCall","src":"16194:52:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16184:6:27"}]}]},{"nodeType":"YulBlock","src":"16266:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"16281:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"16295:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16285:6:27","type":""}]},{"nodeType":"YulAssignment","src":"16311:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16346:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"16357:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16342:3:27"},"nodeType":"YulFunctionCall","src":"16342:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16366:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16321:20:27"},"nodeType":"YulFunctionCall","src":"16321:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16311:6:27"}]}]},{"nodeType":"YulBlock","src":"16394:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"16409:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"16423:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16413:6:27","type":""}]},{"nodeType":"YulAssignment","src":"16439:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16474:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"16485:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16470:3:27"},"nodeType":"YulFunctionCall","src":"16470:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16494:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16449:20:27"},"nodeType":"YulFunctionCall","src":"16449:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"16439:6:27"}]}]},{"nodeType":"YulBlock","src":"16522:126:27","statements":[{"nodeType":"YulVariableDeclaration","src":"16537:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"16551:2:27","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16541:6:27","type":""}]},{"nodeType":"YulAssignment","src":"16567:71:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16610:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"16621:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16606:3:27"},"nodeType":"YulFunctionCall","src":"16606:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16630:7:27"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"16577:28:27"},"nodeType":"YulFunctionCall","src":"16577:61:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"16567:6:27"}]}]},{"nodeType":"YulBlock","src":"16658:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"16673:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"16687:3:27","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16677:6:27","type":""}]},{"nodeType":"YulAssignment","src":"16704:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16739:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"16750:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16735:3:27"},"nodeType":"YulFunctionCall","src":"16735:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16759:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16714:20:27"},"nodeType":"YulFunctionCall","src":"16714:53:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"16704:6:27"}]}]},{"nodeType":"YulBlock","src":"16787:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"16802:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"16816:3:27","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16806:6:27","type":""}]},{"nodeType":"YulAssignment","src":"16833:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16868:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"16879:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16864:3:27"},"nodeType":"YulFunctionCall","src":"16864:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16888:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16843:20:27"},"nodeType":"YulFunctionCall","src":"16843:53:27"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"16833:6:27"}]}]},{"nodeType":"YulBlock","src":"16916:298:27","statements":[{"nodeType":"YulVariableDeclaration","src":"16931:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16962:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16973:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16958:3:27"},"nodeType":"YulFunctionCall","src":"16958:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16945:12:27"},"nodeType":"YulFunctionCall","src":"16945:33:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16935:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"17025:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17027:77:27"},"nodeType":"YulFunctionCall","src":"17027:79:27"},"nodeType":"YulExpressionStatement","src":"17027:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16997:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"17005:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16994:2:27"},"nodeType":"YulFunctionCall","src":"16994:30:27"},"nodeType":"YulIf","src":"16991:117:27"},{"nodeType":"YulAssignment","src":"17122:82:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17176:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"17187:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17172:3:27"},"nodeType":"YulFunctionCall","src":"17172:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17196:7:27"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"17140:31:27"},"nodeType":"YulFunctionCall","src":"17140:64:27"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"17122:6:27"},{"name":"value7","nodeType":"YulIdentifier","src":"17130:6:27"}]}]},{"nodeType":"YulBlock","src":"17224:304:27","statements":[{"nodeType":"YulVariableDeclaration","src":"17239:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17270:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17281:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17266:3:27"},"nodeType":"YulFunctionCall","src":"17266:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17253:12:27"},"nodeType":"YulFunctionCall","src":"17253:33:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17243:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"17333:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17335:77:27"},"nodeType":"YulFunctionCall","src":"17335:79:27"},"nodeType":"YulExpressionStatement","src":"17335:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17305:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"17313:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17302:2:27"},"nodeType":"YulFunctionCall","src":"17302:30:27"},"nodeType":"YulIf","src":"17299:117:27"},{"nodeType":"YulAssignment","src":"17430:88:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17490:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"17501:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17486:3:27"},"nodeType":"YulFunctionCall","src":"17486:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17510:7:27"}],"functionName":{"name":"abi_decode_t_struct$_lzTxObj_$1994_memory_ptr","nodeType":"YulIdentifier","src":"17440:45:27"},"nodeType":"YulFunctionCall","src":"17440:78:27"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"17430:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint16t_uint256t_uint256t_address_payablet_uint256t_uint256t_bytes_calldata_ptrt_struct$_lzTxObj_$1994_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15906:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15917:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15929:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15937:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15945:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15953:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15961:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"15969:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"15977:6:27","type":""},{"name":"value7","nodeType":"YulTypedName","src":"15985:6:27","type":""},{"name":"value8","nodeType":"YulTypedName","src":"15993:6:27","type":""}],"src":"15764:1771:27"},{"body":{"nodeType":"YulBlock","src":"17586:51:27","statements":[{"nodeType":"YulAssignment","src":"17596:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17625:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"17607:17:27"},"nodeType":"YulFunctionCall","src":"17607:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17596:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17568:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17578:7:27","type":""}],"src":"17541:96:27"},{"body":{"nodeType":"YulBlock","src":"17686:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"17743:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17752:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17755:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17745:6:27"},"nodeType":"YulFunctionCall","src":"17745:12:27"},"nodeType":"YulExpressionStatement","src":"17745:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17709:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17734:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"17716:17:27"},"nodeType":"YulFunctionCall","src":"17716:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17706:2:27"},"nodeType":"YulFunctionCall","src":"17706:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17699:6:27"},"nodeType":"YulFunctionCall","src":"17699:43:27"},"nodeType":"YulIf","src":"17696:63:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17679:5:27","type":""}],"src":"17643:122:27"},{"body":{"nodeType":"YulBlock","src":"17823:87:27","statements":[{"nodeType":"YulAssignment","src":"17833:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17855:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17842:12:27"},"nodeType":"YulFunctionCall","src":"17842:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17833:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17898:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"17871:26:27"},"nodeType":"YulFunctionCall","src":"17871:33:27"},"nodeType":"YulExpressionStatement","src":"17871:33:27"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17801:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"17809:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"17817:5:27","type":""}],"src":"17771:139:27"},{"body":{"nodeType":"YulBlock","src":"18016:519:27","statements":[{"body":{"nodeType":"YulBlock","src":"18062:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18064:77:27"},"nodeType":"YulFunctionCall","src":"18064:79:27"},"nodeType":"YulExpressionStatement","src":"18064:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18037:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"18046:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18033:3:27"},"nodeType":"YulFunctionCall","src":"18033:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"18058:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18029:3:27"},"nodeType":"YulFunctionCall","src":"18029:32:27"},"nodeType":"YulIf","src":"18026:119:27"},{"nodeType":"YulBlock","src":"18155:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"18170:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"18184:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18174:6:27","type":""}]},{"nodeType":"YulAssignment","src":"18199:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18234:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"18245:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18230:3:27"},"nodeType":"YulFunctionCall","src":"18230:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18254:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18209:20:27"},"nodeType":"YulFunctionCall","src":"18209:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18199:6:27"}]}]},{"nodeType":"YulBlock","src":"18282:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"18297:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"18311:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18301:6:27","type":""}]},{"nodeType":"YulAssignment","src":"18327:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18362:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"18373:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18358:3:27"},"nodeType":"YulFunctionCall","src":"18358:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18382:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18337:20:27"},"nodeType":"YulFunctionCall","src":"18337:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18327:6:27"}]}]},{"nodeType":"YulBlock","src":"18410:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"18425:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"18439:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18429:6:27","type":""}]},{"nodeType":"YulAssignment","src":"18455:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18490:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"18501:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18486:3:27"},"nodeType":"YulFunctionCall","src":"18486:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18510:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18465:20:27"},"nodeType":"YulFunctionCall","src":"18465:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18455:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17970:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17981:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17993:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18001:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18009:6:27","type":""}],"src":"17916:619:27"},{"body":{"nodeType":"YulBlock","src":"18607:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"18653:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18655:77:27"},"nodeType":"YulFunctionCall","src":"18655:79:27"},"nodeType":"YulExpressionStatement","src":"18655:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18628:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"18637:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18624:3:27"},"nodeType":"YulFunctionCall","src":"18624:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"18649:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18620:3:27"},"nodeType":"YulFunctionCall","src":"18620:32:27"},"nodeType":"YulIf","src":"18617:119:27"},{"nodeType":"YulBlock","src":"18746:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"18761:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"18775:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18765:6:27","type":""}]},{"nodeType":"YulAssignment","src":"18790:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18825:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"18836:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18821:3:27"},"nodeType":"YulFunctionCall","src":"18821:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18845:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18800:20:27"},"nodeType":"YulFunctionCall","src":"18800:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18790:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18577:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18588:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18600:6:27","type":""}],"src":"18541:329:27"},{"body":{"nodeType":"YulBlock","src":"19154:1930:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19164:28:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19180:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19185:6:27","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19176:3:27"},"nodeType":"YulFunctionCall","src":"19176:16:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"19168:4:27","type":""}]},{"nodeType":"YulBlock","src":"19202:168:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19243:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19273:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"19280:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19269:3:27"},"nodeType":"YulFunctionCall","src":"19269:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19263:5:27"},"nodeType":"YulFunctionCall","src":"19263:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"19247:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"19331:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19349:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19354:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19345:3:27"},"nodeType":"YulFunctionCall","src":"19345:14:27"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulIdentifier","src":"19299:31:27"},"nodeType":"YulFunctionCall","src":"19299:61:27"},"nodeType":"YulExpressionStatement","src":"19299:61:27"}]},{"nodeType":"YulBlock","src":"19380:169:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19420:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19450:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"19457:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19446:3:27"},"nodeType":"YulFunctionCall","src":"19446:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19440:5:27"},"nodeType":"YulFunctionCall","src":"19440:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"19424:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"19510:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19528:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19533:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19524:3:27"},"nodeType":"YulFunctionCall","src":"19524:14:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"19476:33:27"},"nodeType":"YulFunctionCall","src":"19476:63:27"},"nodeType":"YulExpressionStatement","src":"19476:63:27"}]},{"nodeType":"YulBlock","src":"19559:169:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19599:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19629:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"19636:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19625:3:27"},"nodeType":"YulFunctionCall","src":"19625:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19619:5:27"},"nodeType":"YulFunctionCall","src":"19619:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"19603:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"19689:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19707:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19712:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19703:3:27"},"nodeType":"YulFunctionCall","src":"19703:14:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"19655:33:27"},"nodeType":"YulFunctionCall","src":"19655:63:27"},"nodeType":"YulExpressionStatement","src":"19655:63:27"}]},{"nodeType":"YulBlock","src":"19738:189:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19782:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19812:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"19819:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19808:3:27"},"nodeType":"YulFunctionCall","src":"19808:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19802:5:27"},"nodeType":"YulFunctionCall","src":"19802:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"19786:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"19888:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19906:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19911:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19902:3:27"},"nodeType":"YulFunctionCall","src":"19902:14:27"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable","nodeType":"YulIdentifier","src":"19838:49:27"},"nodeType":"YulFunctionCall","src":"19838:79:27"},"nodeType":"YulExpressionStatement","src":"19838:79:27"}]},{"nodeType":"YulBlock","src":"19937:166:27","statements":[{"nodeType":"YulVariableDeclaration","src":"19974:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20004:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"20011:4:27","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20000:3:27"},"nodeType":"YulFunctionCall","src":"20000:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19994:5:27"},"nodeType":"YulFunctionCall","src":"19994:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"19978:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20064:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20082:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20087:4:27","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20078:3:27"},"nodeType":"YulFunctionCall","src":"20078:14:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"20030:33:27"},"nodeType":"YulFunctionCall","src":"20030:63:27"},"nodeType":"YulExpressionStatement","src":"20030:63:27"}]},{"nodeType":"YulBlock","src":"20113:172:27","statements":[{"nodeType":"YulVariableDeclaration","src":"20156:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20186:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"20193:4:27","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20182:3:27"},"nodeType":"YulFunctionCall","src":"20182:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20176:5:27"},"nodeType":"YulFunctionCall","src":"20176:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20160:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20246:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20264:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20269:4:27","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20260:3:27"},"nodeType":"YulFunctionCall","src":"20260:14:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"20212:33:27"},"nodeType":"YulFunctionCall","src":"20212:63:27"},"nodeType":"YulExpressionStatement","src":"20212:63:27"}]},{"nodeType":"YulBlock","src":"20295:231:27","statements":[{"nodeType":"YulVariableDeclaration","src":"20328:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20358:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"20365:4:27","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20354:3:27"},"nodeType":"YulFunctionCall","src":"20354:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20348:5:27"},"nodeType":"YulFunctionCall","src":"20348:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20332:12:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20396:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20401:4:27","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20392:3:27"},"nodeType":"YulFunctionCall","src":"20392:14:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20412:4:27"},{"name":"pos","nodeType":"YulIdentifier","src":"20418:3:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20408:3:27"},"nodeType":"YulFunctionCall","src":"20408:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20385:6:27"},"nodeType":"YulFunctionCall","src":"20385:38:27"},"nodeType":"YulExpressionStatement","src":"20385:38:27"},{"nodeType":"YulAssignment","src":"20436:79:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20496:12:27"},{"name":"tail","nodeType":"YulIdentifier","src":"20510:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"20444:51:27"},"nodeType":"YulFunctionCall","src":"20444:71:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20436:4:27"}]}]},{"nodeType":"YulBlock","src":"20536:271:27","statements":[{"nodeType":"YulVariableDeclaration","src":"20577:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20607:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"20614:4:27","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20603:3:27"},"nodeType":"YulFunctionCall","src":"20603:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20597:5:27"},"nodeType":"YulFunctionCall","src":"20597:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20581:12:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20645:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20650:4:27","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20641:3:27"},"nodeType":"YulFunctionCall","src":"20641:14:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20661:4:27"},{"name":"pos","nodeType":"YulIdentifier","src":"20667:3:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20657:3:27"},"nodeType":"YulFunctionCall","src":"20657:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20634:6:27"},"nodeType":"YulFunctionCall","src":"20634:38:27"},"nodeType":"YulExpressionStatement","src":"20634:38:27"},{"nodeType":"YulAssignment","src":"20685:111:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20777:12:27"},{"name":"tail","nodeType":"YulIdentifier","src":"20791:4:27"}],"functionName":{"name":"abi_encode_t_struct$_lzTxObj_$1994_memory_ptr_to_t_struct$_lzTxObj_$1994_memory_ptr","nodeType":"YulIdentifier","src":"20693:83:27"},"nodeType":"YulFunctionCall","src":"20693:103:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20685:4:27"}]}]},{"nodeType":"YulBlock","src":"20817:240:27","statements":[{"nodeType":"YulVariableDeclaration","src":"20855:45:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20885:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"20892:6:27","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20881:3:27"},"nodeType":"YulFunctionCall","src":"20881:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20875:5:27"},"nodeType":"YulFunctionCall","src":"20875:25:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20859:12:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20925:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20930:6:27","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20921:3:27"},"nodeType":"YulFunctionCall","src":"20921:16:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20943:4:27"},{"name":"pos","nodeType":"YulIdentifier","src":"20949:3:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20939:3:27"},"nodeType":"YulFunctionCall","src":"20939:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20914:6:27"},"nodeType":"YulFunctionCall","src":"20914:40:27"},"nodeType":"YulExpressionStatement","src":"20914:40:27"},{"nodeType":"YulAssignment","src":"20967:79:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21027:12:27"},{"name":"tail","nodeType":"YulIdentifier","src":"21041:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"20975:51:27"},"nodeType":"YulFunctionCall","src":"20975:71:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20967:4:27"}]}]},{"nodeType":"YulAssignment","src":"21067:11:27","value":{"name":"tail","nodeType":"YulIdentifier","src":"21074:4:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21067:3:27"}]}]},"name":"abi_encode_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19133:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19140:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19149:3:27","type":""}],"src":"18992:2092:27"},{"body":{"nodeType":"YulBlock","src":"21276:263:27","statements":[{"nodeType":"YulAssignment","src":"21286:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21298:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21309:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21294:3:27"},"nodeType":"YulFunctionCall","src":"21294:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21286:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21333:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21344:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21329:3:27"},"nodeType":"YulFunctionCall","src":"21329:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21352:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"21358:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21348:3:27"},"nodeType":"YulFunctionCall","src":"21348:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21322:6:27"},"nodeType":"YulFunctionCall","src":"21322:47:27"},"nodeType":"YulExpressionStatement","src":"21322:47:27"},{"nodeType":"YulAssignment","src":"21378:154:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21518:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"21527:4:27"}],"functionName":{"name":"abi_encode_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21386:131:27"},"nodeType":"YulFunctionCall","src":"21386:146:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21378:4:27"}]}]},"name":"abi_encode_tuple_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr__to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21248:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21260:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21271:4:27","type":""}],"src":"21090:449:27"},{"body":{"nodeType":"YulBlock","src":"21764:1406:27","statements":[{"body":{"nodeType":"YulBlock","src":"21811:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21813:77:27"},"nodeType":"YulFunctionCall","src":"21813:79:27"},"nodeType":"YulExpressionStatement","src":"21813:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21785:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"21794:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21781:3:27"},"nodeType":"YulFunctionCall","src":"21781:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"21806:3:27","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21777:3:27"},"nodeType":"YulFunctionCall","src":"21777:33:27"},"nodeType":"YulIf","src":"21774:120:27"},{"nodeType":"YulBlock","src":"21904:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"21919:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"21933:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21923:6:27","type":""}]},{"nodeType":"YulAssignment","src":"21948:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21982:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"21993:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21978:3:27"},"nodeType":"YulFunctionCall","src":"21978:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22002:7:27"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"21958:19:27"},"nodeType":"YulFunctionCall","src":"21958:52:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21948:6:27"}]}]},{"nodeType":"YulBlock","src":"22030:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"22045:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"22059:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22049:6:27","type":""}]},{"nodeType":"YulAssignment","src":"22075:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22110:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"22121:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22106:3:27"},"nodeType":"YulFunctionCall","src":"22106:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22130:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22085:20:27"},"nodeType":"YulFunctionCall","src":"22085:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"22075:6:27"}]}]},{"nodeType":"YulBlock","src":"22158:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"22173:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"22187:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22177:6:27","type":""}]},{"nodeType":"YulAssignment","src":"22203:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22238:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"22249:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22234:3:27"},"nodeType":"YulFunctionCall","src":"22234:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22258:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22213:20:27"},"nodeType":"YulFunctionCall","src":"22213:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"22203:6:27"}]}]},{"nodeType":"YulBlock","src":"22286:126:27","statements":[{"nodeType":"YulVariableDeclaration","src":"22301:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"22315:2:27","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22305:6:27","type":""}]},{"nodeType":"YulAssignment","src":"22331:71:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22374:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"22385:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22370:3:27"},"nodeType":"YulFunctionCall","src":"22370:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22394:7:27"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"22341:28:27"},"nodeType":"YulFunctionCall","src":"22341:61:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"22331:6:27"}]}]},{"nodeType":"YulBlock","src":"22422:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"22437:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"22451:3:27","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22441:6:27","type":""}]},{"nodeType":"YulAssignment","src":"22468:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22503:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"22514:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22499:3:27"},"nodeType":"YulFunctionCall","src":"22499:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22523:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22478:20:27"},"nodeType":"YulFunctionCall","src":"22478:53:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"22468:6:27"}]}]},{"nodeType":"YulBlock","src":"22551:298:27","statements":[{"nodeType":"YulVariableDeclaration","src":"22566:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22597:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22608:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22593:3:27"},"nodeType":"YulFunctionCall","src":"22593:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22580:12:27"},"nodeType":"YulFunctionCall","src":"22580:33:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22570:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"22660:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"22662:77:27"},"nodeType":"YulFunctionCall","src":"22662:79:27"},"nodeType":"YulExpressionStatement","src":"22662:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22632:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22640:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22629:2:27"},"nodeType":"YulFunctionCall","src":"22629:30:27"},"nodeType":"YulIf","src":"22626:117:27"},{"nodeType":"YulAssignment","src":"22757:82:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22811:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"22822:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22807:3:27"},"nodeType":"YulFunctionCall","src":"22807:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22831:7:27"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"22775:31:27"},"nodeType":"YulFunctionCall","src":"22775:64:27"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"22757:6:27"},{"name":"value6","nodeType":"YulIdentifier","src":"22765:6:27"}]}]},{"nodeType":"YulBlock","src":"22859:304:27","statements":[{"nodeType":"YulVariableDeclaration","src":"22874:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22905:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22916:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22901:3:27"},"nodeType":"YulFunctionCall","src":"22901:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22888:12:27"},"nodeType":"YulFunctionCall","src":"22888:33:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22878:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"22968:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"22970:77:27"},"nodeType":"YulFunctionCall","src":"22970:79:27"},"nodeType":"YulExpressionStatement","src":"22970:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22940:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22948:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22937:2:27"},"nodeType":"YulFunctionCall","src":"22937:30:27"},"nodeType":"YulIf","src":"22934:117:27"},{"nodeType":"YulAssignment","src":"23065:88:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23125:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"23136:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23121:3:27"},"nodeType":"YulFunctionCall","src":"23121:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23145:7:27"}],"functionName":{"name":"abi_decode_t_struct$_lzTxObj_$1994_memory_ptr","nodeType":"YulIdentifier","src":"23075:45:27"},"nodeType":"YulFunctionCall","src":"23075:78:27"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"23065:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint16t_uint256t_uint256t_address_payablet_uint256t_bytes_calldata_ptrt_struct$_lzTxObj_$1994_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21678:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21689:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21701:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21709:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21717:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21725:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"21733:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"21741:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"21749:6:27","type":""},{"name":"value7","nodeType":"YulTypedName","src":"21757:6:27","type":""}],"src":"21545:1625:27"},{"body":{"nodeType":"YulBlock","src":"23300:655:27","statements":[{"body":{"nodeType":"YulBlock","src":"23347:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23349:77:27"},"nodeType":"YulFunctionCall","src":"23349:79:27"},"nodeType":"YulExpressionStatement","src":"23349:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23321:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"23330:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23317:3:27"},"nodeType":"YulFunctionCall","src":"23317:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"23342:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23313:3:27"},"nodeType":"YulFunctionCall","src":"23313:33:27"},"nodeType":"YulIf","src":"23310:120:27"},{"nodeType":"YulBlock","src":"23440:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"23455:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"23469:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23459:6:27","type":""}]},{"nodeType":"YulAssignment","src":"23484:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23518:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"23529:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23514:3:27"},"nodeType":"YulFunctionCall","src":"23514:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23538:7:27"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"23494:19:27"},"nodeType":"YulFunctionCall","src":"23494:52:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23484:6:27"}]}]},{"nodeType":"YulBlock","src":"23566:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"23581:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"23595:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23585:6:27","type":""}]},{"nodeType":"YulAssignment","src":"23611:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23646:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"23657:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23642:3:27"},"nodeType":"YulFunctionCall","src":"23642:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23666:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"23621:20:27"},"nodeType":"YulFunctionCall","src":"23621:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"23611:6:27"}]}]},{"nodeType":"YulBlock","src":"23694:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"23709:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"23723:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23713:6:27","type":""}]},{"nodeType":"YulAssignment","src":"23739:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23774:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"23785:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23770:3:27"},"nodeType":"YulFunctionCall","src":"23770:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23794:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"23749:20:27"},"nodeType":"YulFunctionCall","src":"23749:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"23739:6:27"}]}]},{"nodeType":"YulBlock","src":"23822:126:27","statements":[{"nodeType":"YulVariableDeclaration","src":"23837:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"23851:2:27","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23841:6:27","type":""}]},{"nodeType":"YulAssignment","src":"23867:71:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23910:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"23921:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23906:3:27"},"nodeType":"YulFunctionCall","src":"23906:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23930:7:27"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"23877:28:27"},"nodeType":"YulFunctionCall","src":"23877:61:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"23867:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint16t_uint256t_uint256t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23246:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23257:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23269:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23277:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23285:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23293:6:27","type":""}],"src":"23176:779:27"},{"body":{"nodeType":"YulBlock","src":"24234:1844:27","statements":[{"body":{"nodeType":"YulBlock","src":"24281:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24283:77:27"},"nodeType":"YulFunctionCall","src":"24283:79:27"},"nodeType":"YulExpressionStatement","src":"24283:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24255:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"24264:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24251:3:27"},"nodeType":"YulFunctionCall","src":"24251:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"24276:3:27","type":"","value":"288"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24247:3:27"},"nodeType":"YulFunctionCall","src":"24247:33:27"},"nodeType":"YulIf","src":"24244:120:27"},{"nodeType":"YulBlock","src":"24374:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"24389:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"24403:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24393:6:27","type":""}]},{"nodeType":"YulAssignment","src":"24418:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24452:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"24463:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24448:3:27"},"nodeType":"YulFunctionCall","src":"24448:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24472:7:27"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"24428:19:27"},"nodeType":"YulFunctionCall","src":"24428:52:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24418:6:27"}]}]},{"nodeType":"YulBlock","src":"24500:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"24515:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"24529:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24519:6:27","type":""}]},{"nodeType":"YulAssignment","src":"24545:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24580:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"24591:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24576:3:27"},"nodeType":"YulFunctionCall","src":"24576:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24600:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"24555:20:27"},"nodeType":"YulFunctionCall","src":"24555:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"24545:6:27"}]}]},{"nodeType":"YulBlock","src":"24628:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"24643:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"24657:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24647:6:27","type":""}]},{"nodeType":"YulAssignment","src":"24673:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24708:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"24719:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24704:3:27"},"nodeType":"YulFunctionCall","src":"24704:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24728:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"24683:20:27"},"nodeType":"YulFunctionCall","src":"24683:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"24673:6:27"}]}]},{"nodeType":"YulBlock","src":"24756:126:27","statements":[{"nodeType":"YulVariableDeclaration","src":"24771:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"24785:2:27","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24775:6:27","type":""}]},{"nodeType":"YulAssignment","src":"24801:71:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24844:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"24855:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24840:3:27"},"nodeType":"YulFunctionCall","src":"24840:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24864:7:27"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"24811:28:27"},"nodeType":"YulFunctionCall","src":"24811:61:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"24801:6:27"}]}]},{"nodeType":"YulBlock","src":"24892:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"24907:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"24921:3:27","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24911:6:27","type":""}]},{"nodeType":"YulAssignment","src":"24938:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24973:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"24984:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24969:3:27"},"nodeType":"YulFunctionCall","src":"24969:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24993:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"24948:20:27"},"nodeType":"YulFunctionCall","src":"24948:53:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"24938:6:27"}]}]},{"nodeType":"YulBlock","src":"25021:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"25036:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"25050:3:27","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25040:6:27","type":""}]},{"nodeType":"YulAssignment","src":"25067:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25102:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"25113:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25098:3:27"},"nodeType":"YulFunctionCall","src":"25098:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25122:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"25077:20:27"},"nodeType":"YulFunctionCall","src":"25077:53:27"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"25067:6:27"}]}]},{"nodeType":"YulBlock","src":"25150:304:27","statements":[{"nodeType":"YulVariableDeclaration","src":"25165:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25196:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25207:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25192:3:27"},"nodeType":"YulFunctionCall","src":"25192:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25179:12:27"},"nodeType":"YulFunctionCall","src":"25179:33:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25169:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"25259:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25261:77:27"},"nodeType":"YulFunctionCall","src":"25261:79:27"},"nodeType":"YulExpressionStatement","src":"25261:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25231:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"25239:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25228:2:27"},"nodeType":"YulFunctionCall","src":"25228:30:27"},"nodeType":"YulIf","src":"25225:117:27"},{"nodeType":"YulAssignment","src":"25356:88:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25416:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"25427:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25412:3:27"},"nodeType":"YulFunctionCall","src":"25412:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25436:7:27"}],"functionName":{"name":"abi_decode_t_struct$_lzTxObj_$1994_memory_ptr","nodeType":"YulIdentifier","src":"25366:45:27"},"nodeType":"YulFunctionCall","src":"25366:78:27"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"25356:6:27"}]}]},{"nodeType":"YulBlock","src":"25464:298:27","statements":[{"nodeType":"YulVariableDeclaration","src":"25479:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25510:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25521:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25506:3:27"},"nodeType":"YulFunctionCall","src":"25506:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25493:12:27"},"nodeType":"YulFunctionCall","src":"25493:33:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25483:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"25573:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25575:77:27"},"nodeType":"YulFunctionCall","src":"25575:79:27"},"nodeType":"YulExpressionStatement","src":"25575:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25545:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"25553:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25542:2:27"},"nodeType":"YulFunctionCall","src":"25542:30:27"},"nodeType":"YulIf","src":"25539:117:27"},{"nodeType":"YulAssignment","src":"25670:82:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25724:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"25735:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25720:3:27"},"nodeType":"YulFunctionCall","src":"25720:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25744:7:27"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"25688:31:27"},"nodeType":"YulFunctionCall","src":"25688:64:27"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"25670:6:27"},{"name":"value8","nodeType":"YulIdentifier","src":"25678:6:27"}]}]},{"nodeType":"YulBlock","src":"25772:299:27","statements":[{"nodeType":"YulVariableDeclaration","src":"25787:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25818:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25829:3:27","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25814:3:27"},"nodeType":"YulFunctionCall","src":"25814:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25801:12:27"},"nodeType":"YulFunctionCall","src":"25801:33:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25791:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"25881:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25883:77:27"},"nodeType":"YulFunctionCall","src":"25883:79:27"},"nodeType":"YulExpressionStatement","src":"25883:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25853:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"25861:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25850:2:27"},"nodeType":"YulFunctionCall","src":"25850:30:27"},"nodeType":"YulIf","src":"25847:117:27"},{"nodeType":"YulAssignment","src":"25978:83:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26033:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"26044:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26029:3:27"},"nodeType":"YulFunctionCall","src":"26029:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26053:7:27"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"25997:31:27"},"nodeType":"YulFunctionCall","src":"25997:64:27"},"variableNames":[{"name":"value9","nodeType":"YulIdentifier","src":"25978:6:27"},{"name":"value10","nodeType":"YulIdentifier","src":"25986:7:27"}]}]}]},"name":"abi_decode_tuple_t_uint16t_uint256t_uint256t_address_payablet_uint256t_uint256t_struct$_lzTxObj_$1994_memory_ptrt_bytes_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24123:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24134:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24146:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24154:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24162:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24170:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24178:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"24186:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"24194:6:27","type":""},{"name":"value7","nodeType":"YulTypedName","src":"24202:6:27","type":""},{"name":"value8","nodeType":"YulTypedName","src":"24210:6:27","type":""},{"name":"value9","nodeType":"YulTypedName","src":"24218:6:27","type":""},{"name":"value10","nodeType":"YulTypedName","src":"24226:7:27","type":""}],"src":"23961:2117:27"},{"body":{"nodeType":"YulBlock","src":"26149:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26166:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26189:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"26171:17:27"},"nodeType":"YulFunctionCall","src":"26171:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26159:6:27"},"nodeType":"YulFunctionCall","src":"26159:37:27"},"nodeType":"YulExpressionStatement","src":"26159:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26137:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26144:3:27","type":""}],"src":"26084:118:27"},{"body":{"nodeType":"YulBlock","src":"26306:124:27","statements":[{"nodeType":"YulAssignment","src":"26316:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26328:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26339:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26324:3:27"},"nodeType":"YulFunctionCall","src":"26324:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26316:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26396:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26409:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26420:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26405:3:27"},"nodeType":"YulFunctionCall","src":"26405:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26352:43:27"},"nodeType":"YulFunctionCall","src":"26352:71:27"},"nodeType":"YulExpressionStatement","src":"26352:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26278:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26290:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26301:4:27","type":""}],"src":"26208:222:27"},{"body":{"nodeType":"YulBlock","src":"26535:518:27","statements":[{"body":{"nodeType":"YulBlock","src":"26581:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26583:77:27"},"nodeType":"YulFunctionCall","src":"26583:79:27"},"nodeType":"YulExpressionStatement","src":"26583:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26556:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"26565:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26552:3:27"},"nodeType":"YulFunctionCall","src":"26552:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"26577:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26548:3:27"},"nodeType":"YulFunctionCall","src":"26548:32:27"},"nodeType":"YulIf","src":"26545:119:27"},{"nodeType":"YulBlock","src":"26674:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"26689:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"26703:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26693:6:27","type":""}]},{"nodeType":"YulAssignment","src":"26718:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26752:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"26763:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26748:3:27"},"nodeType":"YulFunctionCall","src":"26748:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26772:7:27"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"26728:19:27"},"nodeType":"YulFunctionCall","src":"26728:52:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26718:6:27"}]}]},{"nodeType":"YulBlock","src":"26800:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"26815:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"26829:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26819:6:27","type":""}]},{"nodeType":"YulAssignment","src":"26845:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26880:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"26891:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26876:3:27"},"nodeType":"YulFunctionCall","src":"26876:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26900:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"26855:20:27"},"nodeType":"YulFunctionCall","src":"26855:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"26845:6:27"}]}]},{"nodeType":"YulBlock","src":"26928:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"26943:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"26957:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26947:6:27","type":""}]},{"nodeType":"YulAssignment","src":"26973:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27008:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"27019:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27004:3:27"},"nodeType":"YulFunctionCall","src":"27004:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27028:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"26983:20:27"},"nodeType":"YulFunctionCall","src":"26983:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"26973:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint16t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26489:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"26500:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26512:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26520:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26528:6:27","type":""}],"src":"26436:617:27"},{"body":{"nodeType":"YulBlock","src":"27087:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27104:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27107:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27097:6:27"},"nodeType":"YulFunctionCall","src":"27097:88:27"},"nodeType":"YulExpressionStatement","src":"27097:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27201:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27204:4:27","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27194:6:27"},"nodeType":"YulFunctionCall","src":"27194:15:27"},"nodeType":"YulExpressionStatement","src":"27194:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27225:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27228:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27218:6:27"},"nodeType":"YulFunctionCall","src":"27218:15:27"},"nodeType":"YulExpressionStatement","src":"27218:15:27"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"27059:180:27"},{"body":{"nodeType":"YulBlock","src":"27273:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27290:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27293:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27283:6:27"},"nodeType":"YulFunctionCall","src":"27283:88:27"},"nodeType":"YulExpressionStatement","src":"27283:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27387:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27390:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27380:6:27"},"nodeType":"YulFunctionCall","src":"27380:15:27"},"nodeType":"YulExpressionStatement","src":"27380:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27411:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27414:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27404:6:27"},"nodeType":"YulFunctionCall","src":"27404:15:27"},"nodeType":"YulExpressionStatement","src":"27404:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"27245:180:27"},{"body":{"nodeType":"YulBlock","src":"27482:269:27","statements":[{"nodeType":"YulAssignment","src":"27492:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27506:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"27512:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"27502:3:27"},"nodeType":"YulFunctionCall","src":"27502:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"27492:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"27523:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27553:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"27559:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27549:3:27"},"nodeType":"YulFunctionCall","src":"27549:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"27527:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"27600:51:27","statements":[{"nodeType":"YulAssignment","src":"27614:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27628:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"27636:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27624:3:27"},"nodeType":"YulFunctionCall","src":"27624:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"27614:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"27580:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27573:6:27"},"nodeType":"YulFunctionCall","src":"27573:26:27"},"nodeType":"YulIf","src":"27570:81:27"},{"body":{"nodeType":"YulBlock","src":"27703:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"27717:16:27"},"nodeType":"YulFunctionCall","src":"27717:18:27"},"nodeType":"YulExpressionStatement","src":"27717:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"27667:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27690:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"27698:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27687:2:27"},"nodeType":"YulFunctionCall","src":"27687:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27664:2:27"},"nodeType":"YulFunctionCall","src":"27664:38:27"},"nodeType":"YulIf","src":"27661:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"27466:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"27475:6:27","type":""}],"src":"27431:320:27"},{"body":{"nodeType":"YulBlock","src":"27785:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27802:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27805:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27795:6:27"},"nodeType":"YulFunctionCall","src":"27795:88:27"},"nodeType":"YulExpressionStatement","src":"27795:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27899:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27902:4:27","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27892:6:27"},"nodeType":"YulFunctionCall","src":"27892:15:27"},"nodeType":"YulExpressionStatement","src":"27892:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27923:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27926:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27916:6:27"},"nodeType":"YulFunctionCall","src":"27916:15:27"},"nodeType":"YulExpressionStatement","src":"27916:15:27"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"27757:180:27"},{"body":{"nodeType":"YulBlock","src":"27996:87:27","statements":[{"nodeType":"YulAssignment","src":"28006:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"28014:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"28006:4:27"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28034:1:27","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"28037:3:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28027:6:27"},"nodeType":"YulFunctionCall","src":"28027:14:27"},"nodeType":"YulExpressionStatement","src":"28027:14:27"},{"nodeType":"YulAssignment","src":"28050:26:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28068:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28071:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"28058:9:27"},"nodeType":"YulFunctionCall","src":"28058:18:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"28050:4:27"}]}]},"name":"array_dataslot_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"27983:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"27991:4:27","type":""}],"src":"27943:140:27"},{"body":{"nodeType":"YulBlock","src":"28133:49:27","statements":[{"nodeType":"YulAssignment","src":"28143:33:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28161:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"28168:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28157:3:27"},"nodeType":"YulFunctionCall","src":"28157:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"28173:2:27","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28153:3:27"},"nodeType":"YulFunctionCall","src":"28153:23:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"28143:6:27"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28116:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"28126:6:27","type":""}],"src":"28089:93:27"},{"body":{"nodeType":"YulBlock","src":"28241:54:27","statements":[{"nodeType":"YulAssignment","src":"28251:37:27","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"28276:4:27"},{"name":"value","nodeType":"YulIdentifier","src":"28282:5:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28272:3:27"},"nodeType":"YulFunctionCall","src":"28272:16:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"28251:8:27"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"28216:4:27","type":""},{"name":"value","nodeType":"YulTypedName","src":"28222:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"28232:8:27","type":""}],"src":"28188:107:27"},{"body":{"nodeType":"YulBlock","src":"28377:317:27","statements":[{"nodeType":"YulVariableDeclaration","src":"28387:35:27","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"28408:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"28420:1:27","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28404:3:27"},"nodeType":"YulFunctionCall","src":"28404:18:27"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"28391:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28431:109:27","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"28462:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28473:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"28443:18:27"},"nodeType":"YulFunctionCall","src":"28443:97:27"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"28435:4:27","type":""}]},{"nodeType":"YulAssignment","src":"28549:51:27","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"28580:9:27"},{"name":"toInsert","nodeType":"YulIdentifier","src":"28591:8:27"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"28561:18:27"},"nodeType":"YulFunctionCall","src":"28561:39:27"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"28549:8:27"}]},{"nodeType":"YulAssignment","src":"28609:30:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28622:5:27"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"28633:4:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"28629:3:27"},"nodeType":"YulFunctionCall","src":"28629:9:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28618:3:27"},"nodeType":"YulFunctionCall","src":"28618:21:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"28609:5:27"}]},{"nodeType":"YulAssignment","src":"28648:40:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28661:5:27"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"28672:8:27"},{"name":"mask","nodeType":"YulIdentifier","src":"28682:4:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28668:3:27"},"nodeType":"YulFunctionCall","src":"28668:19:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28658:2:27"},"nodeType":"YulFunctionCall","src":"28658:30:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"28648:6:27"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28338:5:27","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"28345:10:27","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"28357:8:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"28370:6:27","type":""}],"src":"28301:393:27"},{"body":{"nodeType":"YulBlock","src":"28732:28:27","statements":[{"nodeType":"YulAssignment","src":"28742:12:27","value":{"name":"value","nodeType":"YulIdentifier","src":"28749:5:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28742:3:27"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28718:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28728:3:27","type":""}],"src":"28700:60:27"},{"body":{"nodeType":"YulBlock","src":"28826:82:27","statements":[{"nodeType":"YulAssignment","src":"28836:66:27","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28894:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28876:17:27"},"nodeType":"YulFunctionCall","src":"28876:24:27"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"28867:8:27"},"nodeType":"YulFunctionCall","src":"28867:34:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28849:17:27"},"nodeType":"YulFunctionCall","src":"28849:53:27"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"28836:9:27"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28806:5:27","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"28816:9:27","type":""}],"src":"28766:142:27"},{"body":{"nodeType":"YulBlock","src":"28961:28:27","statements":[{"nodeType":"YulAssignment","src":"28971:12:27","value":{"name":"value","nodeType":"YulIdentifier","src":"28978:5:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28971:3:27"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28947:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28957:3:27","type":""}],"src":"28914:75:27"},{"body":{"nodeType":"YulBlock","src":"29071:193:27","statements":[{"nodeType":"YulVariableDeclaration","src":"29081:63:27","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"29136:7:27"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"29105:30:27"},"nodeType":"YulFunctionCall","src":"29105:39:27"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"29085:16:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29160:4:27"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29200:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"29194:5:27"},"nodeType":"YulFunctionCall","src":"29194:11:27"},{"name":"offset","nodeType":"YulIdentifier","src":"29207:6:27"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"29239:16:27"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"29215:23:27"},"nodeType":"YulFunctionCall","src":"29215:41:27"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"29166:27:27"},"nodeType":"YulFunctionCall","src":"29166:91:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"29153:6:27"},"nodeType":"YulFunctionCall","src":"29153:105:27"},"nodeType":"YulExpressionStatement","src":"29153:105:27"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"29048:4:27","type":""},{"name":"offset","nodeType":"YulTypedName","src":"29054:6:27","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"29062:7:27","type":""}],"src":"28995:269:27"},{"body":{"nodeType":"YulBlock","src":"29319:24:27","statements":[{"nodeType":"YulAssignment","src":"29329:8:27","value":{"kind":"number","nodeType":"YulLiteral","src":"29336:1:27","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29329:3:27"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"29315:3:27","type":""}],"src":"29270:73:27"},{"body":{"nodeType":"YulBlock","src":"29402:136:27","statements":[{"nodeType":"YulVariableDeclaration","src":"29412:46:27","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"29426:30:27"},"nodeType":"YulFunctionCall","src":"29426:32:27"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"29416:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29511:4:27"},{"name":"offset","nodeType":"YulIdentifier","src":"29517:6:27"},{"name":"zero_0","nodeType":"YulIdentifier","src":"29525:6:27"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"29467:43:27"},"nodeType":"YulFunctionCall","src":"29467:65:27"},"nodeType":"YulExpressionStatement","src":"29467:65:27"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"29388:4:27","type":""},{"name":"offset","nodeType":"YulTypedName","src":"29394:6:27","type":""}],"src":"29349:189:27"},{"body":{"nodeType":"YulBlock","src":"29594:136:27","statements":[{"body":{"nodeType":"YulBlock","src":"29661:63:27","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"29705:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"29712:1:27","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"29675:29:27"},"nodeType":"YulFunctionCall","src":"29675:39:27"},"nodeType":"YulExpressionStatement","src":"29675:39:27"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"29614:5:27"},{"name":"end","nodeType":"YulIdentifier","src":"29621:3:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29611:2:27"},"nodeType":"YulFunctionCall","src":"29611:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"29626:26:27","statements":[{"nodeType":"YulAssignment","src":"29628:22:27","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"29641:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"29648:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29637:3:27"},"nodeType":"YulFunctionCall","src":"29637:13:27"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"29628:5:27"}]}]},"pre":{"nodeType":"YulBlock","src":"29608:2:27","statements":[]},"src":"29604:120:27"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"29582:5:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"29589:3:27","type":""}],"src":"29544:186:27"},{"body":{"nodeType":"YulBlock","src":"29814:463:27","statements":[{"body":{"nodeType":"YulBlock","src":"29840:430:27","statements":[{"nodeType":"YulVariableDeclaration","src":"29854:53:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"29901:5:27"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"29870:30:27"},"nodeType":"YulFunctionCall","src":"29870:37:27"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"29858:8:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29920:63:27","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"29943:8:27"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"29971:10:27"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"29953:17:27"},"nodeType":"YulFunctionCall","src":"29953:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29939:3:27"},"nodeType":"YulFunctionCall","src":"29939:44:27"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"29924:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"30140:27:27","statements":[{"nodeType":"YulAssignment","src":"30142:23:27","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"30157:8:27"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"30142:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"30124:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"30136:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30121:2:27"},"nodeType":"YulFunctionCall","src":"30121:18:27"},"nodeType":"YulIf","src":"30118:49:27"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"30209:11:27"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"30226:8:27"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"30254:3:27"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"30236:17:27"},"nodeType":"YulFunctionCall","src":"30236:22:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30222:3:27"},"nodeType":"YulFunctionCall","src":"30222:37:27"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"30180:28:27"},"nodeType":"YulFunctionCall","src":"30180:80:27"},"nodeType":"YulExpressionStatement","src":"30180:80:27"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"29831:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"29836:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29828:2:27"},"nodeType":"YulFunctionCall","src":"29828:11:27"},"nodeType":"YulIf","src":"29825:445:27"}]},"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"29790:5:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"29797:3:27","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"29802:10:27","type":""}],"src":"29736:541:27"},{"body":{"nodeType":"YulBlock","src":"30346:54:27","statements":[{"nodeType":"YulAssignment","src":"30356:37:27","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"30381:4:27"},{"name":"value","nodeType":"YulIdentifier","src":"30387:5:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"30377:3:27"},"nodeType":"YulFunctionCall","src":"30377:16:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"30356:8:27"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"30321:4:27","type":""},{"name":"value","nodeType":"YulTypedName","src":"30327:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"30337:8:27","type":""}],"src":"30283:117:27"},{"body":{"nodeType":"YulBlock","src":"30457:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"30467:68:27","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30516:1:27","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"30519:5:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"30512:3:27"},"nodeType":"YulFunctionCall","src":"30512:13:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30531:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30527:3:27"},"nodeType":"YulFunctionCall","src":"30527:6:27"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"30483:28:27"},"nodeType":"YulFunctionCall","src":"30483:51:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30479:3:27"},"nodeType":"YulFunctionCall","src":"30479:56:27"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"30471:4:27","type":""}]},{"nodeType":"YulAssignment","src":"30544:25:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"30558:4:27"},{"name":"mask","nodeType":"YulIdentifier","src":"30564:4:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30554:3:27"},"nodeType":"YulFunctionCall","src":"30554:15:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"30544:6:27"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"30434:4:27","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"30440:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"30450:6:27","type":""}],"src":"30406:169:27"},{"body":{"nodeType":"YulBlock","src":"30661:214:27","statements":[{"nodeType":"YulAssignment","src":"30794:37:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"30821:4:27"},{"name":"len","nodeType":"YulIdentifier","src":"30827:3:27"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"30802:18:27"},"nodeType":"YulFunctionCall","src":"30802:29:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"30794:4:27"}]},{"nodeType":"YulAssignment","src":"30840:29:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"30851:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30861:1:27","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"30864:3:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"30857:3:27"},"nodeType":"YulFunctionCall","src":"30857:11:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"30848:2:27"},"nodeType":"YulFunctionCall","src":"30848:21:27"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"30840:4:27"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"30642:4:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"30648:3:27","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"30656:4:27","type":""}],"src":"30580:295:27"},{"body":{"nodeType":"YulBlock","src":"30970:1300:27","statements":[{"nodeType":"YulVariableDeclaration","src":"30981:50:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"31027:3:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"30995:31:27"},"nodeType":"YulFunctionCall","src":"30995:36:27"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"30985:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"31116:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"31118:16:27"},"nodeType":"YulFunctionCall","src":"31118:18:27"},"nodeType":"YulExpressionStatement","src":"31118:18:27"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"31088:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"31096:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31085:2:27"},"nodeType":"YulFunctionCall","src":"31085:30:27"},"nodeType":"YulIf","src":"31082:56:27"},{"nodeType":"YulVariableDeclaration","src":"31148:52:27","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31194:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"31188:5:27"},"nodeType":"YulFunctionCall","src":"31188:11:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"31162:25:27"},"nodeType":"YulFunctionCall","src":"31162:38:27"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"31152:6:27","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31292:4:27"},{"name":"oldLen","nodeType":"YulIdentifier","src":"31298:6:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"31306:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulIdentifier","src":"31247:44:27"},"nodeType":"YulFunctionCall","src":"31247:66:27"},"nodeType":"YulExpressionStatement","src":"31247:66:27"},{"nodeType":"YulVariableDeclaration","src":"31323:18:27","value":{"kind":"number","nodeType":"YulLiteral","src":"31340:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"31327:9:27","type":""}]},{"nodeType":"YulAssignment","src":"31351:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"31364:4:27","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"31351:9:27"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"31415:610:27","statements":[{"nodeType":"YulVariableDeclaration","src":"31429:37:27","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"31448:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31460:4:27","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"31456:3:27"},"nodeType":"YulFunctionCall","src":"31456:9:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31444:3:27"},"nodeType":"YulFunctionCall","src":"31444:22:27"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"31433:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31480:50:27","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31525:4:27"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"31494:30:27"},"nodeType":"YulFunctionCall","src":"31494:36:27"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"31484:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31543:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"31552:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"31547:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"31611:163:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"31636:6:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"31654:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"31659:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31650:3:27"},"nodeType":"YulFunctionCall","src":"31650:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31644:5:27"},"nodeType":"YulFunctionCall","src":"31644:26:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"31629:6:27"},"nodeType":"YulFunctionCall","src":"31629:42:27"},"nodeType":"YulExpressionStatement","src":"31629:42:27"},{"nodeType":"YulAssignment","src":"31688:24:27","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"31702:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"31710:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31698:3:27"},"nodeType":"YulFunctionCall","src":"31698:14:27"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"31688:6:27"}]},{"nodeType":"YulAssignment","src":"31729:31:27","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"31746:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31757:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31742:3:27"},"nodeType":"YulFunctionCall","src":"31742:18:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"31729:9:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31577:1:27"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"31580:7:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31574:2:27"},"nodeType":"YulFunctionCall","src":"31574:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"31589:21:27","statements":[{"nodeType":"YulAssignment","src":"31591:17:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31600:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"31603:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31596:3:27"},"nodeType":"YulFunctionCall","src":"31596:12:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"31591:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"31570:3:27","statements":[]},"src":"31566:208:27"},{"body":{"nodeType":"YulBlock","src":"31810:156:27","statements":[{"nodeType":"YulVariableDeclaration","src":"31828:43:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"31855:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"31860:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31851:3:27"},"nodeType":"YulFunctionCall","src":"31851:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31845:5:27"},"nodeType":"YulFunctionCall","src":"31845:26:27"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"31832:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"31895:6:27"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"31922:9:27"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"31937:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"31945:4:27","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31933:3:27"},"nodeType":"YulFunctionCall","src":"31933:17:27"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"31903:18:27"},"nodeType":"YulFunctionCall","src":"31903:48:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"31888:6:27"},"nodeType":"YulFunctionCall","src":"31888:64:27"},"nodeType":"YulExpressionStatement","src":"31888:64:27"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"31793:7:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"31802:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31790:2:27"},"nodeType":"YulFunctionCall","src":"31790:19:27"},"nodeType":"YulIf","src":"31787:179:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31986:4:27"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"32000:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"32008:1:27","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"31996:3:27"},"nodeType":"YulFunctionCall","src":"31996:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"32012:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31992:3:27"},"nodeType":"YulFunctionCall","src":"31992:22:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"31979:6:27"},"nodeType":"YulFunctionCall","src":"31979:36:27"},"nodeType":"YulExpressionStatement","src":"31979:36:27"}]},"nodeType":"YulCase","src":"31408:617:27","value":{"kind":"number","nodeType":"YulLiteral","src":"31413:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"32042:222:27","statements":[{"nodeType":"YulVariableDeclaration","src":"32056:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"32069:1:27","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"32060:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"32093:67:27","statements":[{"nodeType":"YulAssignment","src":"32111:35:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"32130:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"32135:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32126:3:27"},"nodeType":"YulFunctionCall","src":"32126:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32120:5:27"},"nodeType":"YulFunctionCall","src":"32120:26:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32111:5:27"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"32086:6:27"},"nodeType":"YulIf","src":"32083:77:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32180:4:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32239:5:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"32246:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"32186:52:27"},"nodeType":"YulFunctionCall","src":"32186:67:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32173:6:27"},"nodeType":"YulFunctionCall","src":"32173:81:27"},"nodeType":"YulExpressionStatement","src":"32173:81:27"}]},"nodeType":"YulCase","src":"32034:230:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"31388:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"31396:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31385:2:27"},"nodeType":"YulFunctionCall","src":"31385:14:27"},"nodeType":"YulSwitch","src":"31378:886:27"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"30959:4:27","type":""},{"name":"src","nodeType":"YulTypedName","src":"30965:3:27","type":""}],"src":"30880:1390:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // struct IStargateRouter.lzTxObj\n    function abi_decode_t_struct$_lzTxObj_$1994_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x60)\n\n        {\n            // dstGasForCall\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // dstNativeAmount\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // dstNativeAddr\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x40), abi_decode_t_bytes_memory_ptr(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint16t_uint8t_bytes_calldata_ptrt_bytes_calldata_ptrt_struct$_lzTxObj_$1994_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6 := abi_decode_t_struct$_lzTxObj_$1994_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint16_to_t_uint16(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct IStargateRouter.lzTxObj -> struct IStargateRouter.lzTxObj\n    function abi_encode_t_struct$_lzTxObj_$1994_memory_ptr_to_t_struct$_lzTxObj_$1994_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // dstGasForCall\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // dstNativeAmount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // dstNativeAddr\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    // struct MockStargateRouter.MockStargateRouterSwapArgs -> struct MockStargateRouter.MockStargateRouterSwapArgs\n    function abi_encode_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x0120)\n\n        {\n            // dstChainId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // srcPoolId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // dstPoolId\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // refundAddress\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // minAmountOut\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // to\n\n            let memberValue0 := mload(add(value, 0xc0))\n\n            mstore(add(pos, 0xc0), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // lzTxParams\n\n            let memberValue0 := mload(add(value, 0xe0))\n\n            mstore(add(pos, 0xe0), sub(tail, pos))\n            tail := abi_encode_t_struct$_lzTxObj_$1994_memory_ptr_to_t_struct$_lzTxObj_$1994_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // payload\n\n            let memberValue0 := mload(add(value, 0x0100))\n\n            mstore(add(pos, 0x0100), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct MockStargateRouter.MockStargateRouterSwapArgs[] -> struct MockStargateRouter.MockStargateRouterSwapArgs[]\n    function abi_encode_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_uint16t_uint256t_uint256t_address_payablet_uint256t_uint256t_bytes_calldata_ptrt_struct$_lzTxObj_$1994_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 192))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 224))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value8 := abi_decode_t_struct$_lzTxObj_$1994_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // struct MockStargateRouter.MockStargateRouterSwapArgs -> struct MockStargateRouter.MockStargateRouterSwapArgs\n    function abi_encode_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x0120)\n\n        {\n            // dstChainId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // srcPoolId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // dstPoolId\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // refundAddress\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // minAmountOut\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // to\n\n            let memberValue0 := mload(add(value, 0xc0))\n\n            mstore(add(pos, 0xc0), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // lzTxParams\n\n            let memberValue0 := mload(add(value, 0xe0))\n\n            mstore(add(pos, 0xe0), sub(tail, pos))\n            tail := abi_encode_t_struct$_lzTxObj_$1994_memory_ptr_to_t_struct$_lzTxObj_$1994_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // payload\n\n            let memberValue0 := mload(add(value, 0x0100))\n\n            mstore(add(pos, 0x0100), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr__to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_to_t_struct$_MockStargateRouterSwapArgs_$2129_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint16t_uint256t_uint256t_address_payablet_uint256t_bytes_calldata_ptrt_struct$_lzTxObj_$1994_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5, value6 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 192))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value7 := abi_decode_t_struct$_lzTxObj_$1994_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint16t_uint256t_uint256t_address_payable(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint16t_uint256t_uint256t_address_payablet_uint256t_uint256t_struct$_lzTxObj_$1994_memory_ptrt_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10 {\n        if slt(sub(dataEnd, headStart), 288) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 192))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6 := abi_decode_t_struct$_lzTxObj_$1994_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 224))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value7, value8 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 256))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value9, value10 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint16t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100a75760003560e01c80638b68be29116100645780638b68be291461019c5780638f2e1d18146101d95780639ba3aa74146101f55780639fbf10fc14610211578063c45a01551461022d578063c4de93a514610258576100a7565b80630a512369146100ac57806317293c87146100ea57806352efea6e14610115578063617904311461012c57806384d0dba31461015757806387b21efc14610173575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610f44565b610295565b6040516100e192919061102b565b60405180910390f35b3480156100f657600080fd5b506100ff6102ab565b60405161010c9190611054565b60405180910390f35b34801561012157600080fd5b5061012a6102b7565b005b34801561013857600080fd5b5061014161039a565b60405161014e9190611332565b60405180910390f35b610171600480360381019061016c9190611380565b610676565b005b34801561017f57600080fd5b5061019a600480360381019061019591906114b0565b610681565b005b3480156101a857600080fd5b506101c360048036038101906101be9190611503565b610686565b6040516101d09190611603565b60405180910390f35b6101f360048036038101906101ee9190611625565b61093f565b005b61020f600480360381019061020a9190611703565b610949565b005b61022b6004803603810190610226919061176a565b61094f565b005b34801561023957600080fd5b50610242610b5f565b60405161024f91906118a1565b60405180910390f35b34801561026457600080fd5b5061027f600480360381019061027a91906118bc565b610b64565b60405161028c9190611054565b60405180910390f35b6000806000809150915097509795505050505050565b60008080549050905090565b5b6000808054905011156103985760008054806102d7576102d661190f565b5b60019003818190600052602060002090600b0201600080820160006101000a81549061ffff0219169055600182016000905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600482016000905560058201600090556006820160006103589190610b6d565b60078201600080820160009055600182016000905560028201600061037d9190610b6d565b5050600a8201600061038f9190610b6d565b505090556102b8565b565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561066d57838290600052602060002090600b0201604051806101200160405290816000820160009054906101000a900461ffff1661ffff1661ffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820180546104909061196d565b80601f01602080910402602001604051908101604052809291908181526020018280546104bc9061196d565b80156105095780601f106104de57610100808354040283529160200191610509565b820191906000526020600020905b8154815290600101906020018083116104ec57829003601f168201915b505050505081526020016007820160405180606001604052908160008201548152602001600182015481526020016002820180546105469061196d565b80601f01602080910402602001604051908101604052809291908181526020018280546105729061196d565b80156105bf5780601f10610594576101008083540402835291602001916105bf565b820191906000526020600020905b8154815290600101906020018083116105a257829003601f168201915b5050505050815250508152602001600a820180546105dc9061196d565b80601f01602080910402602001604051908101604052809291908181526020018280546106089061196d565b80156106555780601f1061062a57610100808354040283529160200191610655565b820191906000526020600020905b81548152906001019060200180831161063857829003601f168201915b505050505081525050815260200190600101906103be565b50505050905090565b505050505050505050565b505050565b61068e610bad565b600082815481106106a2576106a161199e565b5b90600052602060002090600b0201604051806101200160405290816000820160009054906101000a900461ffff1661ffff1661ffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820154815260200160068201805461076a9061196d565b80601f01602080910402602001604051908101604052809291908181526020018280546107969061196d565b80156107e35780601f106107b8576101008083540402835291602001916107e3565b820191906000526020600020905b8154815290600101906020018083116107c657829003601f168201915b505050505081526020016007820160405180606001604052908160008201548152602001600182015481526020016002820180546108209061196d565b80601f016020809104026020016040519081016040528092919081815260200182805461084c9061196d565b80156108995780601f1061086e57610100808354040283529160200191610899565b820191906000526020600020905b81548152906001019060200180831161087c57829003601f168201915b5050505050815250508152602001600a820180546108b69061196d565b80601f01602080910402602001604051908101604052809291908181526020018280546108e29061196d565b801561092f5780601f106109045761010080835404028352916020019161092f565b820191906000526020600020905b81548152906001019060200180831161091257829003601f168201915b5050505050815250509050919050565b5050505050505050565b50505050565b60006040518061012001604052808d61ffff1681526020018c81526020018b81526020018a73ffffffffffffffffffffffffffffffffffffffff16815260200189815260200188815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200187815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081525090806001815401808255809150506001900390600052602060002090600b020160009091909190915060008201518160000160006101000a81548161ffff021916908361ffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a0820151816005015560c0820151816006019081610b039190611b79565b5060e08201518160070160008201518160000155602082015181600101556040820151816002019081610b369190611b79565b50505061010082015181600a019081610b4f9190611b79565b5050505050505050505050505050565b600090565b60009392505050565b508054610b799061196d565b6000825580601f10610b8b5750610baa565b601f016020900490600052602060002090810190610ba99190610c19565b5b50565b604051806101200160405280600061ffff1681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160608152602001610c0c610c36565b8152602001606081525090565b5b80821115610c32576000816000905550600101610c1a565b5090565b60405180606001604052806000815260200160008152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600061ffff82169050919050565b610c8281610c6b565b8114610c8d57600080fd5b50565b600081359050610c9f81610c79565b92915050565b600060ff82169050919050565b610cbb81610ca5565b8114610cc657600080fd5b50565b600081359050610cd881610cb2565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610d0357610d02610cde565b5b8235905067ffffffffffffffff811115610d2057610d1f610ce3565b5b602083019150836001820283011115610d3c57610d3b610ce8565b5b9250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d9182610d48565b810181811067ffffffffffffffff82111715610db057610daf610d59565b5b80604052505050565b6000610dc3610c57565b9050610dcf8282610d88565b919050565b600080fd5b6000819050919050565b610dec81610dd9565b8114610df757600080fd5b50565b600081359050610e0981610de3565b92915050565b600080fd5b600067ffffffffffffffff821115610e2f57610e2e610d59565b5b610e3882610d48565b9050602081019050919050565b82818337600083830152505050565b6000610e67610e6284610e14565b610db9565b905082815260208101848484011115610e8357610e82610e0f565b5b610e8e848285610e45565b509392505050565b600082601f830112610eab57610eaa610cde565b5b8135610ebb848260208601610e54565b91505092915050565b600060608284031215610eda57610ed9610d43565b5b610ee46060610db9565b90506000610ef484828501610dfa565b6000830152506020610f0884828501610dfa565b602083015250604082013567ffffffffffffffff811115610f2c57610f2b610dd4565b5b610f3884828501610e96565b60408301525092915050565b600080600080600080600060a0888a031215610f6357610f62610c61565b5b6000610f718a828b01610c90565b9750506020610f828a828b01610cc9565b965050604088013567ffffffffffffffff811115610fa357610fa2610c66565b5b610faf8a828b01610ced565b9550955050606088013567ffffffffffffffff811115610fd257610fd1610c66565b5b610fde8a828b01610ced565b9350935050608088013567ffffffffffffffff81111561100157611000610c66565b5b61100d8a828b01610ec4565b91505092959891949750929550565b61102581610dd9565b82525050565b6000604082019050611040600083018561101c565b61104d602083018461101c565b9392505050565b6000602082019050611069600083018461101c565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6110a481610c6b565b82525050565b6110b381610dd9565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110e4826110b9565b9050919050565b6110f4816110d9565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611134578082015181840152602081019050611119565b60008484015250505050565b600061114b826110fa565b6111558185611105565b9350611165818560208601611116565b61116e81610d48565b840191505092915050565b600060608301600083015161119160008601826110aa565b5060208301516111a460208601826110aa565b50604083015184820360408601526111bc8282611140565b9150508091505092915050565b6000610120830160008301516111e2600086018261109b565b5060208301516111f560208601826110aa565b50604083015161120860408601826110aa565b50606083015161121b60608601826110eb565b50608083015161122e60808601826110aa565b5060a083015161124160a08601826110aa565b5060c083015184820360c08601526112598282611140565b91505060e083015184820360e08601526112738282611179565b91505061010083015184820361010086015261128f8282611140565b9150508091505092915050565b60006112a883836111c9565b905092915050565b6000602082019050919050565b60006112c88261106f565b6112d2818561107a565b9350836020820285016112e48561108b565b8060005b858110156113205784840389528151611301858261129c565b945061130c836112b0565b925060208a019950506001810190506112e8565b50829750879550505050505092915050565b6000602082019050818103600083015261134c81846112bd565b905092915050565b61135d816110d9565b811461136857600080fd5b50565b60008135905061137a81611354565b92915050565b60008060008060008060008060006101008a8c0312156113a3576113a2610c61565b5b60006113b18c828d01610c90565b99505060206113c28c828d01610dfa565b98505060406113d38c828d01610dfa565b97505060606113e48c828d0161136b565b96505060806113f58c828d01610dfa565b95505060a06114068c828d01610dfa565b94505060c08a013567ffffffffffffffff81111561142757611426610c66565b5b6114338c828d01610ced565b935093505060e08a013567ffffffffffffffff81111561145657611455610c66565b5b6114628c828d01610ec4565b9150509295985092959850929598565b600061147d826110b9565b9050919050565b61148d81611472565b811461149857600080fd5b50565b6000813590506114aa81611484565b92915050565b6000806000606084860312156114c9576114c8610c61565b5b60006114d786828701610dfa565b93505060206114e886828701610dfa565b92505060406114f98682870161149b565b9150509250925092565b60006020828403121561151957611518610c61565b5b600061152784828501610dfa565b91505092915050565b600061012083016000830151611549600086018261109b565b50602083015161155c60208601826110aa565b50604083015161156f60408601826110aa565b50606083015161158260608601826110eb565b50608083015161159560808601826110aa565b5060a08301516115a860a08601826110aa565b5060c083015184820360c08601526115c08282611140565b91505060e083015184820360e08601526115da8282611179565b9150506101008301518482036101008601526115f68282611140565b9150508091505092915050565b6000602082019050818103600083015261161d8184611530565b905092915050565b60008060008060008060008060e0898b03121561164557611644610c61565b5b60006116538b828c01610c90565b98505060206116648b828c01610dfa565b97505060406116758b828c01610dfa565b96505060606116868b828c0161136b565b95505060806116978b828c01610dfa565b94505060a089013567ffffffffffffffff8111156116b8576116b7610c66565b5b6116c48b828c01610ced565b935093505060c089013567ffffffffffffffff8111156116e7576116e6610c66565b5b6116f38b828c01610ec4565b9150509295985092959890939650565b6000806000806080858703121561171d5761171c610c61565b5b600061172b87828801610c90565b945050602061173c87828801610dfa565b935050604061174d87828801610dfa565b925050606061175e8782880161136b565b91505092959194509250565b60008060008060008060008060008060006101208c8e0312156117905761178f610c61565b5b600061179e8e828f01610c90565b9b505060206117af8e828f01610dfa565b9a505060406117c08e828f01610dfa565b99505060606117d18e828f0161136b565b98505060806117e28e828f01610dfa565b97505060a06117f38e828f01610dfa565b96505060c08c013567ffffffffffffffff81111561181457611813610c66565b5b6118208e828f01610ec4565b95505060e08c013567ffffffffffffffff81111561184157611840610c66565b5b61184d8e828f01610ced565b94509450506101008c013567ffffffffffffffff81111561187157611870610c66565b5b61187d8e828f01610ced565b92509250509295989b509295989b9093969950565b61189b81611472565b82525050565b60006020820190506118b66000830184611892565b92915050565b6000806000606084860312156118d5576118d4610c61565b5b60006118e386828701610c90565b93505060206118f486828701610dfa565b92505060406119058682870161149b565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061198557607f821691505b6020821081036119985761199761193e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611a2f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826119f2565b611a3986836119f2565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611a76611a71611a6c84610dd9565b611a51565b610dd9565b9050919050565b6000819050919050565b611a9083611a5b565b611aa4611a9c82611a7d565b8484546119ff565b825550505050565b600090565b611ab9611aac565b611ac4818484611a87565b505050565b5b81811015611ae857611add600082611ab1565b600181019050611aca565b5050565b601f821115611b2d57611afe816119cd565b611b07846119e2565b81016020851015611b16578190505b611b2a611b22856119e2565b830182611ac9565b50505b505050565b600082821c905092915050565b6000611b5060001984600802611b32565b1980831691505092915050565b6000611b698383611b3f565b9150826002028217905092915050565b611b82826110fa565b67ffffffffffffffff811115611b9b57611b9a610d59565b5b611ba5825461196d565b611bb0828285611aec565b600060209050601f831160018114611be35760008415611bd1578287015190505b611bdb8582611b5d565b865550611c43565b601f198416611bf1866119cd565b60005b82811015611c1957848901518255600182019150602085019450602081019050611bf4565b86831015611c365784890151611c32601f891682611b3f565b8355505b6001600288020188555050505b50505050505056fea26469706673582212208f4c82bb4e6f9f60bf1ca4eb250222b364684d7ea711c29372104d66b7d85a4d64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B68BE29 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8B68BE29 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x8F2E1D18 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x9BA3AA74 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x9FBF10FC EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xC4DE93A5 EQ PUSH2 0x258 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0xA512369 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x17293C87 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x52EFEA6E EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x61790431 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x84D0DBA3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x87B21EFC EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xF44 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP3 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x2B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x681 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x93F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x94F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x18BC JUMP JUMPDEST PUSH2 0xB64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP GT ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 SLOAD DUP1 PUSH2 0x2D7 JUMPI PUSH2 0x2D6 PUSH2 0x190F JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH2 0xFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x7 DUP3 ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xB6D JUMP JUMPDEST POP POP PUSH1 0xA DUP3 ADD PUSH1 0x0 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0xB6D JUMP JUMPDEST POP POP SWAP1 SSTORE PUSH2 0x2B8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x66D JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0x490 SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BC SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x509 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4DE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x509 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x546 SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x572 SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x594 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD DUP1 SLOAD PUSH2 0x5DC SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x608 SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x655 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x62A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x655 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x638 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3BE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x68E PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6A2 JUMPI PUSH2 0x6A1 PUSH2 0x199E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0x76A SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x796 SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x820 SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x84C SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x899 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x86E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x899 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x87C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD DUP1 SLOAD PUSH2 0x8B6 SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E2 SWAP1 PUSH2 0x196D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x92F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x904 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x92F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x912 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP14 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SWAP1 DUP2 PUSH2 0xB03 SWAP2 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST POP POP POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SWAP1 DUP2 PUSH2 0xB4F SWAP2 SWAP1 PUSH2 0x1B79 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0xB79 SWAP1 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0xB8B JUMPI POP PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xBA9 SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0C PUSH2 0xC36 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xC32 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xC1A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC82 DUP2 PUSH2 0xC6B JUMP JUMPDEST DUP2 EQ PUSH2 0xC8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC9F DUP2 PUSH2 0xC79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCBB DUP2 PUSH2 0xCA5 JUMP JUMPDEST DUP2 EQ PUSH2 0xCC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCD8 DUP2 PUSH2 0xCB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xD03 JUMPI PUSH2 0xD02 PUSH2 0xCDE JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD20 JUMPI PUSH2 0xD1F PUSH2 0xCE3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xD3C JUMPI PUSH2 0xD3B PUSH2 0xCE8 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xD91 DUP3 PUSH2 0xD48 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xDB0 JUMPI PUSH2 0xDAF PUSH2 0xD59 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC3 PUSH2 0xC57 JUMP JUMPDEST SWAP1 POP PUSH2 0xDCF DUP3 DUP3 PUSH2 0xD88 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDEC DUP2 PUSH2 0xDD9 JUMP JUMPDEST DUP2 EQ PUSH2 0xDF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE09 DUP2 PUSH2 0xDE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE2F JUMPI PUSH2 0xE2E PUSH2 0xD59 JUMP JUMPDEST JUMPDEST PUSH2 0xE38 DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE67 PUSH2 0xE62 DUP5 PUSH2 0xE14 JUMP JUMPDEST PUSH2 0xDB9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xE83 JUMPI PUSH2 0xE82 PUSH2 0xE0F JUMP JUMPDEST JUMPDEST PUSH2 0xE8E DUP5 DUP3 DUP6 PUSH2 0xE45 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEAB JUMPI PUSH2 0xEAA PUSH2 0xCDE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEBB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xE54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEDA JUMPI PUSH2 0xED9 PUSH2 0xD43 JUMP JUMPDEST JUMPDEST PUSH2 0xEE4 PUSH1 0x60 PUSH2 0xDB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEF4 DUP5 DUP3 DUP6 ADD PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xF08 DUP5 DUP3 DUP6 ADD PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF2C JUMPI PUSH2 0xF2B PUSH2 0xDD4 JUMP JUMPDEST JUMPDEST PUSH2 0xF38 DUP5 DUP3 DUP6 ADD PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH2 0xF62 PUSH2 0xC61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF71 DUP11 DUP3 DUP12 ADD PUSH2 0xC90 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xF82 DUP11 DUP3 DUP12 ADD PUSH2 0xCC9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFA3 JUMPI PUSH2 0xFA2 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0xFAF DUP11 DUP3 DUP12 ADD PUSH2 0xCED JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFD2 JUMPI PUSH2 0xFD1 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0xFDE DUP11 DUP3 DUP12 ADD PUSH2 0xCED JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1001 JUMPI PUSH2 0x1000 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0x100D DUP11 DUP3 DUP12 ADD PUSH2 0xEC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x1025 DUP2 PUSH2 0xDD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1040 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x101C JUMP JUMPDEST PUSH2 0x104D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x101C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1069 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x101C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A4 DUP2 PUSH2 0xC6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x10B3 DUP2 PUSH2 0xDD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E4 DUP3 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F4 DUP2 PUSH2 0x10D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1134 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114B DUP3 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x1155 DUP2 DUP6 PUSH2 0x1105 JUMP JUMPDEST SWAP4 POP PUSH2 0x1165 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x116E DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x1191 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x11A4 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x11BC DUP3 DUP3 PUSH2 0x1140 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x11E2 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x109B JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x11F5 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1208 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x121B PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x10EB JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x122E PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x1241 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1259 DUP3 DUP3 PUSH2 0x1140 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xE0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x1273 DUP3 DUP3 PUSH2 0x1179 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x100 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x128F DUP3 DUP3 PUSH2 0x1140 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A8 DUP4 DUP4 PUSH2 0x11C9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C8 DUP3 PUSH2 0x106F JUMP JUMPDEST PUSH2 0x12D2 DUP2 DUP6 PUSH2 0x107A JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x12E4 DUP6 PUSH2 0x108B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1320 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1301 DUP6 DUP3 PUSH2 0x129C JUMP JUMPDEST SWAP5 POP PUSH2 0x130C DUP4 PUSH2 0x12B0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x12E8 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x134C DUP2 DUP5 PUSH2 0x12BD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x135D DUP2 PUSH2 0x10D9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x137A DUP2 PUSH2 0x1354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x13A3 JUMPI PUSH2 0x13A2 PUSH2 0xC61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13B1 DUP13 DUP3 DUP14 ADD PUSH2 0xC90 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 PUSH2 0x13C2 DUP13 DUP3 DUP14 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 PUSH2 0x13D3 DUP13 DUP3 DUP14 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0x13E4 DUP13 DUP3 DUP14 ADD PUSH2 0x136B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH2 0x13F5 DUP13 DUP3 DUP14 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH2 0x1406 DUP13 DUP3 DUP14 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1427 JUMPI PUSH2 0x1426 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0x1433 DUP13 DUP3 DUP14 ADD PUSH2 0xCED JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0xE0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1456 JUMPI PUSH2 0x1455 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0x1462 DUP13 DUP3 DUP14 ADD PUSH2 0xEC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147D DUP3 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x148D DUP2 PUSH2 0x1472 JUMP JUMPDEST DUP2 EQ PUSH2 0x1498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14AA DUP2 PUSH2 0x1484 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14C9 JUMPI PUSH2 0x14C8 PUSH2 0xC61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14D7 DUP7 DUP3 DUP8 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14E8 DUP7 DUP3 DUP8 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14F9 DUP7 DUP3 DUP8 ADD PUSH2 0x149B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1519 JUMPI PUSH2 0x1518 PUSH2 0xC61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1527 DUP5 DUP3 DUP6 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x1549 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x109B JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x155C PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x156F PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1582 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x10EB JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x1595 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x15A8 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x10AA JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x15C0 DUP3 DUP3 PUSH2 0x1140 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xE0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x15DA DUP3 DUP3 PUSH2 0x1179 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x100 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x15F6 DUP3 DUP3 PUSH2 0x1140 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x161D DUP2 DUP5 PUSH2 0x1530 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1645 JUMPI PUSH2 0x1644 PUSH2 0xC61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1653 DUP12 DUP3 DUP13 ADD PUSH2 0xC90 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1664 DUP12 DUP3 DUP13 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x1675 DUP12 DUP3 DUP13 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x1686 DUP12 DUP3 DUP13 ADD PUSH2 0x136B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x1697 DUP12 DUP3 DUP13 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16B8 JUMPI PUSH2 0x16B7 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0x16C4 DUP12 DUP3 DUP13 ADD PUSH2 0xCED JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E7 JUMPI PUSH2 0x16E6 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0x16F3 DUP12 DUP3 DUP13 ADD PUSH2 0xEC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x171D JUMPI PUSH2 0x171C PUSH2 0xC61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172B DUP8 DUP3 DUP9 ADD PUSH2 0xC90 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x173C DUP8 DUP3 DUP9 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x174D DUP8 DUP3 DUP9 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x175E DUP8 DUP3 DUP9 ADD PUSH2 0x136B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x1790 JUMPI PUSH2 0x178F PUSH2 0xC61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x179E DUP15 DUP3 DUP16 ADD PUSH2 0xC90 JUMP JUMPDEST SWAP12 POP POP PUSH1 0x20 PUSH2 0x17AF DUP15 DUP3 DUP16 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP11 POP POP PUSH1 0x40 PUSH2 0x17C0 DUP15 DUP3 DUP16 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP10 POP POP PUSH1 0x60 PUSH2 0x17D1 DUP15 DUP3 DUP16 ADD PUSH2 0x136B JUMP JUMPDEST SWAP9 POP POP PUSH1 0x80 PUSH2 0x17E2 DUP15 DUP3 DUP16 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP8 POP POP PUSH1 0xA0 PUSH2 0x17F3 DUP15 DUP3 DUP16 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP7 POP POP PUSH1 0xC0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1814 JUMPI PUSH2 0x1813 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0x1820 DUP15 DUP3 DUP16 ADD PUSH2 0xEC4 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xE0 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1841 JUMPI PUSH2 0x1840 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0x184D DUP15 DUP3 DUP16 ADD PUSH2 0xCED JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH2 0x100 DUP13 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1871 JUMPI PUSH2 0x1870 PUSH2 0xC66 JUMP JUMPDEST JUMPDEST PUSH2 0x187D DUP15 DUP3 DUP16 ADD PUSH2 0xCED JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH2 0x189B DUP2 PUSH2 0x1472 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1892 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18D5 JUMPI PUSH2 0x18D4 PUSH2 0xC61 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18E3 DUP7 DUP3 DUP8 ADD PUSH2 0xC90 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18F4 DUP7 DUP3 DUP8 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1905 DUP7 DUP3 DUP8 ADD PUSH2 0x149B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1985 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1998 JUMPI PUSH2 0x1997 PUSH2 0x193E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A2F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x1A39 DUP7 DUP4 PUSH2 0x19F2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A76 PUSH2 0x1A71 PUSH2 0x1A6C DUP5 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x1A51 JUMP JUMPDEST PUSH2 0xDD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A90 DUP4 PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x1AA4 PUSH2 0x1A9C DUP3 PUSH2 0x1A7D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x19FF JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1AB9 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x1AC4 DUP2 DUP5 DUP5 PUSH2 0x1A87 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AE8 JUMPI PUSH2 0x1ADD PUSH1 0x0 DUP3 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1ACA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B2D JUMPI PUSH2 0x1AFE DUP2 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x1B07 DUP5 PUSH2 0x19E2 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1B16 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1B2A PUSH2 0x1B22 DUP6 PUSH2 0x19E2 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1AC9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B50 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1B32 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B69 DUP4 DUP4 PUSH2 0x1B3F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B82 DUP3 PUSH2 0x10FA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B9B JUMPI PUSH2 0x1B9A PUSH2 0xD59 JUMP JUMPDEST JUMPDEST PUSH2 0x1BA5 DUP3 SLOAD PUSH2 0x196D JUMP JUMPDEST PUSH2 0x1BB0 DUP3 DUP3 DUP6 PUSH2 0x1AEC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1BE3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1BD1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1BDB DUP6 DUP3 PUSH2 0x1B5D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1BF1 DUP7 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C19 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BF4 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1C36 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1C32 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1B3F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0x4C DUP3 0xBB 0x4E PUSH16 0x9F60BF1CA4EB250222B364684D7EA711 0xC2 SWAP4 PUSH19 0x104D66B7D85A4D64736F6C6343000812003300 ","sourceMap":"97:2439:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2272:179;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;717:104;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;825:105;;;;;;;;;;;;;:::i;:::-;;456:121;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1494:258;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;934:98;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;581:132;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1881:231;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2116:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1036:454;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2455:79;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1756:121;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2272:179;2409:7;2418;2441:1;2444;2433:13;;;;2272:179;;;;;;;;;;:::o;717:104::-;772:7;794:15;:22;;;;787:29;;717:104;:::o;825:105::-;855:71;887:1;862:15;:22;;;;:26;855:71;;;898:15;:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;855:71;;;825:105::o;456:121::-;507:35;557:15;550:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:121;:::o;1494:258::-;;;;;;;;;;:::o;934:98::-;;;;:::o;581:132::-;642:33;;:::i;:::-;690:15;706:1;690:18;;;;;;;;:::i;:::-;;;;;;;;;;;;683:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;581:132;;;:::o;1881:231::-;;;;;;;;;:::o;2116:152::-;;;;;:::o;1036:454::-;1319:15;1347:132;;;;;;;;1374:11;1347:132;;;;;;1387:10;1347:132;;;;1399:10;1347:132;;;;1411:14;1347:132;;;;;;1427:9;1347:132;;;;1438:12;1347:132;;;;1452:3;;1347:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1457:11;1347:132;;;;1470:8;;1347:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1319:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;1036:454;;;;;;;;;;;:::o;2455:79::-;2497:7;2455:79;:::o;1756:121::-;1849:7;1756:121;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:27:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:89;370:7;410:6;403:5;399:18;388:29;;334:89;;;:::o;429:120::-;501:23;518:5;501:23;:::i;:::-;494:5;491:34;481:62;;539:1;536;529:12;481:62;429:120;:::o;555:137::-;600:5;638:6;625:20;616:29;;654:32;680:5;654:32;:::i;:::-;555:137;;;;:::o;698:86::-;733:7;773:4;766:5;762:16;751:27;;698:86;;;:::o;790:118::-;861:22;877:5;861:22;:::i;:::-;854:5;851:33;841:61;;898:1;895;888:12;841:61;790:118;:::o;914:135::-;958:5;996:6;983:20;974:29;;1012:31;1037:5;1012:31;:::i;:::-;914:135;;;;:::o;1055:117::-;1164:1;1161;1154:12;1178:117;1287:1;1284;1277:12;1301:117;1410:1;1407;1400:12;1437:552;1494:8;1504:6;1554:3;1547:4;1539:6;1535:17;1531:27;1521:122;;1562:79;;:::i;:::-;1521:122;1675:6;1662:20;1652:30;;1705:18;1697:6;1694:30;1691:117;;;1727:79;;:::i;:::-;1691:117;1841:4;1833:6;1829:17;1817:29;;1895:3;1887:4;1879:6;1875:17;1865:8;1861:32;1858:41;1855:128;;;1902:79;;:::i;:::-;1855:128;1437:552;;;;;:::o;1995:117::-;2104:1;2101;2094:12;2118:102;2159:6;2210:2;2206:7;2201:2;2194:5;2190:14;2186:28;2176:38;;2118:102;;;:::o;2226:180::-;2274:77;2271:1;2264:88;2371:4;2368:1;2361:15;2395:4;2392:1;2385:15;2412:281;2495:27;2517:4;2495:27;:::i;:::-;2487:6;2483:40;2625:6;2613:10;2610:22;2589:18;2577:10;2574:34;2571:62;2568:88;;;2636:18;;:::i;:::-;2568:88;2676:10;2672:2;2665:22;2455:238;2412:281;;:::o;2699:129::-;2733:6;2760:20;;:::i;:::-;2750:30;;2789:33;2817:4;2809:6;2789:33;:::i;:::-;2699:129;;;:::o;2834:117::-;2943:1;2940;2933:12;2957:77;2994:7;3023:5;3012:16;;2957:77;;;:::o;3040:122::-;3113:24;3131:5;3113:24;:::i;:::-;3106:5;3103:35;3093:63;;3152:1;3149;3142:12;3093:63;3040:122;:::o;3168:139::-;3214:5;3252:6;3239:20;3230:29;;3268:33;3295:5;3268:33;:::i;:::-;3168:139;;;;:::o;3313:117::-;3422:1;3419;3412:12;3436:307;3497:4;3587:18;3579:6;3576:30;3573:56;;;3609:18;;:::i;:::-;3573:56;3647:29;3669:6;3647:29;:::i;:::-;3639:37;;3731:4;3725;3721:15;3713:23;;3436:307;;;:::o;3749:146::-;3846:6;3841:3;3836;3823:30;3887:1;3878:6;3873:3;3869:16;3862:27;3749:146;;;:::o;3901:423::-;3978:5;4003:65;4019:48;4060:6;4019:48;:::i;:::-;4003:65;:::i;:::-;3994:74;;4091:6;4084:5;4077:21;4129:4;4122:5;4118:16;4167:3;4158:6;4153:3;4149:16;4146:25;4143:112;;;4174:79;;:::i;:::-;4143:112;4264:54;4311:6;4306:3;4301;4264:54;:::i;:::-;3984:340;3901:423;;;;;:::o;4343:338::-;4398:5;4447:3;4440:4;4432:6;4428:17;4424:27;4414:122;;4455:79;;:::i;:::-;4414:122;4572:6;4559:20;4597:78;4671:3;4663:6;4656:4;4648:6;4644:17;4597:78;:::i;:::-;4588:87;;4404:277;4343:338;;;;:::o;4725:933::-;4799:5;4843:4;4831:9;4826:3;4822:19;4818:30;4815:117;;;4851:79;;:::i;:::-;4815:117;4950:21;4966:4;4950:21;:::i;:::-;4941:30;;5039:1;5079:49;5124:3;5115:6;5104:9;5100:22;5079:49;:::i;:::-;5072:4;5065:5;5061:16;5054:75;4981:159;5210:2;5251:49;5296:3;5287:6;5276:9;5272:22;5251:49;:::i;:::-;5244:4;5237:5;5233:16;5226:75;5150:162;5408:2;5397:9;5393:18;5380:32;5439:18;5431:6;5428:30;5425:117;;;5461:79;;:::i;:::-;5425:117;5581:58;5635:3;5626:6;5615:9;5611:22;5581:58;:::i;:::-;5574:4;5567:5;5563:16;5556:84;5322:329;4725:933;;;;:::o;5664:1511::-;5803:6;5811;5819;5827;5835;5843;5851;5900:3;5888:9;5879:7;5875:23;5871:33;5868:120;;;5907:79;;:::i;:::-;5868:120;6027:1;6052:52;6096:7;6087:6;6076:9;6072:22;6052:52;:::i;:::-;6042:62;;5998:116;6153:2;6179:51;6222:7;6213:6;6202:9;6198:22;6179:51;:::i;:::-;6169:61;;6124:116;6307:2;6296:9;6292:18;6279:32;6338:18;6330:6;6327:30;6324:117;;;6360:79;;:::i;:::-;6324:117;6473:64;6529:7;6520:6;6509:9;6505:22;6473:64;:::i;:::-;6455:82;;;;6250:297;6614:2;6603:9;6599:18;6586:32;6645:18;6637:6;6634:30;6631:117;;;6667:79;;:::i;:::-;6631:117;6780:64;6836:7;6827:6;6816:9;6812:22;6780:64;:::i;:::-;6762:82;;;;6557:297;6921:3;6910:9;6906:19;6893:33;6953:18;6945:6;6942:30;6939:117;;;6975:79;;:::i;:::-;6939:117;7080:78;7150:7;7141:6;7130:9;7126:22;7080:78;:::i;:::-;7070:88;;6864:304;5664:1511;;;;;;;;;;:::o;7181:118::-;7268:24;7286:5;7268:24;:::i;:::-;7263:3;7256:37;7181:118;;:::o;7305:332::-;7426:4;7464:2;7453:9;7449:18;7441:26;;7477:71;7545:1;7534:9;7530:17;7521:6;7477:71;:::i;:::-;7558:72;7626:2;7615:9;7611:18;7602:6;7558:72;:::i;:::-;7305:332;;;;;:::o;7643:222::-;7736:4;7774:2;7763:9;7759:18;7751:26;;7787:71;7855:1;7844:9;7840:17;7831:6;7787:71;:::i;:::-;7643:222;;;;:::o;7871:158::-;7982:6;8016:5;8010:12;8000:22;;7871:158;;;:::o;8035:228::-;8178:11;8212:6;8207:3;8200:19;8252:4;8247:3;8243:14;8228:29;;8035:228;;;;:::o;8269:176::-;8380:4;8403:3;8395:11;;8433:4;8428:3;8424:14;8416:22;;8269:176;;;:::o;8451:105::-;8526:23;8543:5;8526:23;:::i;:::-;8521:3;8514:36;8451:105;;:::o;8562:108::-;8639:24;8657:5;8639:24;:::i;:::-;8634:3;8627:37;8562:108;;:::o;8676:126::-;8713:7;8753:42;8746:5;8742:54;8731:65;;8676:126;;;:::o;8808:104::-;8853:7;8882:24;8900:5;8882:24;:::i;:::-;8871:35;;8808:104;;;:::o;8918:132::-;9011:32;9037:5;9011:32;:::i;:::-;9006:3;8999:45;8918:132;;:::o;9056:98::-;9107:6;9141:5;9135:12;9125:22;;9056:98;;;:::o;9160:158::-;9233:11;9267:6;9262:3;9255:19;9307:4;9302:3;9298:14;9283:29;;9160:158;;;;:::o;9324:246::-;9405:1;9415:113;9429:6;9426:1;9423:13;9415:113;;;9514:1;9509:3;9505:11;9499:18;9495:1;9490:3;9486:11;9479:39;9451:2;9448:1;9444:10;9439:15;;9415:113;;;9562:1;9553:6;9548:3;9544:16;9537:27;9386:184;9324:246;;;:::o;9576:353::-;9652:3;9680:38;9712:5;9680:38;:::i;:::-;9734:60;9787:6;9782:3;9734:60;:::i;:::-;9727:67;;9803:65;9861:6;9856:3;9849:4;9842:5;9838:16;9803:65;:::i;:::-;9893:29;9915:6;9893:29;:::i;:::-;9888:3;9884:39;9877:46;;9656:273;9576:353;;;;:::o;10007:797::-;10116:3;10152:4;10147:3;10143:14;10248:4;10241:5;10237:16;10231:23;10267:63;10324:4;10319:3;10315:14;10301:12;10267:63;:::i;:::-;10167:173;10433:4;10426:5;10422:16;10416:23;10452:63;10509:4;10504:3;10500:14;10486:12;10452:63;:::i;:::-;10350:175;10616:4;10609:5;10605:16;10599:23;10669:3;10663:4;10659:14;10652:4;10647:3;10643:14;10636:38;10695:71;10761:4;10747:12;10695:71;:::i;:::-;10687:79;;10535:242;10794:4;10787:11;;10121:683;10007:797;;;;:::o;10926:2082::-;11073:3;11109:6;11104:3;11100:16;11204:4;11197:5;11193:16;11187:23;11223:61;11278:4;11273:3;11269:14;11255:12;11223:61;:::i;:::-;11126:168;11381:4;11374:5;11370:16;11364:23;11400:63;11457:4;11452:3;11448:14;11434:12;11400:63;:::i;:::-;11304:169;11560:4;11553:5;11549:16;11543:23;11579:63;11636:4;11631:3;11627:14;11613:12;11579:63;:::i;:::-;11483:169;11743:4;11736:5;11732:16;11726:23;11762:79;11835:4;11830:3;11826:14;11812:12;11762:79;:::i;:::-;11662:189;11935:4;11928:5;11924:16;11918:23;11954:63;12011:4;12006:3;12002:14;11988:12;11954:63;:::i;:::-;11861:166;12117:4;12110:5;12106:16;12100:23;12136:63;12193:4;12188:3;12184:14;12170:12;12136:63;:::i;:::-;12037:172;12289:4;12282:5;12278:16;12272:23;12342:3;12336:4;12332:14;12325:4;12320:3;12316:14;12309:38;12368:71;12434:4;12420:12;12368:71;:::i;:::-;12360:79;;12219:231;12538:4;12531:5;12527:16;12521:23;12591:3;12585:4;12581:14;12574:4;12569:3;12565:14;12558:38;12617:103;12715:4;12701:12;12617:103;:::i;:::-;12609:111;;12460:271;12816:6;12809:5;12805:18;12799:25;12873:3;12867:4;12863:14;12854:6;12849:3;12845:16;12838:40;12899:71;12965:4;12951:12;12899:71;:::i;:::-;12891:79;;12741:240;12998:4;12991:11;;11078:1930;10926:2082;;;;:::o;13014:332::-;13171:10;13206:134;13336:3;13328:6;13206:134;:::i;:::-;13192:148;;13014:332;;;;:::o;13352:157::-;13466:4;13498;13493:3;13489:14;13481:22;;13352:157;;;:::o;13635:1263::-;13842:3;13871:98;13963:5;13871:98;:::i;:::-;13985:130;14108:6;14103:3;13985:130;:::i;:::-;13978:137;;14141:3;14186:4;14178:6;14174:17;14169:3;14165:27;14216:100;14310:5;14216:100;:::i;:::-;14339:7;14370:1;14355:498;14380:6;14377:1;14374:13;14355:498;;;14451:9;14445:4;14441:20;14436:3;14429:33;14502:6;14496:13;14530:152;14677:4;14662:13;14530:152;:::i;:::-;14522:160;;14705:104;14802:6;14705:104;:::i;:::-;14695:114;;14838:4;14833:3;14829:14;14822:21;;14415:438;14402:1;14399;14395:9;14390:14;;14355:498;;;14359:14;14869:4;14862:11;;14889:3;14882:10;;13847:1051;;;;;13635:1263;;;;:::o;14904:549::-;15135:4;15173:2;15162:9;15158:18;15150:26;;15222:9;15216:4;15212:20;15208:1;15197:9;15193:17;15186:47;15250:196;15441:4;15432:6;15250:196;:::i;:::-;15242:204;;14904:549;;;;:::o;15459:138::-;15540:32;15566:5;15540:32;:::i;:::-;15533:5;15530:43;15520:71;;15587:1;15584;15577:12;15520:71;15459:138;:::o;15603:155::-;15657:5;15695:6;15682:20;15673:29;;15711:41;15746:5;15711:41;:::i;:::-;15603:155;;;;:::o;15764:1771::-;15929:6;15937;15945;15953;15961;15969;15977;15985;15993;16042:3;16030:9;16021:7;16017:23;16013:33;16010:120;;;16049:79;;:::i;:::-;16010:120;16169:1;16194:52;16238:7;16229:6;16218:9;16214:22;16194:52;:::i;:::-;16184:62;;16140:116;16295:2;16321:53;16366:7;16357:6;16346:9;16342:22;16321:53;:::i;:::-;16311:63;;16266:118;16423:2;16449:53;16494:7;16485:6;16474:9;16470:22;16449:53;:::i;:::-;16439:63;;16394:118;16551:2;16577:61;16630:7;16621:6;16610:9;16606:22;16577:61;:::i;:::-;16567:71;;16522:126;16687:3;16714:53;16759:7;16750:6;16739:9;16735:22;16714:53;:::i;:::-;16704:63;;16658:119;16816:3;16843:53;16888:7;16879:6;16868:9;16864:22;16843:53;:::i;:::-;16833:63;;16787:119;16973:3;16962:9;16958:19;16945:33;17005:18;16997:6;16994:30;16991:117;;;17027:79;;:::i;:::-;16991:117;17140:64;17196:7;17187:6;17176:9;17172:22;17140:64;:::i;:::-;17122:82;;;;16916:298;17281:3;17270:9;17266:19;17253:33;17313:18;17305:6;17302:30;17299:117;;;17335:79;;:::i;:::-;17299:117;17440:78;17510:7;17501:6;17490:9;17486:22;17440:78;:::i;:::-;17430:88;;17224:304;15764:1771;;;;;;;;;;;:::o;17541:96::-;17578:7;17607:24;17625:5;17607:24;:::i;:::-;17596:35;;17541:96;;;:::o;17643:122::-;17716:24;17734:5;17716:24;:::i;:::-;17709:5;17706:35;17696:63;;17755:1;17752;17745:12;17696:63;17643:122;:::o;17771:139::-;17817:5;17855:6;17842:20;17833:29;;17871:33;17898:5;17871:33;:::i;:::-;17771:139;;;;:::o;17916:619::-;17993:6;18001;18009;18058:2;18046:9;18037:7;18033:23;18029:32;18026:119;;;18064:79;;:::i;:::-;18026:119;18184:1;18209:53;18254:7;18245:6;18234:9;18230:22;18209:53;:::i;:::-;18199:63;;18155:117;18311:2;18337:53;18382:7;18373:6;18362:9;18358:22;18337:53;:::i;:::-;18327:63;;18282:118;18439:2;18465:53;18510:7;18501:6;18490:9;18486:22;18465:53;:::i;:::-;18455:63;;18410:118;17916:619;;;;;:::o;18541:329::-;18600:6;18649:2;18637:9;18628:7;18624:23;18620:32;18617:119;;;18655:79;;:::i;:::-;18617:119;18775:1;18800:53;18845:7;18836:6;18825:9;18821:22;18800:53;:::i;:::-;18790:63;;18746:117;18541:329;;;;:::o;18992:2092::-;19149:3;19185:6;19180:3;19176:16;19280:4;19273:5;19269:16;19263:23;19299:61;19354:4;19349:3;19345:14;19331:12;19299:61;:::i;:::-;19202:168;19457:4;19450:5;19446:16;19440:23;19476:63;19533:4;19528:3;19524:14;19510:12;19476:63;:::i;:::-;19380:169;19636:4;19629:5;19625:16;19619:23;19655:63;19712:4;19707:3;19703:14;19689:12;19655:63;:::i;:::-;19559:169;19819:4;19812:5;19808:16;19802:23;19838:79;19911:4;19906:3;19902:14;19888:12;19838:79;:::i;:::-;19738:189;20011:4;20004:5;20000:16;19994:23;20030:63;20087:4;20082:3;20078:14;20064:12;20030:63;:::i;:::-;19937:166;20193:4;20186:5;20182:16;20176:23;20212:63;20269:4;20264:3;20260:14;20246:12;20212:63;:::i;:::-;20113:172;20365:4;20358:5;20354:16;20348:23;20418:3;20412:4;20408:14;20401:4;20396:3;20392:14;20385:38;20444:71;20510:4;20496:12;20444:71;:::i;:::-;20436:79;;20295:231;20614:4;20607:5;20603:16;20597:23;20667:3;20661:4;20657:14;20650:4;20645:3;20641:14;20634:38;20693:103;20791:4;20777:12;20693:103;:::i;:::-;20685:111;;20536:271;20892:6;20885:5;20881:18;20875:25;20949:3;20943:4;20939:14;20930:6;20925:3;20921:16;20914:40;20975:71;21041:4;21027:12;20975:71;:::i;:::-;20967:79;;20817:240;21074:4;21067:11;;19154:1930;18992:2092;;;;:::o;21090:449::-;21271:4;21309:2;21298:9;21294:18;21286:26;;21358:9;21352:4;21348:20;21344:1;21333:9;21329:17;21322:47;21386:146;21527:4;21518:6;21386:146;:::i;:::-;21378:154;;21090:449;;;;:::o;21545:1625::-;21701:6;21709;21717;21725;21733;21741;21749;21757;21806:3;21794:9;21785:7;21781:23;21777:33;21774:120;;;21813:79;;:::i;:::-;21774:120;21933:1;21958:52;22002:7;21993:6;21982:9;21978:22;21958:52;:::i;:::-;21948:62;;21904:116;22059:2;22085:53;22130:7;22121:6;22110:9;22106:22;22085:53;:::i;:::-;22075:63;;22030:118;22187:2;22213:53;22258:7;22249:6;22238:9;22234:22;22213:53;:::i;:::-;22203:63;;22158:118;22315:2;22341:61;22394:7;22385:6;22374:9;22370:22;22341:61;:::i;:::-;22331:71;;22286:126;22451:3;22478:53;22523:7;22514:6;22503:9;22499:22;22478:53;:::i;:::-;22468:63;;22422:119;22608:3;22597:9;22593:19;22580:33;22640:18;22632:6;22629:30;22626:117;;;22662:79;;:::i;:::-;22626:117;22775:64;22831:7;22822:6;22811:9;22807:22;22775:64;:::i;:::-;22757:82;;;;22551:298;22916:3;22905:9;22901:19;22888:33;22948:18;22940:6;22937:30;22934:117;;;22970:79;;:::i;:::-;22934:117;23075:78;23145:7;23136:6;23125:9;23121:22;23075:78;:::i;:::-;23065:88;;22859:304;21545:1625;;;;;;;;;;;:::o;23176:779::-;23269:6;23277;23285;23293;23342:3;23330:9;23321:7;23317:23;23313:33;23310:120;;;23349:79;;:::i;:::-;23310:120;23469:1;23494:52;23538:7;23529:6;23518:9;23514:22;23494:52;:::i;:::-;23484:62;;23440:116;23595:2;23621:53;23666:7;23657:6;23646:9;23642:22;23621:53;:::i;:::-;23611:63;;23566:118;23723:2;23749:53;23794:7;23785:6;23774:9;23770:22;23749:53;:::i;:::-;23739:63;;23694:118;23851:2;23877:61;23930:7;23921:6;23910:9;23906:22;23877:61;:::i;:::-;23867:71;;23822:126;23176:779;;;;;;;:::o;23961:2117::-;24146:6;24154;24162;24170;24178;24186;24194;24202;24210;24218;24226:7;24276:3;24264:9;24255:7;24251:23;24247:33;24244:120;;;24283:79;;:::i;:::-;24244:120;24403:1;24428:52;24472:7;24463:6;24452:9;24448:22;24428:52;:::i;:::-;24418:62;;24374:116;24529:2;24555:53;24600:7;24591:6;24580:9;24576:22;24555:53;:::i;:::-;24545:63;;24500:118;24657:2;24683:53;24728:7;24719:6;24708:9;24704:22;24683:53;:::i;:::-;24673:63;;24628:118;24785:2;24811:61;24864:7;24855:6;24844:9;24840:22;24811:61;:::i;:::-;24801:71;;24756:126;24921:3;24948:53;24993:7;24984:6;24973:9;24969:22;24948:53;:::i;:::-;24938:63;;24892:119;25050:3;25077:53;25122:7;25113:6;25102:9;25098:22;25077:53;:::i;:::-;25067:63;;25021:119;25207:3;25196:9;25192:19;25179:33;25239:18;25231:6;25228:30;25225:117;;;25261:79;;:::i;:::-;25225:117;25366:78;25436:7;25427:6;25416:9;25412:22;25366:78;:::i;:::-;25356:88;;25150:304;25521:3;25510:9;25506:19;25493:33;25553:18;25545:6;25542:30;25539:117;;;25575:79;;:::i;:::-;25539:117;25688:64;25744:7;25735:6;25724:9;25720:22;25688:64;:::i;:::-;25670:82;;;;25464:298;25829:3;25818:9;25814:19;25801:33;25861:18;25853:6;25850:30;25847:117;;;25883:79;;:::i;:::-;25847:117;25997:64;26053:7;26044:6;26033:9;26029:22;25997:64;:::i;:::-;25978:83;;;;25772:299;23961:2117;;;;;;;;;;;;;;:::o;26084:118::-;26171:24;26189:5;26171:24;:::i;:::-;26166:3;26159:37;26084:118;;:::o;26208:222::-;26301:4;26339:2;26328:9;26324:18;26316:26;;26352:71;26420:1;26409:9;26405:17;26396:6;26352:71;:::i;:::-;26208:222;;;;:::o;26436:617::-;26512:6;26520;26528;26577:2;26565:9;26556:7;26552:23;26548:32;26545:119;;;26583:79;;:::i;:::-;26545:119;26703:1;26728:52;26772:7;26763:6;26752:9;26748:22;26728:52;:::i;:::-;26718:62;;26674:116;26829:2;26855:53;26900:7;26891:6;26880:9;26876:22;26855:53;:::i;:::-;26845:63;;26800:118;26957:2;26983:53;27028:7;27019:6;27008:9;27004:22;26983:53;:::i;:::-;26973:63;;26928:118;26436:617;;;;;:::o;27059:180::-;27107:77;27104:1;27097:88;27204:4;27201:1;27194:15;27228:4;27225:1;27218:15;27245:180;27293:77;27290:1;27283:88;27390:4;27387:1;27380:15;27414:4;27411:1;27404:15;27431:320;27475:6;27512:1;27506:4;27502:12;27492:22;;27559:1;27553:4;27549:12;27580:18;27570:81;;27636:4;27628:6;27624:17;27614:27;;27570:81;27698:2;27690:6;27687:14;27667:18;27664:38;27661:84;;27717:18;;:::i;:::-;27661:84;27482:269;27431:320;;;:::o;27757:180::-;27805:77;27802:1;27795:88;27902:4;27899:1;27892:15;27926:4;27923:1;27916:15;27943:140;27991:4;28014:3;28006:11;;28037:3;28034:1;28027:14;28071:4;28068:1;28058:18;28050:26;;27943:140;;;:::o;28089:93::-;28126:6;28173:2;28168;28161:5;28157:14;28153:23;28143:33;;28089:93;;;:::o;28188:107::-;28232:8;28282:5;28276:4;28272:16;28251:37;;28188:107;;;;:::o;28301:393::-;28370:6;28420:1;28408:10;28404:18;28443:97;28473:66;28462:9;28443:97;:::i;:::-;28561:39;28591:8;28580:9;28561:39;:::i;:::-;28549:51;;28633:4;28629:9;28622:5;28618:21;28609:30;;28682:4;28672:8;28668:19;28661:5;28658:30;28648:40;;28377:317;;28301:393;;;;;:::o;28700:60::-;28728:3;28749:5;28742:12;;28700:60;;;:::o;28766:142::-;28816:9;28849:53;28867:34;28876:24;28894:5;28876:24;:::i;:::-;28867:34;:::i;:::-;28849:53;:::i;:::-;28836:66;;28766:142;;;:::o;28914:75::-;28957:3;28978:5;28971:12;;28914:75;;;:::o;28995:269::-;29105:39;29136:7;29105:39;:::i;:::-;29166:91;29215:41;29239:16;29215:41;:::i;:::-;29207:6;29200:4;29194:11;29166:91;:::i;:::-;29160:4;29153:105;29071:193;28995:269;;;:::o;29270:73::-;29315:3;29270:73;:::o;29349:189::-;29426:32;;:::i;:::-;29467:65;29525:6;29517;29511:4;29467:65;:::i;:::-;29402:136;29349:189;;:::o;29544:186::-;29604:120;29621:3;29614:5;29611:14;29604:120;;;29675:39;29712:1;29705:5;29675:39;:::i;:::-;29648:1;29641:5;29637:13;29628:22;;29604:120;;;29544:186;;:::o;29736:541::-;29836:2;29831:3;29828:11;29825:445;;;29870:37;29901:5;29870:37;:::i;:::-;29953:29;29971:10;29953:29;:::i;:::-;29943:8;29939:44;30136:2;30124:10;30121:18;30118:49;;;30157:8;30142:23;;30118:49;30180:80;30236:22;30254:3;30236:22;:::i;:::-;30226:8;30222:37;30209:11;30180:80;:::i;:::-;29840:430;;29825:445;29736:541;;;:::o;30283:117::-;30337:8;30387:5;30381:4;30377:16;30356:37;;30283:117;;;;:::o;30406:169::-;30450:6;30483:51;30531:1;30527:6;30519:5;30516:1;30512:13;30483:51;:::i;:::-;30479:56;30564:4;30558;30554:15;30544:25;;30457:118;30406:169;;;;:::o;30580:295::-;30656:4;30802:29;30827:3;30821:4;30802:29;:::i;:::-;30794:37;;30864:3;30861:1;30857:11;30851:4;30848:21;30840:29;;30580:295;;;;:::o;30880:1390::-;30995:36;31027:3;30995:36;:::i;:::-;31096:18;31088:6;31085:30;31082:56;;;31118:18;;:::i;:::-;31082:56;31162:38;31194:4;31188:11;31162:38;:::i;:::-;31247:66;31306:6;31298;31292:4;31247:66;:::i;:::-;31340:1;31364:4;31351:17;;31396:2;31388:6;31385:14;31413:1;31408:617;;;;32069:1;32086:6;32083:77;;;32135:9;32130:3;32126:19;32120:26;32111:35;;32083:77;32186:67;32246:6;32239:5;32186:67;:::i;:::-;32180:4;32173:81;32042:222;31378:886;;31408:617;31460:4;31456:9;31448:6;31444:22;31494:36;31525:4;31494:36;:::i;:::-;31552:1;31566:208;31580:7;31577:1;31574:14;31566:208;;;31659:9;31654:3;31650:19;31644:26;31636:6;31629:42;31710:1;31702:6;31698:14;31688:24;;31757:2;31746:9;31742:18;31729:31;;31603:4;31600:1;31596:12;31591:17;;31566:208;;;31802:6;31793:7;31790:19;31787:179;;;31860:9;31855:3;31851:19;31845:26;31903:48;31945:4;31937:6;31933:17;31922:9;31903:48;:::i;:::-;31895:6;31888:64;31810:156;31787:179;32012:1;32008;32000:6;31996:14;31992:22;31986:4;31979:36;31415:610;;;31378:886;;30970:1300;;;30880:1390;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1459400","executionCost":"1527","totalCost":"1460927"},"external":{"addLiquidity(uint256,uint256,address)":"infinite","clear()":"infinite","factory()":"466","getSwapInvocationAt(uint256)":"infinite","getSwapInvocationCount()":"2468","getSwapInvocations()":"infinite","instantRedeemLocal(uint16,uint256,address)":"infinite","quoteLayerZeroFee(uint16,uint8,bytes,bytes,(uint256,uint256,bytes))":"infinite","redeemLocal(uint16,uint256,uint256,address,uint256,bytes,(uint256,uint256,bytes))":"infinite","redeemRemote(uint16,uint256,uint256,address,uint256,uint256,bytes,(uint256,uint256,bytes))":"infinite","sendCredits(uint16,uint256,uint256,address)":"infinite","swap(uint16,uint256,uint256,address,uint256,uint256,(uint256,uint256,bytes),bytes,bytes)":"infinite"}},"methodIdentifiers":{"addLiquidity(uint256,uint256,address)":"87b21efc","clear()":"52efea6e","factory()":"c45a0155","getSwapInvocationAt(uint256)":"8b68be29","getSwapInvocationCount()":"17293c87","getSwapInvocations()":"61790431","instantRedeemLocal(uint16,uint256,address)":"c4de93a5","quoteLayerZeroFee(uint16,uint8,bytes,bytes,(uint256,uint256,bytes))":"0a512369","redeemLocal(uint16,uint256,uint256,address,uint256,bytes,(uint256,uint256,bytes))":"8f2e1d18","redeemRemote(uint16,uint256,uint256,address,uint256,uint256,bytes,(uint256,uint256,bytes))":"84d0dba3","sendCredits(uint16,uint256,uint256,address)":"9ba3aa74","swap(uint16,uint256,uint256,address,uint256,uint256,(uint256,uint256,bytes),bytes,bytes)":"9fbf10fc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getSwapInvocationAt\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"srcPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"to\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct IStargateRouter.lzTxObj\",\"name\":\"lzTxParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct MockStargateRouter.MockStargateRouterSwapArgs\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapInvocationCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapInvocations\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"srcPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"to\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct IStargateRouter.lzTxObj\",\"name\":\"lzTxParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct MockStargateRouter.MockStargateRouterSwapArgs[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"instantRedeemLocal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct IStargateRouter.lzTxObj\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"quoteLayerZeroFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_srcPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountLP\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_to\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct IStargateRouter.lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"}],\"name\":\"redeemLocal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_srcPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minAmountLD\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_to\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct IStargateRouter.lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"}],\"name\":\"redeemRemote\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_srcPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"}],\"name\":\"sendCredits\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_srcPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minAmountLD\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct IStargateRouter.lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_to\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockStargateRouter.sol\":\"MockStargateRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IStargateRouter.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.13;\\n\\n// abicoder v2 is enabled by default: https://docs.soliditylang.org/en/v0.8.0/080-breaking-changes.html\\n// pragma abicoder v2;\\n\\ninterface IStargateRouter {\\n  function factory() external view returns (address);\\n\\n  struct lzTxObj {\\n    uint256 dstGasForCall;\\n    uint256 dstNativeAmount;\\n    bytes dstNativeAddr;\\n  }\\n\\n  function addLiquidity(\\n    uint256 _poolId,\\n    uint256 _amountLD,\\n    address _to\\n  ) external;\\n\\n  function swap(\\n    uint16 _dstChainId,\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    address payable _refundAddress,\\n    uint256 _amountLD,\\n    uint256 _minAmountLD,\\n    lzTxObj memory _lzTxParams,\\n    bytes calldata _to,\\n    bytes calldata _payload\\n  ) external payable;\\n\\n  function redeemRemote(\\n    uint16 _dstChainId,\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    address payable _refundAddress,\\n    uint256 _amountLP,\\n    uint256 _minAmountLD,\\n    bytes calldata _to,\\n    lzTxObj memory _lzTxParams\\n  ) external payable;\\n\\n  function instantRedeemLocal(\\n    uint16 _srcPoolId,\\n    uint256 _amountLP,\\n    address _to\\n  ) external returns (uint256);\\n\\n  function redeemLocal(\\n    uint16 _dstChainId,\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    address payable _refundAddress,\\n    uint256 _amountLP,\\n    bytes calldata _to,\\n    lzTxObj memory _lzTxParams\\n  ) external payable;\\n\\n  function sendCredits(\\n    uint16 _dstChainId,\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    address payable _refundAddress\\n  ) external payable;\\n\\n  function quoteLayerZeroFee(\\n    uint16 _dstChainId,\\n    uint8 _functionType,\\n    bytes calldata _toAddress,\\n    bytes calldata _transferAndCallPayload,\\n    lzTxObj memory _lzTxParams\\n  ) external view returns (uint256, uint256);\\n}\\n\",\"keccak256\":\"0xb2cc74a6db000da1443cc79d48c843f57e233a4dfd542bbce3a43748fffae32a\",\"license\":\"BUSL-1.1\"},\"contracts/MockStargateRouter.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.13;\\n\\nimport './IStargateRouter.sol';\\n\\ncontract MockStargateRouter is IStargateRouter {\\n  struct MockStargateRouterSwapArgs {\\n    uint16 dstChainId;\\n    uint256 srcPoolId;\\n    uint256 dstPoolId;\\n    address payable refundAddress;\\n    uint256 amount;\\n    uint256 minAmountOut;\\n    bytes to;\\n    lzTxObj lzTxParams;\\n    bytes payload;\\n  }\\n\\n  MockStargateRouterSwapArgs[] internal swapInvocations;\\n\\n  function getSwapInvocations() public view returns (MockStargateRouterSwapArgs[] memory) {\\n    return swapInvocations;\\n  }\\n\\n  function getSwapInvocationAt(uint256 i) public view returns (MockStargateRouterSwapArgs memory) {\\n    return swapInvocations[i];\\n  }\\n\\n  function getSwapInvocationCount() public view returns (uint256) {\\n    return swapInvocations.length;\\n  }\\n\\n  function clear() public {\\n    while (swapInvocations.length > 0) {\\n      swapInvocations.pop();\\n    }\\n  }\\n\\n  function addLiquidity(\\n    uint256 _poolId,\\n    uint256 _amountLD,\\n    address _to\\n  ) external {}\\n\\n  function swap(\\n    uint16 _dstChainId,\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    address payable _refundAddress,\\n    uint256 _amountLD,\\n    uint256 _minAmountLD,\\n    lzTxObj memory _lzTxParams,\\n    bytes calldata _to,\\n    bytes calldata _payload\\n  ) external payable {\\n    swapInvocations.push(\\n      MockStargateRouterSwapArgs(_dstChainId, _srcPoolId, _dstPoolId, _refundAddress, _amountLD, _minAmountLD, _to, _lzTxParams, _payload)\\n    );\\n  }\\n\\n  function redeemRemote(\\n    uint16 _dstChainId,\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    address payable _refundAddress,\\n    uint256 _amountLP,\\n    uint256 _minAmountLD,\\n    bytes calldata _to,\\n    lzTxObj memory _lzTxParams\\n  ) external payable {}\\n\\n  function instantRedeemLocal(\\n    uint16,\\n    uint256,\\n    address\\n  ) external pure returns (uint256) {\\n    return 0;\\n  }\\n\\n  function redeemLocal(\\n    uint16 _dstChainId,\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    address payable _refundAddress,\\n    uint256 _amountLP,\\n    bytes calldata _to,\\n    lzTxObj memory _lzTxParams\\n  ) external payable {}\\n\\n  function sendCredits(\\n    uint16 _dstChainId,\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    address payable _refundAddress\\n  ) external payable {}\\n\\n  function quoteLayerZeroFee(\\n    uint16,\\n    uint8,\\n    bytes calldata,\\n    bytes calldata,\\n    lzTxObj memory\\n  ) external pure returns (uint256, uint256) {\\n    return (0, 0);\\n  }\\n\\n  function factory() external pure returns (address) {\\n    return address(0);\\n  }\\n}\\n\",\"keccak256\":\"0xd6a438ae6013beda5f253eb64185babfc53cbe02cc1db5036ccabd43ec640a54\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2133,"contract":"contracts/MockStargateRouter.sol:MockStargateRouter","label":"swapInvocations","offset":0,"slot":"0","type":"t_array(t_struct(MockStargateRouterSwapArgs)2129_storage)dyn_storage"}],"types":{"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_struct(MockStargateRouterSwapArgs)2129_storage)dyn_storage":{"base":"t_struct(MockStargateRouterSwapArgs)2129_storage","encoding":"dynamic_array","label":"struct MockStargateRouter.MockStargateRouterSwapArgs[]","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_struct(MockStargateRouterSwapArgs)2129_storage":{"encoding":"inplace","label":"struct MockStargateRouter.MockStargateRouterSwapArgs","members":[{"astId":2111,"contract":"contracts/MockStargateRouter.sol:MockStargateRouter","label":"dstChainId","offset":0,"slot":"0","type":"t_uint16"},{"astId":2113,"contract":"contracts/MockStargateRouter.sol:MockStargateRouter","label":"srcPoolId","offset":0,"slot":"1","type":"t_uint256"},{"astId":2115,"contract":"contracts/MockStargateRouter.sol:MockStargateRouter","label":"dstPoolId","offset":0,"slot":"2","type":"t_uint256"},{"astId":2117,"contract":"contracts/MockStargateRouter.sol:MockStargateRouter","label":"refundAddress","offset":0,"slot":"3","type":"t_address_payable"},{"astId":2119,"contract":"contracts/MockStargateRouter.sol:MockStargateRouter","label":"amount","offset":0,"slot":"4","type":"t_uint256"},{"astId":2121,"contract":"contracts/MockStargateRouter.sol:MockStargateRouter","label":"minAmountOut","offset":0,"slot":"5","type":"t_uint256"},{"astId":2123,"contract":"contracts/MockStargateRouter.sol:MockStargateRouter","label":"to","offset":0,"slot":"6","type":"t_bytes_storage"},{"astId":2126,"contract":"contracts/MockStargateRouter.sol:MockStargateRouter","label":"lzTxParams","offset":0,"slot":"7","type":"t_struct(lzTxObj)1994_storage"},{"astId":2128,"contract":"contracts/MockStargateRouter.sol:MockStargateRouter","label":"payload","offset":0,"slot":"10","type":"t_bytes_storage"}],"numberOfBytes":"352"},"t_struct(lzTxObj)1994_storage":{"encoding":"inplace","label":"struct IStargateRouter.lzTxObj","members":[{"astId":1989,"contract":"contracts/MockStargateRouter.sol:MockStargateRouter","label":"dstGasForCall","offset":0,"slot":"0","type":"t_uint256"},{"astId":1991,"contract":"contracts/MockStargateRouter.sol:MockStargateRouter","label":"dstNativeAmount","offset":0,"slot":"1","type":"t_uint256"},{"astId":1993,"contract":"contracts/MockStargateRouter.sol:MockStargateRouter","label":"dstNativeAddr","offset":0,"slot":"2","type":"t_bytes_storage"}],"numberOfBytes":"96"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/StargateBridgeAction.sol":{"StargateBridgeAction":{"abi":[{"inputs":[{"internalType":"address","name":"_frontDoorAddress","type":"address"},{"internalType":"address","name":"_stargateRouterAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"components":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"components":[{"internalType":"address","name":"workflowRunnerAddress","type":"address"},{"components":[{"internalType":"uint16","name":"stepTypeId","type":"uint16"},{"internalType":"address","name":"stepAddress","type":"address"},{"components":[{"internalType":"bool","name":"sourceIsCaller","type":"bool"},{"internalType":"bool","name":"amountIsPercent","type":"bool"},{"components":[{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"}],"internalType":"struct Asset","name":"asset","type":"tuple"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct WorkflowStepInputAsset[]","name":"inputAssets","type":"tuple[]"},{"internalType":"bytes","name":"argData","type":"bytes"},{"internalType":"int16","name":"nextStepIndex","type":"int16"}],"internalType":"struct WorkflowStep[]","name":"steps","type":"tuple[]"}],"internalType":"struct Workflow","name":"workflow","type":"tuple"}],"indexed":false,"internalType":"struct BridgePayload","name":"bridgePayload","type":"tuple"}],"name":"SgReceiveCalled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"nativeAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"assetAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"dstActionAddress","type":"address"},{"indexed":false,"internalType":"uint16","name":"dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"srcPoolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"dstPoolId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"dstGasForCall","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"dstNativeAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"minAmountOut","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"continuationWorkflow","type":"bytes"}],"name":"StargateBridgeParamsEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"stepType","type":"string"},{"indexed":false,"internalType":"uint16","name":"targetChain","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"components":[{"components":[{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"}],"internalType":"struct Asset","name":"asset","type":"tuple"},{"internalType":"uint256","name":"amount","type":"uint256"}],"indexed":false,"internalType":"struct AssetAmount[]","name":"expectedAssets","type":"tuple[]"},{"indexed":false,"internalType":"bytes","name":"continuationWorkflow","type":"bytes"}],"name":"WorkflowBridged","type":"event"},{"inputs":[{"components":[{"components":[{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"}],"internalType":"struct Asset","name":"asset","type":"tuple"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct AssetAmount[]","name":"inputAssetAmounts","type":"tuple[]"},{"internalType":"bytes","name":"argData","type":"bytes"}],"name":"execute","outputs":[{"components":[{"components":[{"components":[{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"}],"internalType":"struct Asset","name":"asset","type":"tuple"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct AssetAmount[]","name":"inputAssetAmounts","type":"tuple[]"},{"components":[{"components":[{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"}],"internalType":"struct Asset","name":"asset","type":"tuple"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct AssetAmount[]","name":"outputAssetAmounts","type":"tuple[]"},{"internalType":"int16","name":"nextStepIndex","type":"int16"},{"internalType":"int24","name":"fee","type":"int24"}],"internalType":"struct WorkflowStepResult","name":"","type":"tuple"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"frontDoorAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"payload","type":"bytes"}],"name":"sgReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stargateRouterAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"events":{"SgReceiveCalled(address,uint256,(address,uint256,(address,(uint16,address,(bool,bool,(uint8,address),uint256)[],bytes,int16)[])))":{"params":{"bridgePayload":"the payload that was sent along with the erc20.","tokenAddress":"the address of the erc20 that was transfered from the source chain to this chain.abi"}}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2428":{"entryPoint":null,"id":2428,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":250,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":273,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":204,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":172,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":167,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":224,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1355:27","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:27","statements":[{"nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:27"},"nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:27"},"nodeType":"YulFunctionCall","src":"187:12:27"},"nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:27"},"nodeType":"YulFunctionCall","src":"310:12:27"},"nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nodeType":"YulBlock","src":"379:81:27","statements":[{"nodeType":"YulAssignment","src":"389:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:27"},"nodeType":"YulFunctionCall","src":"400:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:27","type":""}],"src":"334:126:27"},{"body":{"nodeType":"YulBlock","src":"511:51:27","statements":[{"nodeType":"YulAssignment","src":"521:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:27"},"nodeType":"YulFunctionCall","src":"532:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:27","type":""}],"src":"466:96:27"},{"body":{"nodeType":"YulBlock","src":"611:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:27"},"nodeType":"YulFunctionCall","src":"670:12:27"},"nodeType":"YulExpressionStatement","src":"670:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:27"},"nodeType":"YulFunctionCall","src":"641:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:27"},"nodeType":"YulFunctionCall","src":"631:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:27"},"nodeType":"YulFunctionCall","src":"624:43:27"},"nodeType":"YulIf","src":"621:63:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:27","type":""}],"src":"568:122:27"},{"body":{"nodeType":"YulBlock","src":"759:80:27","statements":[{"nodeType":"YulAssignment","src":"769:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:27"},"nodeType":"YulFunctionCall","src":"778:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:27"},"nodeType":"YulFunctionCall","src":"800:33:27"},"nodeType":"YulExpressionStatement","src":"800:33:27"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:27","type":""}],"src":"696:143:27"},{"body":{"nodeType":"YulBlock","src":"939:413:27","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:27"},"nodeType":"YulFunctionCall","src":"987:79:27"},"nodeType":"YulExpressionStatement","src":"987:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:27"},"nodeType":"YulFunctionCall","src":"956:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:27"},"nodeType":"YulFunctionCall","src":"952:32:27"},"nodeType":"YulIf","src":"949:119:27"},{"nodeType":"YulBlock","src":"1078:128:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:27","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:27"},"nodeType":"YulFunctionCall","src":"1164:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:27"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:27"},"nodeType":"YulFunctionCall","src":"1132:64:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:27"}]}]},{"nodeType":"YulBlock","src":"1216:129:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:27","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:27"},"nodeType":"YulFunctionCall","src":"1303:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:27"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:27"},"nodeType":"YulFunctionCall","src":"1271:64:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:27","type":""}],"src":"845:507:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040523480156200001157600080fd5b506040516200338c3803806200338c833981810160405281019062000037919062000111565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050505062000158565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000d982620000ac565b9050919050565b620000eb81620000cc565b8114620000f757600080fd5b50565b6000815190506200010b81620000e0565b92915050565b600080604083850312156200012b576200012a620000a7565b5b60006200013b85828601620000fa565b92505060206200014e85828601620000fa565b9150509250929050565b60805160a0516131ec620001a06000396000818160f50152818161076d01528181610b290152610de501526000818161011901528181610c130152610d0601526131ec6000f3fe60806040526004361061003f5760003560e01c80631d2091bf1461004457806350fd910e1461006f5780637bb26ca71461009a578063ab8236f3146100ca575b600080fd5b34801561005057600080fd5b506100596100f3565b6040516100669190611445565b60405180910390f35b34801561007b57600080fd5b50610084610117565b6040516100919190611445565b60405180910390f35b6100b460048036038101906100af919061152f565b61013b565b6040516100c191906117fe565b60405180910390f35b3480156100d657600080fd5b506100f160048036038101906100ec91906119f3565b610b27565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610143611297565b61014b6112c5565b60028686905014610191576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018890611b15565b60405180910390fd5b600060028111156101a5576101a46115dc565b5b868660008181106101b9576101b8611b35565b5b90506060020160000160000160208101906101d49190611b89565b60028111156101e6576101e56115dc565b5b036102e957600160028111156101ff576101fe6115dc565b5b8686600181811061021357610212611b35565b5b905060600201600001600001602081019061022e9190611b89565b60028111156102405761023f6115dc565b5b14610280576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027790611c02565b60405180910390fd5b8585600081811061029457610293611b35565b5b9050606002018036038101906102aa9190611ccc565b8160800181905250858560018181106102c6576102c5611b35565b5b9050606002018036038101906102dc9190611ccc565b8160a0018190525061047d565b600060028111156102fd576102fc6115dc565b5b8686600181811061031157610310611b35565b5b905060600201600001600001602081019061032c9190611b89565b600281111561033e5761033d6115dc565b5b036104415760016002811115610357576103566115dc565b5b8686600081811061036b5761036a611b35565b5b90506060020160000160000160208101906103869190611b89565b6002811115610398576103976115dc565b5b146103d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cf90611c02565b60405180910390fd5b858560018181106103ec576103eb611b35565b5b9050606002018036038101906104029190611ccc565b81608001819052508585600081811061041e5761041d611b35565b5b9050606002018036038101906104349190611ccc565b8160a0018190525061047c565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047390611d45565b60405180910390fd5b5b60016002811115610491576104906115dc565b5b868660008181106104a5576104a4611b35565b5b90506060020160000160000160208101906104c09190611b89565b60028111156104d2576104d16115dc565b5b14806105305750600060028111156104ed576104ec6115dc565b5b8686600081811061050157610500611b35565b5b905060600201600001600001602081019061051c9190611b89565b600281111561052e5761052d6115dc565b5b145b61056f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056690611dd7565b60405180910390fd5b60016002811115610583576105826115dc565b5b8686600081811061059757610596611b35565b5b90506060020160000160000160208101906105b29190611b89565b60028111156105c4576105c36115dc565b5b0361061f5761061e868660008181106105e0576105df611b35565b5b90506060020160000160200160208101906105fb9190611df7565b8787600081811061060f5761060e611b35565b5b90506060020160400135610dc2565b5b838381019061062e9190611f9a565b816020018190525080602001516000015160405160200161064f919061202b565b604051602081830303815290604052816040018190525080602001516101000151156106c257620186a0816020015160e001518787600081811061069657610695611b35565b5b905060600201604001356106aa9190612075565b6106b491906120e6565b8160600181815250506106d5565b806020015160e001518160600181815250505b7fc919a44972f2a555d7b70313ba420f3ece86780db879b0e70e766c61ae84ad5c8160800151602001518260a0015160200151836020015160000151846020015160400151856020015160600151866020015160800151876020015160a00151886020015160c0015189606001518a6020015161012001516040516107639a999897969594939291906121b4565b60405180910390a17f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639fbf10fc826080015160200151836020015160400151846020015160600151856020015160800151338760a0015160200151886060015160405180606001604052808b6020015160a0015181526020018b6020015160c0015181526020018b602001516020015160405160200161081a919061202b565b6040516020818303038152906040528152508a604001518b6020015161012001516040518b63ffffffff1660e01b815260040161085f99989796959493929190612312565b6000604051808303818588803b15801561087857600080fd5b505af115801561088c573d6000803e3d6000fd5b5050505050600081602001516101200151511115610a0b576000600167ffffffffffffffff8111156108c1576108c0611870565b5b6040519080825280602002602001820160405280156108fa57816020015b6108e761130d565b8152602001906001900390816108df5790505b5090508160a001518160008151811061091657610915611b35565b5b602002602001018190525081606001518160008151811061093a57610939611b35565b5b602002602001015160200181815250506000826020015161016001516109ad57600067ffffffffffffffff81111561097557610974611870565b5b6040519080825280601f01601f1916602001820160405280156109a75781602001600182028036833780820191505090505b506109b8565b826020015161012001515b90507f92cabcced306320fcb4c1a1d8c0cec733aea48602b9740e521a95ae20030009d836020015160400151846020015161014001518484604051610a00949392919061246f565b60405180910390a150505b60405180608001604052808787808060200260200160405190810160405280939291908181526020016000905b82821015610a6857848483905060600201803603810190610a599190611ccc565b81526020019060010190610a38565b50505050508152602001600067ffffffffffffffff811115610a8d57610a8c611870565b5b604051908082528060200260200182016040528015610ac657816020015b610ab361130d565b815260200190600190039081610aab5790505b5081526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60010b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60020b815250915050949350505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bac90612547565b60405180910390fd5b600081806020019051810190610bcb9190612a88565b90507f068d4646b1f017626e64e0ec01e0509c83002732d5599a1b5ccacd00d5a3d4ea848483604051610c0093929190612dbf565b60405180910390a16000849050610c38817f000000000000000000000000000000000000000000000000000000000000000086610e6b565b6000600167ffffffffffffffff811115610c5557610c54611870565b5b604051908082528060200260200182016040528015610c8e57816020015b610c7b61130d565b815260200190600190039081610c735790505b5090506040518060400160405280604051806040016040528060016002811115610cbb57610cba6115dc565b5b81526020018973ffffffffffffffffffffffffffffffffffffffff1681525081526020018681525081600081518110610cf757610cf6611b35565b5b602002602001018190525060007f000000000000000000000000000000000000000000000000000000000000000090508073ffffffffffffffffffffffffffffffffffffffff1663f92b3d15856000015186602001518760400151866040518563ffffffff1660e01b8152600401610d729493929190612e3a565b600060405180830381600087803b158015610d8c57600080fd5b505af1925050508015610d9d575060015b610db557610db083856000015188610f7d565b610db6565b5b50505050505050505050565b60008290508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b8152600401610e22929190612e8d565b6020604051808303816000875af1158015610e41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e659190612eb6565b50505050565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b8152600401610ea9929190612ee3565b602060405180830381865afa158015610ec6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eea9190612f0c565b610ef49190612f39565b9050610f778463095ea7b360e01b8584604051602401610f15929190612e8d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611003565b50505050565b610ffe8363a9059cbb60e01b8484604051602401610f9c929190612e8d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611003565b505050565b6000611065826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166110ca9092919063ffffffff16565b90506000815111156110c557808060200190518101906110859190612eb6565b6110c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bb90612fdf565b60405180910390fd5b5b505050565b60606110d984846000856110e2565b90509392505050565b606082471015611127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111e90613071565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161115091906130cd565b60006040518083038185875af1925050503d806000811461118d576040519150601f19603f3d011682016040523d82523d6000602084013e611192565b606091505b50915091506111a3878383876111af565b92505050949350505050565b60608315611211576000835103611209576111c985611224565b611208576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ff90613130565b60405180910390fd5b5b82905061121c565b61121b8383611247565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561125a5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128e9190613194565b60405180910390fd5b60405180608001604052806060815260200160608152602001600060010b8152602001600060020b81525090565b6040518060c00160405280600081526020016112df61132d565b815260200160608152602001600081526020016112fa61130d565b815260200161130761130d565b81525090565b60405180604001604052806113206113c2565b8152602001600081525090565b604051806101800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600061ffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160608152602001600081526020016000151581525090565b6040518060400160405280600060028111156113e1576113e06115dc565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061142f82611404565b9050919050565b61143f81611424565b82525050565b600060208201905061145a6000830184611436565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261149957611498611474565b5b8235905067ffffffffffffffff8111156114b6576114b5611479565b5b6020830191508360608202830111156114d2576114d161147e565b5b9250929050565b60008083601f8401126114ef576114ee611474565b5b8235905067ffffffffffffffff81111561150c5761150b611479565b5b6020830191508360018202830111156115285761152761147e565b5b9250929050565b600080600080604085870312156115495761154861146a565b5b600085013567ffffffffffffffff8111156115675761156661146f565b5b61157387828801611483565b9450945050602085013567ffffffffffffffff8111156115965761159561146f565b5b6115a2878288016114d9565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061161c5761161b6115dc565b5b50565b600081905061162d8261160b565b919050565b600061163d8261161f565b9050919050565b61164d81611632565b82525050565b61165c81611424565b82525050565b6040820160008201516116786000850182611644565b50602082015161168b6020850182611653565b50505050565b6000819050919050565b6116a481611691565b82525050565b6060820160008201516116c06000850182611662565b5060208201516116d3604085018261169b565b50505050565b60006116e583836116aa565b60608301905092915050565b6000602082019050919050565b6000611709826115b0565b61171381856115bb565b935061171e836115cc565b8060005b8381101561174f57815161173688826116d9565b9750611741836116f1565b925050600181019050611722565b5085935050505092915050565b60008160010b9050919050565b6117728161175c565b82525050565b60008160020b9050919050565b61178e81611778565b82525050565b600060808301600083015184820360008601526117b182826116fe565b915050602083015184820360208601526117cb82826116fe565b91505060408301516117e06040860182611769565b5060608301516117f36060860182611785565b508091505092915050565b600060208201905081810360008301526118188184611794565b905092915050565b600061ffff82169050919050565b61183781611820565b811461184257600080fd5b50565b6000813590506118548161182e565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118a88261185f565b810181811067ffffffffffffffff821117156118c7576118c6611870565b5b80604052505050565b60006118da611460565b90506118e6828261189f565b919050565b600067ffffffffffffffff82111561190657611905611870565b5b61190f8261185f565b9050602081019050919050565b82818337600083830152505050565b600061193e611939846118eb565b6118d0565b90508281526020810184848401111561195a5761195961185a565b5b61196584828561191c565b509392505050565b600082601f83011261198257611981611474565b5b813561199284826020860161192b565b91505092915050565b6119a481611691565b81146119af57600080fd5b50565b6000813590506119c18161199b565b92915050565b6119d081611424565b81146119db57600080fd5b50565b6000813590506119ed816119c7565b92915050565b60008060008060008060c08789031215611a1057611a0f61146a565b5b6000611a1e89828a01611845565b965050602087013567ffffffffffffffff811115611a3f57611a3e61146f565b5b611a4b89828a0161196d565b9550506040611a5c89828a016119b2565b9450506060611a6d89828a016119de565b9350506080611a7e89828a016119b2565b92505060a087013567ffffffffffffffff811115611a9f57611a9e61146f565b5b611aab89828a0161196d565b9150509295509295509295565b600082825260208201905092915050565b7f7468657265206d757374206265203220696e7075742061737365747300000000600082015250565b6000611aff601c83611ab8565b9150611b0a82611ac9565b602082019050919050565b60006020820190508181036000830152611b2e81611af2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60038110611b7157600080fd5b50565b600081359050611b8381611b64565b92915050565b600060208284031215611b9f57611b9e61146a565b5b6000611bad84828501611b74565b91505092915050565b7f6f6e6520696e707574206173736574206d75737420626520616e204552433230600082015250565b6000611bec602083611ab8565b9150611bf782611bb6565b602082019050919050565b60006020820190508181036000830152611c1b81611bdf565b9050919050565b600080fd5b600080fd5b600060408284031215611c4257611c41611c22565b5b611c4c60406118d0565b90506000611c5c84828501611b74565b6000830152506020611c70848285016119de565b60208301525092915050565b600060608284031215611c9257611c91611c22565b5b611c9c60406118d0565b90506000611cac84828501611c2c565b6000830152506040611cc0848285016119b2565b60208301525092915050565b600060608284031215611ce257611ce161146a565b5b6000611cf084828501611c7c565b91505092915050565b7f6f6e6520696e707574206173736574206d757374206265206e61746976650000600082015250565b6000611d2f601e83611ab8565b9150611d3a82611cf9565b602082019050919050565b60006020820190508181036000830152611d5e81611d22565b9050919050565b7f74686520696e707574206173736574206d75737420626520616e20455243323060008201527f206f72204e617469766500000000000000000000000000000000000000000000602082015250565b6000611dc1602a83611ab8565b9150611dcc82611d65565b604082019050919050565b60006020820190508181036000830152611df081611db4565b9050919050565b600060208284031215611e0d57611e0c61146a565b5b6000611e1b848285016119de565b91505092915050565b60008115159050919050565b611e3981611e24565b8114611e4457600080fd5b50565b600081359050611e5681611e30565b92915050565b60006101808284031215611e7357611e72611c22565b5b611e7e6101806118d0565b90506000611e8e848285016119de565b6000830152506020611ea2848285016119de565b6020830152506040611eb684828501611845565b6040830152506060611eca848285016119b2565b6060830152506080611ede848285016119b2565b60808301525060a0611ef2848285016119b2565b60a08301525060c0611f06848285016119b2565b60c08301525060e0611f1a848285016119b2565b60e083015250610100611f2f84828501611e47565b6101008301525061012082013567ffffffffffffffff811115611f5557611f54611c27565b5b611f618482850161196d565b61012083015250610140611f77848285016119b2565b61014083015250610160611f8d84828501611e47565b6101608301525092915050565b600060208284031215611fb057611faf61146a565b5b600082013567ffffffffffffffff811115611fce57611fcd61146f565b5b611fda84828501611e5c565b91505092915050565b60008160601b9050919050565b6000611ffb82611fe3565b9050919050565b600061200d82611ff0565b9050919050565b61202561202082611424565b612002565b82525050565b60006120378284612014565b60148201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061208082611691565b915061208b83611691565b925082820261209981611691565b915082820484148315176120b0576120af612046565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006120f182611691565b91506120fc83611691565b92508261210c5761210b6120b7565b5b828204905092915050565b61212081611691565b82525050565b61212f81611820565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561216f578082015181840152602081019050612154565b60008484015250505050565b600061218682612135565b6121908185612140565b93506121a0818560208601612151565b6121a98161185f565b840191505092915050565b6000610140820190506121ca600083018d612117565b6121d7602083018c612117565b6121e4604083018b611436565b6121f1606083018a612126565b6121fe6080830189612117565b61220b60a0830188612117565b61221860c0830187612117565b61222560e0830186612117565b612233610100830185612117565b818103610120830152612246818461217b565b90509b9a5050505050505050505050565b600061226282611404565b9050919050565b61227281612257565b82525050565b600082825260208201905092915050565b600061229482612135565b61229e8185612278565b93506122ae818560208601612151565b6122b78161185f565b840191505092915050565b60006060830160008301516122da600086018261169b565b5060208301516122ed602086018261169b565b50604083015184820360408601526123058282612289565b9150508091505092915050565b600061012082019050612328600083018c612126565b612335602083018b612117565b612342604083018a612117565b61234f6060830189612269565b61235c6080830188612117565b61236960a0830187612117565b81810360c083015261237b81866122c2565b905081810360e083015261238f818561217b565b90508181036101008301526123a4818461217b565b90509a9950505050505050505050565b7f73746172676174652d6272696467650000000000000000000000000000000000600082015250565b60006123ea600f83611ab8565b91506123f5826123b4565b602082019050919050565b600082825260208201905092915050565b600061241c826115b0565b6124268185612400565b9350612431836115cc565b8060005b8381101561246257815161244988826116d9565b9750612454836116f1565b925050600181019050612435565b5085935050505092915050565b600060a0820190508181036000830152612488816123dd565b90506124976020830187612126565b6124a46040830186612117565b81810360608301526124b68185612411565b905081810360808301526124ca818461217b565b905095945050505050565b7f6f6e6c79205374617267617465206973207065726d697474656420746f20636160008201527f6c6c207367526563656976650000000000000000000000000000000000000000602082015250565b6000612531602c83611ab8565b915061253c826124d5565b604082019050919050565b6000602082019050818103600083015261256081612524565b9050919050565b600081519050612576816119c7565b92915050565b60008151905061258b8161199b565b92915050565b600067ffffffffffffffff8211156125ac576125ab611870565b5b602082029050602081019050919050565b6000815190506125cc8161182e565b92915050565b600067ffffffffffffffff8211156125ed576125ec611870565b5b602082029050602081019050919050565b60008151905061260d81611e30565b92915050565b60008151905061262281611b64565b92915050565b60006040828403121561263e5761263d611c22565b5b61264860406118d0565b9050600061265884828501612613565b600083015250602061266c84828501612567565b60208301525092915050565b600060a0828403121561268e5761268d611c22565b5b61269860806118d0565b905060006126a8848285016125fe565b60008301525060206126bc848285016125fe565b60208301525060406126d084828501612628565b60408301525060806126e48482850161257c565b60608301525092915050565b60006127036126fe846125d2565b6118d0565b90508083825260208201905060a084028301858111156127265761272561147e565b5b835b8181101561274f578061273b8882612678565b84526020840193505060a081019050612728565b5050509392505050565b600082601f83011261276e5761276d611474565b5b815161277e8482602086016126f0565b91505092915050565b600061279a612795846118eb565b6118d0565b9050828152602081018484840111156127b6576127b561185a565b5b6127c1848285612151565b509392505050565b600082601f8301126127de576127dd611474565b5b81516127ee848260208601612787565b91505092915050565b6128008161175c565b811461280b57600080fd5b50565b60008151905061281d816127f7565b92915050565b600060a0828403121561283957612838611c22565b5b61284360a06118d0565b90506000612853848285016125bd565b600083015250602061286784828501612567565b602083015250604082015167ffffffffffffffff81111561288b5761288a611c27565b5b61289784828501612759565b604083015250606082015167ffffffffffffffff8111156128bb576128ba611c27565b5b6128c7848285016127c9565b60608301525060806128db8482850161280e565b60808301525092915050565b60006128fa6128f584612591565b6118d0565b9050808382526020820190506020840283018581111561291d5761291c61147e565b5b835b8181101561296457805167ffffffffffffffff81111561294257612941611474565b5b80860161294f8982612823565b8552602085019450505060208101905061291f565b5050509392505050565b600082601f83011261298357612982611474565b5b81516129938482602086016128e7565b91505092915050565b6000604082840312156129b2576129b1611c22565b5b6129bc60406118d0565b905060006129cc84828501612567565b600083015250602082015167ffffffffffffffff8111156129f0576129ef611c27565b5b6129fc8482850161296e565b60208301525092915050565b600060608284031215612a1e57612a1d611c22565b5b612a2860606118d0565b90506000612a3884828501612567565b6000830152506020612a4c8482850161257c565b602083015250604082015167ffffffffffffffff811115612a7057612a6f611c27565b5b612a7c8482850161299c565b60408301525092915050565b600060208284031215612a9e57612a9d61146a565b5b600082015167ffffffffffffffff811115612abc57612abb61146f565b5b612ac884828501612a08565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612b0681611820565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612b4181611e24565b82525050565b60a082016000820151612b5d6000850182612b38565b506020820151612b706020850182612b38565b506040820151612b836040850182611662565b506060820151612b96608085018261169b565b50505050565b6000612ba88383612b47565b60a08301905092915050565b6000602082019050919050565b6000612bcc82612b0c565b612bd68185612b17565b9350612be183612b28565b8060005b83811015612c12578151612bf98882612b9c565b9750612c0483612bb4565b925050600181019050612be5565b5085935050505092915050565b600060a083016000830151612c376000860182612afd565b506020830151612c4a6020860182611653565b5060408301518482036040860152612c628282612bc1565b91505060608301518482036060860152612c7c8282612289565b9150506080830151612c916080860182611769565b508091505092915050565b6000612ca88383612c1f565b905092915050565b6000602082019050919050565b6000612cc882612ad1565b612cd28185612adc565b935083602082028501612ce485612aed565b8060005b85811015612d205784840389528151612d018582612c9c565b9450612d0c83612cb0565b925060208a01995050600181019050612ce8565b50829750879550505050505092915050565b6000604083016000830151612d4a6000860182611653565b5060208301518482036020860152612d628282612cbd565b9150508091505092915050565b6000606083016000830151612d876000860182611653565b506020830151612d9a602086018261169b565b5060408301518482036040860152612db28282612d32565b9150508091505092915050565b6000606082019050612dd46000830186611436565b612de16020830185612117565b8181036040830152612df38184612d6f565b9050949350505050565b6000604083016000830151612e156000860182611653565b5060208301518482036020860152612e2d8282612cbd565b9150508091505092915050565b6000608082019050612e4f6000830187611436565b612e5c6020830186612117565b8181036040830152612e6e8185612dfd565b90508181036060830152612e828184612411565b905095945050505050565b6000604082019050612ea26000830185611436565b612eaf6020830184612117565b9392505050565b600060208284031215612ecc57612ecb61146a565b5b6000612eda848285016125fe565b91505092915050565b6000604082019050612ef86000830185611436565b612f056020830184611436565b9392505050565b600060208284031215612f2257612f2161146a565b5b6000612f308482850161257c565b91505092915050565b6000612f4482611691565b9150612f4f83611691565b9250828201905080821115612f6757612f66612046565b5b92915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612fc9602a83611ab8565b9150612fd482612f6d565b604082019050919050565b60006020820190508181036000830152612ff881612fbc565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061305b602683611ab8565b915061306682612fff565b604082019050919050565b6000602082019050818103600083015261308a8161304e565b9050919050565b600081905092915050565b60006130a782612135565b6130b18185613091565b93506130c1818560208601612151565b80840191505092915050565b60006130d9828461309c565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061311a601d83611ab8565b9150613125826130e4565b602082019050919050565b600060208201905081810360008301526131498161310d565b9050919050565b600081519050919050565b600061316682613150565b6131708185611ab8565b9350613180818560208601612151565b6131898161185f565b840191505092915050565b600060208201905081810360008301526131ae818461315b565b90509291505056fea264697066735822122001af31e7b7bbfdc5cf8cf93b0a7394b9b6ce0cc8bfcc445cd21d50a44617235d64736f6c63430008120033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x338C CODESIZE SUB DUP1 PUSH3 0x338C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x111 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH3 0x158 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD9 DUP3 PUSH3 0xAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xEB DUP2 PUSH3 0xCC JUMP JUMPDEST DUP2 EQ PUSH3 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x10B DUP2 PUSH3 0xE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12B JUMPI PUSH3 0x12A PUSH3 0xA7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x13B DUP6 DUP3 DUP7 ADD PUSH3 0xFA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x14E DUP6 DUP3 DUP7 ADD PUSH3 0xFA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x31EC PUSH3 0x1A0 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xF5 ADD MSTORE DUP2 DUP2 PUSH2 0x76D ADD MSTORE DUP2 DUP2 PUSH2 0xB29 ADD MSTORE PUSH2 0xDE5 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x119 ADD MSTORE DUP2 DUP2 PUSH2 0xC13 ADD MSTORE PUSH2 0xD06 ADD MSTORE PUSH2 0x31EC PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D2091BF EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x50FD910E EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x7BB26CA7 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xAB8236F3 EQ PUSH2 0xCA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH2 0x117 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0xB27 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x1297 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x2 DUP7 DUP7 SWAP1 POP EQ PUSH2 0x191 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188 SWAP1 PUSH2 0x1B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1A5 JUMPI PUSH2 0x1A4 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP7 DUP7 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1B9 JUMPI PUSH2 0x1B8 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E6 JUMPI PUSH2 0x1E5 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2E9 JUMPI PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1FF JUMPI PUSH2 0x1FE PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP7 DUP7 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x213 JUMPI PUSH2 0x212 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x240 JUMPI PUSH2 0x23F PUSH2 0x15DC JUMP JUMPDEST JUMPDEST EQ PUSH2 0x280 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x277 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x294 JUMPI PUSH2 0x293 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP2 PUSH1 0x80 ADD DUP2 SWAP1 MSTORE POP DUP6 DUP6 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x2C6 JUMPI PUSH2 0x2C5 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP2 PUSH1 0xA0 ADD DUP2 SWAP1 MSTORE POP PUSH2 0x47D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2FD JUMPI PUSH2 0x2FC PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP7 DUP7 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x311 JUMPI PUSH2 0x310 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33E JUMPI PUSH2 0x33D PUSH2 0x15DC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x441 JUMPI PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x357 JUMPI PUSH2 0x356 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP7 DUP7 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x36B JUMPI PUSH2 0x36A PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x398 JUMPI PUSH2 0x397 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST EQ PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP1 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x3EC JUMPI PUSH2 0x3EB PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP2 PUSH1 0x80 ADD DUP2 SWAP1 MSTORE POP DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x41E JUMPI PUSH2 0x41D PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP2 PUSH1 0xA0 ADD DUP2 SWAP1 MSTORE POP PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x473 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x491 JUMPI PUSH2 0x490 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP7 DUP7 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4D2 JUMPI PUSH2 0x4D1 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0x530 JUMPI POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4EC PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP7 DUP7 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x501 JUMPI PUSH2 0x500 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x52E JUMPI PUSH2 0x52D PUSH2 0x15DC JUMP JUMPDEST JUMPDEST EQ JUMPDEST PUSH2 0x56F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x566 SWAP1 PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x583 JUMPI PUSH2 0x582 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP7 DUP7 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x597 JUMPI PUSH2 0x596 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5C4 JUMPI PUSH2 0x5C3 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x61F JUMPI PUSH2 0x61E DUP7 DUP7 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x5E0 JUMPI PUSH2 0x5DF PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x0 ADD PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5FB SWAP2 SWAP1 PUSH2 0x1DF7 JUMP JUMPDEST DUP8 DUP8 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x60F JUMPI PUSH2 0x60E PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xDC2 JUMP JUMPDEST JUMPDEST DUP4 DUP4 DUP2 ADD SWAP1 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1F9A JUMP JUMPDEST DUP2 PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x202B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x40 ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x100 ADD MLOAD ISZERO PUSH2 0x6C2 JUMPI PUSH3 0x186A0 DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0xE0 ADD MLOAD DUP8 DUP8 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x696 JUMPI PUSH2 0x695 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x6B4 SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST DUP2 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x6D5 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0xE0 ADD MLOAD DUP2 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH32 0xC919A44972F2A555D7B70313BA420F3ECE86780DB879B0E70E766C61AE84AD5C DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0xA0 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x80 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0x60 ADD MLOAD DUP11 PUSH1 0x20 ADD MLOAD PUSH2 0x120 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x763 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9FBF10FC DUP3 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x80 ADD MLOAD CALLER DUP8 PUSH1 0xA0 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP12 PUSH1 0x20 ADD MLOAD PUSH1 0xA0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x20 ADD MLOAD PUSH1 0xC0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x20 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x81A SWAP2 SWAP1 PUSH2 0x202B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 MSTORE POP DUP11 PUSH1 0x40 ADD MLOAD DUP12 PUSH1 0x20 ADD MLOAD PUSH2 0x120 ADD MLOAD PUSH1 0x40 MLOAD DUP12 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85F SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x88C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x120 ADD MLOAD MLOAD GT ISZERO PUSH2 0xA0B JUMPI PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8C1 JUMPI PUSH2 0x8C0 PUSH2 0x1870 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8FA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x8E7 PUSH2 0x130D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x8DF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 PUSH1 0xA0 ADD MLOAD DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x916 JUMPI PUSH2 0x915 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x60 ADD MLOAD DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x93A JUMPI PUSH2 0x939 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x160 ADD MLOAD PUSH2 0x9AD JUMPI PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x975 JUMPI PUSH2 0x974 PUSH2 0x1870 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9A7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH2 0x9B8 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x120 ADD MLOAD JUMPDEST SWAP1 POP PUSH32 0x92CABCCED306320FCB4C1A1D8C0CEC733AEA48602B9740E521A95AE20030009D DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x140 ADD MLOAD DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA00 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x246F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP8 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xA68 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0x60 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA38 JUMP JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA8D JUMPI PUSH2 0xA8C PUSH2 0x1870 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAC6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xAB3 PUSH2 0x130D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xAAB JUMPI SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAC SWAP1 PUSH2 0x2547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xBCB SWAP2 SWAP1 PUSH2 0x2A88 JUMP JUMPDEST SWAP1 POP PUSH32 0x68D4646B1F017626E64E0EC01E0509C83002732D5599A1B5CCACD00D5A3D4EA DUP5 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC00 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP5 SWAP1 POP PUSH2 0xC38 DUP2 PUSH32 0x0 DUP7 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC55 JUMPI PUSH2 0xC54 PUSH2 0x1870 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC8E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xC7B PUSH2 0x130D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xC73 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCBB JUMPI PUSH2 0xCBA PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCF7 JUMPI PUSH2 0xCF6 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 PUSH32 0x0 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF92B3D15 DUP6 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD72 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD9D JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0xDB5 JUMPI PUSH2 0xDB0 DUP4 DUP6 PUSH1 0x0 ADD MLOAD DUP9 PUSH2 0xF7D JUMP JUMPDEST PUSH2 0xDB6 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE22 SWAP3 SWAP2 SWAP1 PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE65 SWAP2 SWAP1 PUSH2 0x2EB6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA9 SWAP3 SWAP2 SWAP1 PUSH2 0x2EE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEEA SWAP2 SWAP1 PUSH2 0x2F0C JUMP JUMPDEST PUSH2 0xEF4 SWAP2 SWAP1 PUSH2 0x2F39 JUMP JUMPDEST SWAP1 POP PUSH2 0xF77 DUP5 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF15 SWAP3 SWAP2 SWAP1 PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1003 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xFFE DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF9C SWAP3 SWAP2 SWAP1 PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1003 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1065 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10CA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x10C5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1085 SWAP2 SWAP1 PUSH2 0x2EB6 JUMP JUMPDEST PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BB SWAP1 PUSH2 0x2FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10D9 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x10E2 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111E SWAP1 PUSH2 0x3071 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1150 SWAP2 SWAP1 PUSH2 0x30CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x118D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11A3 DUP8 DUP4 DUP4 DUP8 PUSH2 0x11AF JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1211 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1209 JUMPI PUSH2 0x11C9 DUP6 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x1208 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FF SWAP1 PUSH2 0x3130 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x121C JUMP JUMPDEST PUSH2 0x121B DUP4 DUP4 PUSH2 0x1247 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x125A JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x3194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12DF PUSH2 0x132D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12FA PUSH2 0x130D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1307 PUSH2 0x130D JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1320 PUSH2 0x13C2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13E1 JUMPI PUSH2 0x13E0 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142F DUP3 PUSH2 0x1404 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x143F DUP2 PUSH2 0x1424 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x145A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1436 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1499 JUMPI PUSH2 0x1498 PUSH2 0x1474 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14B6 JUMPI PUSH2 0x14B5 PUSH2 0x1479 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x60 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x14D2 JUMPI PUSH2 0x14D1 PUSH2 0x147E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14EF JUMPI PUSH2 0x14EE PUSH2 0x1474 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x150C JUMPI PUSH2 0x150B PUSH2 0x1479 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1528 JUMPI PUSH2 0x1527 PUSH2 0x147E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1548 PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1567 JUMPI PUSH2 0x1566 PUSH2 0x146F JUMP JUMPDEST JUMPDEST PUSH2 0x1573 DUP8 DUP3 DUP9 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1596 JUMPI PUSH2 0x1595 PUSH2 0x146F JUMP JUMPDEST JUMPDEST PUSH2 0x15A2 DUP8 DUP3 DUP9 ADD PUSH2 0x14D9 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x161C JUMPI PUSH2 0x161B PUSH2 0x15DC JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x162D DUP3 PUSH2 0x160B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163D DUP3 PUSH2 0x161F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x164D DUP2 PUSH2 0x1632 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x165C DUP2 PUSH2 0x1424 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1678 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1644 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x168B PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A4 DUP2 PUSH2 0x1691 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x16C0 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1662 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x16D3 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x169B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E5 DUP4 DUP4 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1709 DUP3 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x1713 DUP2 DUP6 PUSH2 0x15BB JUMP JUMPDEST SWAP4 POP PUSH2 0x171E DUP4 PUSH2 0x15CC JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x174F JUMPI DUP2 MLOAD PUSH2 0x1736 DUP9 DUP3 PUSH2 0x16D9 JUMP JUMPDEST SWAP8 POP PUSH2 0x1741 DUP4 PUSH2 0x16F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1722 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1772 DUP2 PUSH2 0x175C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x178E DUP2 PUSH2 0x1778 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x17B1 DUP3 DUP3 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x17CB DUP3 DUP3 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x17E0 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x1769 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x17F3 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x1785 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1818 DUP2 DUP5 PUSH2 0x1794 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1837 DUP2 PUSH2 0x1820 JUMP JUMPDEST DUP2 EQ PUSH2 0x1842 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1854 DUP2 PUSH2 0x182E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x18A8 DUP3 PUSH2 0x185F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18C7 JUMPI PUSH2 0x18C6 PUSH2 0x1870 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18DA PUSH2 0x1460 JUMP JUMPDEST SWAP1 POP PUSH2 0x18E6 DUP3 DUP3 PUSH2 0x189F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1906 JUMPI PUSH2 0x1905 PUSH2 0x1870 JUMP JUMPDEST JUMPDEST PUSH2 0x190F DUP3 PUSH2 0x185F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x193E PUSH2 0x1939 DUP5 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x195A JUMPI PUSH2 0x1959 PUSH2 0x185A JUMP JUMPDEST JUMPDEST PUSH2 0x1965 DUP5 DUP3 DUP6 PUSH2 0x191C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1982 JUMPI PUSH2 0x1981 PUSH2 0x1474 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1992 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x192B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19A4 DUP2 PUSH2 0x1691 JUMP JUMPDEST DUP2 EQ PUSH2 0x19AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19C1 DUP2 PUSH2 0x199B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19D0 DUP2 PUSH2 0x1424 JUMP JUMPDEST DUP2 EQ PUSH2 0x19DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19ED DUP2 PUSH2 0x19C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1A10 JUMPI PUSH2 0x1A0F PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A1E DUP10 DUP3 DUP11 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A3F JUMPI PUSH2 0x1A3E PUSH2 0x146F JUMP JUMPDEST JUMPDEST PUSH2 0x1A4B DUP10 DUP3 DUP11 ADD PUSH2 0x196D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x1A5C DUP10 DUP3 DUP11 ADD PUSH2 0x19B2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x1A6D DUP10 DUP3 DUP11 ADD PUSH2 0x19DE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x1A7E DUP10 DUP3 DUP11 ADD PUSH2 0x19B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A9F JUMPI PUSH2 0x1A9E PUSH2 0x146F JUMP JUMPDEST JUMPDEST PUSH2 0x1AAB DUP10 DUP3 DUP11 ADD PUSH2 0x196D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7468657265206D757374206265203220696E7075742061737365747300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFF PUSH1 0x1C DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0A DUP3 PUSH2 0x1AC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B2E DUP2 PUSH2 0x1AF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1B71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B83 DUP2 PUSH2 0x1B64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B9F JUMPI PUSH2 0x1B9E PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BAD DUP5 DUP3 DUP6 ADD PUSH2 0x1B74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6520696E707574206173736574206D75737420626520616E204552433230 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEC PUSH1 0x20 DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF7 DUP3 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C1B DUP2 PUSH2 0x1BDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C42 JUMPI PUSH2 0x1C41 PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x1C4C PUSH1 0x40 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C5C DUP5 DUP3 DUP6 ADD PUSH2 0x1B74 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1C70 DUP5 DUP3 DUP6 ADD PUSH2 0x19DE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C92 JUMPI PUSH2 0x1C91 PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x1C9C PUSH1 0x40 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CAC DUP5 DUP3 DUP6 ADD PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1CC0 DUP5 DUP3 DUP6 ADD PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE2 JUMPI PUSH2 0x1CE1 PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CF0 DUP5 DUP3 DUP6 ADD PUSH2 0x1C7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6520696E707574206173736574206D757374206265206E61746976650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D2F PUSH1 0x1E DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D3A DUP3 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D5E DUP2 PUSH2 0x1D22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x74686520696E707574206173736574206D75737420626520616E204552433230 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206F72204E617469766500000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC1 PUSH1 0x2A DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCC DUP3 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF0 DUP2 PUSH2 0x1DB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E0D JUMPI PUSH2 0x1E0C PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E1B DUP5 DUP3 DUP6 ADD PUSH2 0x19DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E39 DUP2 PUSH2 0x1E24 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E56 DUP2 PUSH2 0x1E30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E73 JUMPI PUSH2 0x1E72 PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x1E7E PUSH2 0x180 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E8E DUP5 DUP3 DUP6 ADD PUSH2 0x19DE JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1EA2 DUP5 DUP3 DUP6 ADD PUSH2 0x19DE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1EB6 DUP5 DUP3 DUP6 ADD PUSH2 0x1845 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1ECA DUP5 DUP3 DUP6 ADD PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x1EDE DUP5 DUP3 DUP6 ADD PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x1EF2 DUP5 DUP3 DUP6 ADD PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x1F06 DUP5 DUP3 DUP6 ADD PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x1F1A DUP5 DUP3 DUP6 ADD PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x1F2F DUP5 DUP3 DUP6 ADD PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F55 JUMPI PUSH2 0x1F54 PUSH2 0x1C27 JUMP JUMPDEST JUMPDEST PUSH2 0x1F61 DUP5 DUP3 DUP6 ADD PUSH2 0x196D JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP PUSH2 0x140 PUSH2 0x1F77 DUP5 DUP3 DUP6 ADD PUSH2 0x19B2 JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE POP PUSH2 0x160 PUSH2 0x1F8D DUP5 DUP3 DUP6 ADD PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FB0 JUMPI PUSH2 0x1FAF PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FCE JUMPI PUSH2 0x1FCD PUSH2 0x146F JUMP JUMPDEST JUMPDEST PUSH2 0x1FDA DUP5 DUP3 DUP6 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FFB DUP3 PUSH2 0x1FE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200D DUP3 PUSH2 0x1FF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2025 PUSH2 0x2020 DUP3 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x2002 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2037 DUP3 DUP5 PUSH2 0x2014 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2080 DUP3 PUSH2 0x1691 JUMP JUMPDEST SWAP2 POP PUSH2 0x208B DUP4 PUSH2 0x1691 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2099 DUP2 PUSH2 0x1691 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20B0 JUMPI PUSH2 0x20AF PUSH2 0x2046 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20F1 DUP3 PUSH2 0x1691 JUMP JUMPDEST SWAP2 POP PUSH2 0x20FC DUP4 PUSH2 0x1691 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x210C JUMPI PUSH2 0x210B PUSH2 0x20B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2120 DUP2 PUSH2 0x1691 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x212F DUP2 PUSH2 0x1820 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x216F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2154 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2186 DUP3 PUSH2 0x2135 JUMP JUMPDEST PUSH2 0x2190 DUP2 DUP6 PUSH2 0x2140 JUMP JUMPDEST SWAP4 POP PUSH2 0x21A0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2151 JUMP JUMPDEST PUSH2 0x21A9 DUP2 PUSH2 0x185F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x21CA PUSH1 0x0 DUP4 ADD DUP14 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x21D7 PUSH1 0x20 DUP4 ADD DUP13 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x21E4 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x21F1 PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x21FE PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x220B PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x2218 PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x2225 PUSH1 0xE0 DUP4 ADD DUP7 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x2233 PUSH2 0x100 DUP4 ADD DUP6 PUSH2 0x2117 JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x2246 DUP2 DUP5 PUSH2 0x217B JUMP JUMPDEST SWAP1 POP SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2262 DUP3 PUSH2 0x1404 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2272 DUP2 PUSH2 0x2257 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2294 DUP3 PUSH2 0x2135 JUMP JUMPDEST PUSH2 0x229E DUP2 DUP6 PUSH2 0x2278 JUMP JUMPDEST SWAP4 POP PUSH2 0x22AE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2151 JUMP JUMPDEST PUSH2 0x22B7 DUP2 PUSH2 0x185F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x22DA PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x169B JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x22ED PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x169B JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x2305 DUP3 DUP3 PUSH2 0x2289 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x2328 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x2335 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x2342 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x234F PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2269 JUMP JUMPDEST PUSH2 0x235C PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x2369 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x2117 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x237B DUP2 DUP7 PUSH2 0x22C2 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x238F DUP2 DUP6 PUSH2 0x217B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x23A4 DUP2 DUP5 PUSH2 0x217B JUMP JUMPDEST SWAP1 POP SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x73746172676174652D6272696467650000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EA PUSH1 0xF DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x23F5 DUP3 PUSH2 0x23B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x241C DUP3 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x2426 DUP2 DUP6 PUSH2 0x2400 JUMP JUMPDEST SWAP4 POP PUSH2 0x2431 DUP4 PUSH2 0x15CC JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2462 JUMPI DUP2 MLOAD PUSH2 0x2449 DUP9 DUP3 PUSH2 0x16D9 JUMP JUMPDEST SWAP8 POP PUSH2 0x2454 DUP4 PUSH2 0x16F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2435 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2488 DUP2 PUSH2 0x23DD JUMP JUMPDEST SWAP1 POP PUSH2 0x2497 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x24A4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2117 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x24B6 DUP2 DUP6 PUSH2 0x2411 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x24CA DUP2 DUP5 PUSH2 0x217B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x6F6E6C79205374617267617465206973207065726D697474656420746F206361 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C207367526563656976650000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2531 PUSH1 0x2C DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x253C DUP3 PUSH2 0x24D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2560 DUP2 PUSH2 0x2524 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2576 DUP2 PUSH2 0x19C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x258B DUP2 PUSH2 0x199B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25AC JUMPI PUSH2 0x25AB PUSH2 0x1870 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25CC DUP2 PUSH2 0x182E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25ED JUMPI PUSH2 0x25EC PUSH2 0x1870 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x260D DUP2 PUSH2 0x1E30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2622 DUP2 PUSH2 0x1B64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263E JUMPI PUSH2 0x263D PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x2648 PUSH1 0x40 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2658 DUP5 DUP3 DUP6 ADD PUSH2 0x2613 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x266C DUP5 DUP3 DUP6 ADD PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x268E JUMPI PUSH2 0x268D PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x2698 PUSH1 0x80 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x26A8 DUP5 DUP3 DUP6 ADD PUSH2 0x25FE JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x26BC DUP5 DUP3 DUP6 ADD PUSH2 0x25FE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x26D0 DUP5 DUP3 DUP6 ADD PUSH2 0x2628 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x26E4 DUP5 DUP3 DUP6 ADD PUSH2 0x257C JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2703 PUSH2 0x26FE DUP5 PUSH2 0x25D2 JUMP JUMPDEST PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA0 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2726 JUMPI PUSH2 0x2725 PUSH2 0x147E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x274F JUMPI DUP1 PUSH2 0x273B DUP9 DUP3 PUSH2 0x2678 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0xA0 DUP2 ADD SWAP1 POP PUSH2 0x2728 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x276E JUMPI PUSH2 0x276D PUSH2 0x1474 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x277E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x279A PUSH2 0x2795 DUP5 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x27B6 JUMPI PUSH2 0x27B5 PUSH2 0x185A JUMP JUMPDEST JUMPDEST PUSH2 0x27C1 DUP5 DUP3 DUP6 PUSH2 0x2151 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27DE JUMPI PUSH2 0x27DD PUSH2 0x1474 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x27EE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2787 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2800 DUP2 PUSH2 0x175C JUMP JUMPDEST DUP2 EQ PUSH2 0x280B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x281D DUP2 PUSH2 0x27F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2839 JUMPI PUSH2 0x2838 PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x2843 PUSH1 0xA0 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2853 DUP5 DUP3 DUP6 ADD PUSH2 0x25BD JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x2867 DUP5 DUP3 DUP6 ADD PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x288B JUMPI PUSH2 0x288A PUSH2 0x1C27 JUMP JUMPDEST JUMPDEST PUSH2 0x2897 DUP5 DUP3 DUP6 ADD PUSH2 0x2759 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28BB JUMPI PUSH2 0x28BA PUSH2 0x1C27 JUMP JUMPDEST JUMPDEST PUSH2 0x28C7 DUP5 DUP3 DUP6 ADD PUSH2 0x27C9 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x28DB DUP5 DUP3 DUP6 ADD PUSH2 0x280E JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28FA PUSH2 0x28F5 DUP5 PUSH2 0x2591 JUMP JUMPDEST PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x291D JUMPI PUSH2 0x291C PUSH2 0x147E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2964 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2942 JUMPI PUSH2 0x2941 PUSH2 0x1474 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x294F DUP10 DUP3 PUSH2 0x2823 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x291F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2983 JUMPI PUSH2 0x2982 PUSH2 0x1474 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x2993 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x28E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29B2 JUMPI PUSH2 0x29B1 PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x29BC PUSH1 0x40 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x29CC DUP5 DUP3 DUP6 ADD PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29F0 JUMPI PUSH2 0x29EF PUSH2 0x1C27 JUMP JUMPDEST JUMPDEST PUSH2 0x29FC DUP5 DUP3 DUP6 ADD PUSH2 0x296E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A1E JUMPI PUSH2 0x2A1D PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x2A28 PUSH1 0x60 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A38 DUP5 DUP3 DUP6 ADD PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x2A4C DUP5 DUP3 DUP6 ADD PUSH2 0x257C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A70 JUMPI PUSH2 0x2A6F PUSH2 0x1C27 JUMP JUMPDEST JUMPDEST PUSH2 0x2A7C DUP5 DUP3 DUP6 ADD PUSH2 0x299C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A9E JUMPI PUSH2 0x2A9D PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ABC JUMPI PUSH2 0x2ABB PUSH2 0x146F JUMP JUMPDEST JUMPDEST PUSH2 0x2AC8 DUP5 DUP3 DUP6 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B06 DUP2 PUSH2 0x1820 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B41 DUP2 PUSH2 0x1E24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2B5D PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2B38 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2B70 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2B38 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2B83 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1662 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2B96 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x169B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA8 DUP4 DUP4 PUSH2 0x2B47 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCC DUP3 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x2BD6 DUP2 DUP6 PUSH2 0x2B17 JUMP JUMPDEST SWAP4 POP PUSH2 0x2BE1 DUP4 PUSH2 0x2B28 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C12 JUMPI DUP2 MLOAD PUSH2 0x2BF9 DUP9 DUP3 PUSH2 0x2B9C JUMP JUMPDEST SWAP8 POP PUSH2 0x2C04 DUP4 PUSH2 0x2BB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2BE5 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2C37 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2AFD JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2C4A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x2C62 DUP3 DUP3 PUSH2 0x2BC1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2C7C DUP3 DUP3 PUSH2 0x2289 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x2C91 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x1769 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA8 DUP4 DUP4 PUSH2 0x2C1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC8 DUP3 PUSH2 0x2AD1 JUMP JUMPDEST PUSH2 0x2CD2 DUP2 DUP6 PUSH2 0x2ADC JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x2CE4 DUP6 PUSH2 0x2AED JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2D20 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x2D01 DUP6 DUP3 PUSH2 0x2C9C JUMP JUMPDEST SWAP5 POP PUSH2 0x2D0C DUP4 PUSH2 0x2CB0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2CE8 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2D4A PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2D62 DUP3 DUP3 PUSH2 0x2CBD JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2D87 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2D9A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x169B JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x2DB2 DUP3 DUP3 PUSH2 0x2D32 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2DD4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x2DE1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2117 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2DF3 DUP2 DUP5 PUSH2 0x2D6F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2E15 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2E2D DUP3 DUP3 PUSH2 0x2CBD JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2E4F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x2E5C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2117 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2E6E DUP2 DUP6 PUSH2 0x2DFD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2E82 DUP2 DUP5 PUSH2 0x2411 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EA2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x2EAF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2117 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ECC JUMPI PUSH2 0x2ECB PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EDA DUP5 DUP3 DUP6 ADD PUSH2 0x25FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EF8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x2F05 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1436 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F22 JUMPI PUSH2 0x2F21 PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F30 DUP5 DUP3 DUP6 ADD PUSH2 0x257C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F44 DUP3 PUSH2 0x1691 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F4F DUP4 PUSH2 0x1691 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2F67 JUMPI PUSH2 0x2F66 PUSH2 0x2046 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FC9 PUSH1 0x2A DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD4 DUP3 PUSH2 0x2F6D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FF8 DUP2 PUSH2 0x2FBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x305B PUSH1 0x26 DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3066 DUP3 PUSH2 0x2FFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x308A DUP2 PUSH2 0x304E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A7 DUP3 PUSH2 0x2135 JUMP JUMPDEST PUSH2 0x30B1 DUP2 DUP6 PUSH2 0x3091 JUMP JUMPDEST SWAP4 POP PUSH2 0x30C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2151 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30D9 DUP3 DUP5 PUSH2 0x309C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x311A PUSH1 0x1D DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3125 DUP3 PUSH2 0x30E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3149 DUP2 PUSH2 0x310D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3166 DUP3 PUSH2 0x3150 JUMP JUMPDEST PUSH2 0x3170 DUP2 DUP6 PUSH2 0x1AB8 JUMP JUMPDEST SWAP4 POP PUSH2 0x3180 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2151 JUMP JUMPDEST PUSH2 0x3189 DUP2 PUSH2 0x185F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31AE DUP2 DUP5 PUSH2 0x315B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xAF BALANCE 0xE7 0xB7 0xBB REVERT 0xC5 0xCF DUP13 0xF9 EXTCODESIZE EXP PUSH20 0x94B9B6CE0CC8BFCC445CD21D50A44617235D6473 PUSH16 0x6C634300081200330000000000000000 ","sourceMap":"1823:6043:25:-:0;;;2685:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2781:17;2762:36;;;;;;;;;;2828:22;2804:46;;;;;;;;;;2685:170;;1823:6043;;88:117:27;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1823:6043:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_callOptionalReturn_1542":{"entryPoint":4099,"id":1542,"parameterSlots":2,"returnSlots":0},"@_revert_1872":{"entryPoint":4679,"id":1872,"parameterSlots":2,"returnSlots":0},"@approveErc20_2823":{"entryPoint":3522,"id":2823,"parameterSlots":2,"returnSlots":0},"@execute_2801":{"entryPoint":315,"id":2801,"parameterSlots":4,"returnSlots":1},"@frontDoorAddress_2378":{"entryPoint":279,"id":2378,"parameterSlots":0,"returnSlots":0},"@functionCallWithValue_1697":{"entryPoint":4322,"id":1697,"parameterSlots":4,"returnSlots":1},"@functionCall_1633":{"entryPoint":4298,"id":1633,"parameterSlots":3,"returnSlots":1},"@isContract_1561":{"entryPoint":4644,"id":1561,"parameterSlots":1,"returnSlots":1},"@safeIncreaseAllowance_1400":{"entryPoint":3691,"id":1400,"parameterSlots":3,"returnSlots":0},"@safeTransfer_1294":{"entryPoint":3965,"id":1294,"parameterSlots":3,"returnSlots":0},"@sgReceive_2934":{"entryPoint":2855,"id":2934,"parameterSlots":6,"returnSlots":0},"@stargateRouterAddress_2380":{"entryPoint":243,"id":2380,"parameterSlots":0,"returnSlots":0},"@verifyCallResultFromTarget_1828":{"entryPoint":4527,"id":1828,"parameterSlots":4,"returnSlots":1},"abi_decode_available_length_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":9968,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":10471,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6443,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":10119,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6622,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":9575,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":5251,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":10073,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":10606,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":7751,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":9726,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":5337,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6509,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":10185,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_enum$_AssetType_$72":{"entryPoint":7028,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_enum$_AssetType_$72_fromMemory":{"entryPoint":9747,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int16_fromMemory":{"entryPoint":10254,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_AssetAmount_$66_memory_ptr":{"entryPoint":7292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_Asset_$57_memory_ptr":{"entryPoint":7212,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_Asset_$57_memory_ptr_fromMemory":{"entryPoint":9768,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_BridgePayload_$83_memory_ptr_fromMemory":{"entryPoint":10760,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_StargateBridgeActionArgs_$2372_memory_ptr":{"entryPoint":7772,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_fromMemory":{"entryPoint":9848,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_WorkflowStep_$109_memory_ptr_fromMemory":{"entryPoint":10275,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_Workflow_$93_memory_ptr_fromMemory":{"entryPoint":10652,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":6213,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16_fromMemory":{"entryPoint":9661,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6578,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":9596,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7671,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":5423,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":11958,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_AssetType_$72":{"entryPoint":7049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_AssetAmount_$66_memory_ptr":{"entryPoint":7372,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_BridgePayload_$83_memory_ptr_fromMemory":{"entryPoint":10888,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_StargateBridgeActionArgs_$2372_memory_ptr":{"entryPoint":8090,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint256t_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6643,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":12044,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_AssetAmount_$66_memory_ptr_to_t_struct$_AssetAmount_$66_memory_ptr":{"entryPoint":5849,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_to_t_struct$_WorkflowStepInputAsset_$122_memory_ptr":{"entryPoint":11164,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_WorkflowStep_$109_memory_ptr_to_t_struct$_WorkflowStep_$109_memory_ptr":{"entryPoint":11420,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_payable_to_t_address_payable_fromStack":{"entryPoint":8809,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address":{"entryPoint":5715,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5174,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":8212,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr":{"entryPoint":5886,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":9233,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr":{"entryPoint":11201,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr":{"entryPoint":11453,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool":{"entryPoint":11064,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":8841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8571,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12444,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_AssetType_$72_to_t_uint8":{"entryPoint":5700,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_int16_to_t_int16":{"entryPoint":5993,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_int24_to_t_int24":{"entryPoint":6021,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":12635,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_341516f60fb8577ba204e32e18bfdd1f3bcf9219299c2411ebc2e5ab9e051915_to_t_string_memory_ptr_fromStack":{"entryPoint":7458,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack":{"entryPoint":12366,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_590e660aed693aa0f9d319191c32c446b71871c11dee5c13929b633f25f7a9ac_to_t_string_memory_ptr_fromStack":{"entryPoint":6898,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5a267dde6b27d43e272bb2037a542b88bf55a0b6a5c36fa1965ab7e904ec9984_to_t_string_memory_ptr_fromStack":{"entryPoint":9508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249_to_t_string_memory_ptr_fromStack":{"entryPoint":7135,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5f03c7f0873af184bf69334aa0d702e8990fbd46f725ffc3fd003cc841705e0c_to_t_string_memory_ptr_fromStack":{"entryPoint":7604,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8e1550899f8bc1bc6c149effec0f09a9ee45bec22ed4d270ef087ee96a82320e_to_t_string_memory_ptr_fromStack":{"entryPoint":9181,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":12557,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":12220,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_AssetAmount_$66_memory_ptr_to_t_struct$_AssetAmount_$66_memory_ptr":{"entryPoint":5802,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$_Asset_$57_memory_ptr_to_t_struct$_Asset_$57_memory_ptr":{"entryPoint":5730,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$_BridgePayload_$83_memory_ptr_to_t_struct$_BridgePayload_$83_memory_ptr_fromStack":{"entryPoint":11631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_to_t_struct$_WorkflowStepInputAsset_$122_memory_ptr":{"entryPoint":11079,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$_WorkflowStepResult_$138_memory_ptr_to_t_struct$_WorkflowStepResult_$138_memory_ptr_fromStack":{"entryPoint":6036,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_WorkflowStep_$109_memory_ptr_to_t_struct$_WorkflowStep_$109_memory_ptr":{"entryPoint":11295,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_Workflow_$93_memory_ptr_to_t_struct$_Workflow_$93_memory_ptr":{"entryPoint":11570,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_Workflow_$93_memory_ptr_to_t_struct$_Workflow_$93_memory_ptr_fromStack":{"entryPoint":11773,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_lzTxObj_$1994_memory_ptr_to_t_struct$_lzTxObj_$1994_memory_ptr_fromStack":{"entryPoint":8898,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16":{"entryPoint":11005,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":8486,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":5787,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8471,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":8235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12493,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":12003,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":11917,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_struct$_BridgePayload_$83_memory_ptr__to_t_address_t_uint256_t_struct$_BridgePayload_$83_memory_ptr__fromStack_reversed":{"entryPoint":11711,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_struct$_Workflow_$93_memory_ptr_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr__to_t_address_t_uint256_t_struct$_Workflow_$93_memory_ptr_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11834,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_341516f60fb8577ba204e32e18bfdd1f3bcf9219299c2411ebc2e5ab9e051915__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7493,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12401,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_590e660aed693aa0f9d319191c32c446b71871c11dee5c13929b633f25f7a9ac__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6933,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5a267dde6b27d43e272bb2037a542b88bf55a0b6a5c36fa1965ab7e904ec9984__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9543,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7170,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5f03c7f0873af184bf69334aa0d702e8990fbd46f725ffc3fd003cc841705e0c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7639,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e1550899f8bc1bc6c149effec0f09a9ee45bec22ed4d270ef087ee96a82320e_t_uint16_t_uint256_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_string_memory_ptr_t_uint16_t_uint256_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":9327,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12592,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12255,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_WorkflowStepResult_$138_memory_ptr__to_t_struct$_WorkflowStepResult_$138_memory_ptr__fromStack_reversed":{"entryPoint":6142,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint256_t_uint256_t_address_payable_t_uint256_t_uint256_t_struct$_lzTxObj_$1994_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_uint256_t_uint256_t_address_payable_t_uint256_t_uint256_t_struct$_lzTxObj_$1994_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8978,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_address_t_uint16_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_uint16_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8628,"id":null,"parameterSlots":11,"returnSlots":1},"allocate_memory":{"entryPoint":6352,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5216,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr":{"entryPoint":9682,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr":{"entryPoint":9617,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6379,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr":{"entryPoint":5580,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr":{"entryPoint":11048,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr":{"entryPoint":10989,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr":{"entryPoint":5552,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr":{"entryPoint":11020,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr":{"entryPoint":10961,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8501,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":12624,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr":{"entryPoint":5873,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr":{"entryPoint":11188,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr":{"entryPoint":11440,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr":{"entryPoint":5563,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":9216,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr":{"entryPoint":11031,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr":{"entryPoint":10972,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":8824,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8512,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12433,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6840,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12089,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8422,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":8309,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5156,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":8791,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7716,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_AssetType_$72":{"entryPoint":5663,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int16":{"entryPoint":5980,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int24":{"entryPoint":6008,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":6176,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5124,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5777,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_AssetType_$72_to_t_uint8":{"entryPoint":5682,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":6428,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":8529,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":6303,"id":null,"parameterSlots":2,"returnSlots":0},"leftAlign_t_address":{"entryPoint":8194,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":8176,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8262,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8375,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":5596,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6965,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6256,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5241,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5236,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":7202,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":7207,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5246,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6234,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5231,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5226,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6239,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":8163,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_341516f60fb8577ba204e32e18bfdd1f3bcf9219299c2411ebc2e5ab9e051915":{"entryPoint":7417,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":12287,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_590e660aed693aa0f9d319191c32c446b71871c11dee5c13929b633f25f7a9ac":{"entryPoint":6857,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5a267dde6b27d43e272bb2037a542b88bf55a0b6a5c36fa1965ab7e904ec9984":{"entryPoint":9429,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249":{"entryPoint":7094,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5f03c7f0873af184bf69334aa0d702e8990fbd46f725ffc3fd003cc841705e0c":{"entryPoint":7525,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8e1550899f8bc1bc6c149effec0f09a9ee45bec22ed4d270ef087ee96a82320e":{"entryPoint":9140,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":12516,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":12141,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_AssetType_$72":{"entryPoint":5643,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6599,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":7728,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_AssetType_$72":{"entryPoint":7012,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int16":{"entryPoint":10231,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":6190,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6555,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:64470:27","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:27","statements":[{"nodeType":"YulAssignment","src":"62:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:27"},"nodeType":"YulFunctionCall","src":"73:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:27","type":""}],"src":"7:126:27"},{"body":{"nodeType":"YulBlock","src":"184:51:27","statements":[{"nodeType":"YulAssignment","src":"194:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:27"},"nodeType":"YulFunctionCall","src":"205:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:27","type":""}],"src":"139:96:27"},{"body":{"nodeType":"YulBlock","src":"306:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:27"},"nodeType":"YulFunctionCall","src":"328:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:27"},"nodeType":"YulFunctionCall","src":"316:37:27"},"nodeType":"YulExpressionStatement","src":"316:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:27","type":""}],"src":"241:118:27"},{"body":{"nodeType":"YulBlock","src":"463:124:27","statements":[{"nodeType":"YulAssignment","src":"473:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:27"},"nodeType":"YulFunctionCall","src":"481:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:27"},"nodeType":"YulFunctionCall","src":"562:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:27"},"nodeType":"YulFunctionCall","src":"509:71:27"},"nodeType":"YulExpressionStatement","src":"509:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:27","type":""}],"src":"365:222:27"},{"body":{"nodeType":"YulBlock","src":"633:35:27","statements":[{"nodeType":"YulAssignment","src":"643:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:27"},"nodeType":"YulFunctionCall","src":"653:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:27","type":""}],"src":"593:75:27"},{"body":{"nodeType":"YulBlock","src":"763:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:27"},"nodeType":"YulFunctionCall","src":"773:12:27"},"nodeType":"YulExpressionStatement","src":"773:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:27"},{"body":{"nodeType":"YulBlock","src":"886:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:27"},"nodeType":"YulFunctionCall","src":"896:12:27"},"nodeType":"YulExpressionStatement","src":"896:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:27"},{"body":{"nodeType":"YulBlock","src":"1009:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1026:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1029:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1019:6:27"},"nodeType":"YulFunctionCall","src":"1019:12:27"},"nodeType":"YulExpressionStatement","src":"1019:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"920:117:27"},{"body":{"nodeType":"YulBlock","src":"1132:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1149:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1152:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1142:6:27"},"nodeType":"YulFunctionCall","src":"1142:12:27"},"nodeType":"YulExpressionStatement","src":"1142:12:27"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"1043:117:27"},{"body":{"nodeType":"YulBlock","src":"1255:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1272:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1275:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1265:6:27"},"nodeType":"YulFunctionCall","src":"1265:12:27"},"nodeType":"YulExpressionStatement","src":"1265:12:27"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1166:117:27"},{"body":{"nodeType":"YulBlock","src":"1436:478:27","statements":[{"body":{"nodeType":"YulBlock","src":"1485:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1487:77:27"},"nodeType":"YulFunctionCall","src":"1487:79:27"},"nodeType":"YulExpressionStatement","src":"1487:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1464:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1472:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1460:3:27"},"nodeType":"YulFunctionCall","src":"1460:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"1479:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1456:3:27"},"nodeType":"YulFunctionCall","src":"1456:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1449:6:27"},"nodeType":"YulFunctionCall","src":"1449:35:27"},"nodeType":"YulIf","src":"1446:122:27"},{"nodeType":"YulAssignment","src":"1577:30:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1600:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1587:12:27"},"nodeType":"YulFunctionCall","src":"1587:20:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1577:6:27"}]},{"body":{"nodeType":"YulBlock","src":"1650:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1652:77:27"},"nodeType":"YulFunctionCall","src":"1652:79:27"},"nodeType":"YulExpressionStatement","src":"1652:79:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1622:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1630:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1619:2:27"},"nodeType":"YulFunctionCall","src":"1619:30:27"},"nodeType":"YulIf","src":"1616:117:27"},{"nodeType":"YulAssignment","src":"1742:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1758:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1766:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1754:3:27"},"nodeType":"YulFunctionCall","src":"1754:17:27"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1742:8:27"}]},{"body":{"nodeType":"YulBlock","src":"1825:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"1827:77:27"},"nodeType":"YulFunctionCall","src":"1827:79:27"},"nodeType":"YulExpressionStatement","src":"1827:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1790:8:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1804:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1812:4:27","type":"","value":"0x60"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1800:3:27"},"nodeType":"YulFunctionCall","src":"1800:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1786:3:27"},"nodeType":"YulFunctionCall","src":"1786:32:27"},{"name":"end","nodeType":"YulIdentifier","src":"1820:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1783:2:27"},"nodeType":"YulFunctionCall","src":"1783:41:27"},"nodeType":"YulIf","src":"1780:128:27"}]},"name":"abi_decode_t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1403:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"1411:3:27","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1419:8:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1429:6:27","type":""}],"src":"1317:597:27"},{"body":{"nodeType":"YulBlock","src":"2007:478:27","statements":[{"body":{"nodeType":"YulBlock","src":"2056:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2058:77:27"},"nodeType":"YulFunctionCall","src":"2058:79:27"},"nodeType":"YulExpressionStatement","src":"2058:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2035:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2043:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2031:3:27"},"nodeType":"YulFunctionCall","src":"2031:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"2050:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2027:3:27"},"nodeType":"YulFunctionCall","src":"2027:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2020:6:27"},"nodeType":"YulFunctionCall","src":"2020:35:27"},"nodeType":"YulIf","src":"2017:122:27"},{"nodeType":"YulAssignment","src":"2148:30:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2171:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2158:12:27"},"nodeType":"YulFunctionCall","src":"2158:20:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2148:6:27"}]},{"body":{"nodeType":"YulBlock","src":"2221:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2223:77:27"},"nodeType":"YulFunctionCall","src":"2223:79:27"},"nodeType":"YulExpressionStatement","src":"2223:79:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2193:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2201:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2190:2:27"},"nodeType":"YulFunctionCall","src":"2190:30:27"},"nodeType":"YulIf","src":"2187:117:27"},{"nodeType":"YulAssignment","src":"2313:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2329:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2337:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2325:3:27"},"nodeType":"YulFunctionCall","src":"2325:17:27"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2313:8:27"}]},{"body":{"nodeType":"YulBlock","src":"2396:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2398:77:27"},"nodeType":"YulFunctionCall","src":"2398:79:27"},"nodeType":"YulExpressionStatement","src":"2398:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2361:8:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2375:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:27","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2371:3:27"},"nodeType":"YulFunctionCall","src":"2371:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2357:3:27"},"nodeType":"YulFunctionCall","src":"2357:32:27"},{"name":"end","nodeType":"YulIdentifier","src":"2391:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2354:2:27"},"nodeType":"YulFunctionCall","src":"2354:41:27"},"nodeType":"YulIf","src":"2351:128:27"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1974:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"1982:3:27","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1990:8:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"2000:6:27","type":""}],"src":"1933:552:27"},{"body":{"nodeType":"YulBlock","src":"2657:794:27","statements":[{"body":{"nodeType":"YulBlock","src":"2703:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2705:77:27"},"nodeType":"YulFunctionCall","src":"2705:79:27"},"nodeType":"YulExpressionStatement","src":"2705:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2678:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2687:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2674:3:27"},"nodeType":"YulFunctionCall","src":"2674:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2699:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2670:3:27"},"nodeType":"YulFunctionCall","src":"2670:32:27"},"nodeType":"YulIf","src":"2667:119:27"},{"nodeType":"YulBlock","src":"2796:341:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2811:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2842:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2853:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2838:3:27"},"nodeType":"YulFunctionCall","src":"2838:17:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2825:12:27"},"nodeType":"YulFunctionCall","src":"2825:31:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2815:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2903:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2905:77:27"},"nodeType":"YulFunctionCall","src":"2905:79:27"},"nodeType":"YulExpressionStatement","src":"2905:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2875:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2883:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2872:2:27"},"nodeType":"YulFunctionCall","src":"2872:30:27"},"nodeType":"YulIf","src":"2869:117:27"},{"nodeType":"YulAssignment","src":"3000:127:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3099:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3110:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3095:3:27"},"nodeType":"YulFunctionCall","src":"3095:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3119:7:27"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"3018:76:27"},"nodeType":"YulFunctionCall","src":"3018:109:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3000:6:27"},{"name":"value1","nodeType":"YulIdentifier","src":"3008:6:27"}]}]},{"nodeType":"YulBlock","src":"3147:297:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3162:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:27"},"nodeType":"YulFunctionCall","src":"3189:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3176:12:27"},"nodeType":"YulFunctionCall","src":"3176:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3166:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3255:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3257:77:27"},"nodeType":"YulFunctionCall","src":"3257:79:27"},"nodeType":"YulExpressionStatement","src":"3257:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3227:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3235:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3224:2:27"},"nodeType":"YulFunctionCall","src":"3224:30:27"},"nodeType":"YulIf","src":"3221:117:27"},{"nodeType":"YulAssignment","src":"3352:82:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3406:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3417:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3402:3:27"},"nodeType":"YulFunctionCall","src":"3402:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3426:7:27"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3370:31:27"},"nodeType":"YulFunctionCall","src":"3370:64:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3352:6:27"},{"name":"value3","nodeType":"YulIdentifier","src":"3360:6:27"}]}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2603:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2614:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2626:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2634:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2642:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2650:6:27","type":""}],"src":"2491:960:27"},{"body":{"nodeType":"YulBlock","src":"3558:40:27","statements":[{"nodeType":"YulAssignment","src":"3569:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3585:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3579:5:27"},"nodeType":"YulFunctionCall","src":"3579:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3569:6:27"}]}]},"name":"array_length_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3541:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3551:6:27","type":""}],"src":"3457:141:27"},{"body":{"nodeType":"YulBlock","src":"3732:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3749:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"3754:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3742:6:27"},"nodeType":"YulFunctionCall","src":"3742:19:27"},"nodeType":"YulExpressionStatement","src":"3742:19:27"},{"nodeType":"YulAssignment","src":"3770:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3789:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"3794:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3785:3:27"},"nodeType":"YulFunctionCall","src":"3785:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3770:11:27"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3704:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"3709:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3720:11:27","type":""}],"src":"3604:201:27"},{"body":{"nodeType":"YulBlock","src":"3910:60:27","statements":[{"nodeType":"YulAssignment","src":"3920:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3928:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3920:4:27"}]},{"nodeType":"YulAssignment","src":"3941:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3953:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"3958:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3949:3:27"},"nodeType":"YulFunctionCall","src":"3949:14:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3941:4:27"}]}]},"name":"array_dataslot_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3897:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3905:4:27","type":""}],"src":"3811:159:27"},{"body":{"nodeType":"YulBlock","src":"4004:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4021:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4024:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4014:6:27"},"nodeType":"YulFunctionCall","src":"4014:88:27"},"nodeType":"YulExpressionStatement","src":"4014:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4118:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4121:4:27","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4111:6:27"},"nodeType":"YulFunctionCall","src":"4111:15:27"},"nodeType":"YulExpressionStatement","src":"4111:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4142:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4145:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4135:6:27"},"nodeType":"YulFunctionCall","src":"4135:15:27"},"nodeType":"YulExpressionStatement","src":"4135:15:27"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"3976:180:27"},{"body":{"nodeType":"YulBlock","src":"4217:62:27","statements":[{"body":{"nodeType":"YulBlock","src":"4251:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"4253:16:27"},"nodeType":"YulFunctionCall","src":"4253:18:27"},"nodeType":"YulExpressionStatement","src":"4253:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4240:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"4247:1:27","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4237:2:27"},"nodeType":"YulFunctionCall","src":"4237:12:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4230:6:27"},"nodeType":"YulFunctionCall","src":"4230:20:27"},"nodeType":"YulIf","src":"4227:46:27"}]},"name":"validator_assert_t_enum$_AssetType_$72","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4210:5:27","type":""}],"src":"4162:117:27"},{"body":{"nodeType":"YulBlock","src":"4342:78:27","statements":[{"nodeType":"YulAssignment","src":"4352:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"4363:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4352:7:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4408:5:27"}],"functionName":{"name":"validator_assert_t_enum$_AssetType_$72","nodeType":"YulIdentifier","src":"4369:38:27"},"nodeType":"YulFunctionCall","src":"4369:45:27"},"nodeType":"YulExpressionStatement","src":"4369:45:27"}]},"name":"cleanup_t_enum$_AssetType_$72","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4324:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4334:7:27","type":""}],"src":"4285:135:27"},{"body":{"nodeType":"YulBlock","src":"4496:65:27","statements":[{"nodeType":"YulAssignment","src":"4506:49:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4549:5:27"}],"functionName":{"name":"cleanup_t_enum$_AssetType_$72","nodeType":"YulIdentifier","src":"4519:29:27"},"nodeType":"YulFunctionCall","src":"4519:36:27"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4506:9:27"}]}]},"name":"convert_t_enum$_AssetType_$72_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4476:5:27","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4486:9:27","type":""}],"src":"4426:135:27"},{"body":{"nodeType":"YulBlock","src":"4632:76:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4649:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4695:5:27"}],"functionName":{"name":"convert_t_enum$_AssetType_$72_to_t_uint8","nodeType":"YulIdentifier","src":"4654:40:27"},"nodeType":"YulFunctionCall","src":"4654:47:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4642:6:27"},"nodeType":"YulFunctionCall","src":"4642:60:27"},"nodeType":"YulExpressionStatement","src":"4642:60:27"}]},"name":"abi_encode_t_enum$_AssetType_$72_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4620:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4627:3:27","type":""}],"src":"4567:141:27"},{"body":{"nodeType":"YulBlock","src":"4769:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4786:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4809:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4791:17:27"},"nodeType":"YulFunctionCall","src":"4791:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4779:6:27"},"nodeType":"YulFunctionCall","src":"4779:37:27"},"nodeType":"YulExpressionStatement","src":"4779:37:27"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4757:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4764:3:27","type":""}],"src":"4714:108:27"},{"body":{"nodeType":"YulBlock","src":"4962:414:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4972:26:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4988:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"4993:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4984:3:27"},"nodeType":"YulFunctionCall","src":"4984:14:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"4976:4:27","type":""}]},{"nodeType":"YulBlock","src":"5008:179:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5048:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5078:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"5085:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5074:3:27"},"nodeType":"YulFunctionCall","src":"5074:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5068:5:27"},"nodeType":"YulFunctionCall","src":"5068:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5052:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5148:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5166:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"5171:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5162:3:27"},"nodeType":"YulFunctionCall","src":"5162:14:27"}],"functionName":{"name":"abi_encode_t_enum$_AssetType_$72_to_t_uint8","nodeType":"YulIdentifier","src":"5104:43:27"},"nodeType":"YulFunctionCall","src":"5104:73:27"},"nodeType":"YulExpressionStatement","src":"5104:73:27"}]},{"nodeType":"YulBlock","src":"5197:172:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5240:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5270:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"5277:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5266:3:27"},"nodeType":"YulFunctionCall","src":"5266:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5260:5:27"},"nodeType":"YulFunctionCall","src":"5260:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5244:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5330:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5348:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"5353:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5344:3:27"},"nodeType":"YulFunctionCall","src":"5344:14:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"5296:33:27"},"nodeType":"YulFunctionCall","src":"5296:63:27"},"nodeType":"YulExpressionStatement","src":"5296:63:27"}]}]},"name":"abi_encode_t_struct$_Asset_$57_memory_ptr_to_t_struct$_Asset_$57_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4949:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4956:3:27","type":""}],"src":"4864:512:27"},{"body":{"nodeType":"YulBlock","src":"5427:32:27","statements":[{"nodeType":"YulAssignment","src":"5437:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"5448:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5437:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5409:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5419:7:27","type":""}],"src":"5382:77:27"},{"body":{"nodeType":"YulBlock","src":"5520:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5537:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5560:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5542:17:27"},"nodeType":"YulFunctionCall","src":"5542:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5530:6:27"},"nodeType":"YulFunctionCall","src":"5530:37:27"},"nodeType":"YulExpressionStatement","src":"5530:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5508:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5515:3:27","type":""}],"src":"5465:108:27"},{"body":{"nodeType":"YulBlock","src":"5737:436:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5747:26:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5763:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"5768:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5759:3:27"},"nodeType":"YulFunctionCall","src":"5759:14:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"5751:4:27","type":""}]},{"nodeType":"YulBlock","src":"5783:207:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5819:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5849:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"5856:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5845:3:27"},"nodeType":"YulFunctionCall","src":"5845:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5839:5:27"},"nodeType":"YulFunctionCall","src":"5839:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5823:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5951:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5969:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"5974:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5965:3:27"},"nodeType":"YulFunctionCall","src":"5965:14:27"}],"functionName":{"name":"abi_encode_t_struct$_Asset_$57_memory_ptr_to_t_struct$_Asset_$57_memory_ptr","nodeType":"YulIdentifier","src":"5875:75:27"},"nodeType":"YulFunctionCall","src":"5875:105:27"},"nodeType":"YulExpressionStatement","src":"5875:105:27"}]},{"nodeType":"YulBlock","src":"6000:166:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6037:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6067:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6074:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6063:3:27"},"nodeType":"YulFunctionCall","src":"6063:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6057:5:27"},"nodeType":"YulFunctionCall","src":"6057:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6041:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6127:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6145:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"6150:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6141:3:27"},"nodeType":"YulFunctionCall","src":"6141:14:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6093:33:27"},"nodeType":"YulFunctionCall","src":"6093:63:27"},"nodeType":"YulExpressionStatement","src":"6093:63:27"}]}]},"name":"abi_encode_t_struct$_AssetAmount_$66_memory_ptr_to_t_struct$_AssetAmount_$66_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5724:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5731:3:27","type":""}],"src":"5627:546:27"},{"body":{"nodeType":"YulBlock","src":"6313:153:27","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6411:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"6419:3:27"}],"functionName":{"name":"abi_encode_t_struct$_AssetAmount_$66_memory_ptr_to_t_struct$_AssetAmount_$66_memory_ptr","nodeType":"YulIdentifier","src":"6323:87:27"},"nodeType":"YulFunctionCall","src":"6323:100:27"},"nodeType":"YulExpressionStatement","src":"6323:100:27"},{"nodeType":"YulAssignment","src":"6432:28:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6450:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"6455:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6446:3:27"},"nodeType":"YulFunctionCall","src":"6446:14:27"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"6432:10:27"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_AssetAmount_$66_memory_ptr_to_t_struct$_AssetAmount_$66_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"6286:6:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6294:3:27","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"6302:10:27","type":""}],"src":"6179:287:27"},{"body":{"nodeType":"YulBlock","src":"6574:38:27","statements":[{"nodeType":"YulAssignment","src":"6584:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6596:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"6601:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6592:3:27"},"nodeType":"YulFunctionCall","src":"6592:14:27"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"6584:4:27"}]}]},"name":"array_nextElement_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6561:3:27","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"6569:4:27","type":""}],"src":"6472:140:27"},{"body":{"nodeType":"YulBlock","src":"6838:760:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6848:95:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6937:5:27"}],"functionName":{"name":"array_length_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6862:74:27"},"nodeType":"YulFunctionCall","src":"6862:81:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6852:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6952:110:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7050:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"7055:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6959:90:27"},"nodeType":"YulFunctionCall","src":"6959:103:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6952:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"7071:98:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7163:5:27"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7086:76:27"},"nodeType":"YulFunctionCall","src":"7086:83:27"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"7075:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7178:21:27","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"7192:7:27"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7182:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"7268:305:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7282:34:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7309:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7303:5:27"},"nodeType":"YulFunctionCall","src":"7303:13:27"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"7286:13:27","type":""}]},{"nodeType":"YulAssignment","src":"7329:124:27","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"7434:13:27"},{"name":"pos","nodeType":"YulIdentifier","src":"7449:3:27"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_AssetAmount_$66_memory_ptr_to_t_struct$_AssetAmount_$66_memory_ptr","nodeType":"YulIdentifier","src":"7336:97:27"},"nodeType":"YulFunctionCall","src":"7336:117:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7329:3:27"}]},{"nodeType":"YulAssignment","src":"7466:97:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7556:6:27"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7476:79:27"},"nodeType":"YulFunctionCall","src":"7476:87:27"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7466:6:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7230:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"7233:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7227:2:27"},"nodeType":"YulFunctionCall","src":"7227:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7241:18:27","statements":[{"nodeType":"YulAssignment","src":"7243:14:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7252:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"7255:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7248:3:27"},"nodeType":"YulFunctionCall","src":"7248:9:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7243:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"7212:14:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7214:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7223:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7218:1:27","type":""}]}]},"src":"7208:365:27"},{"nodeType":"YulAssignment","src":"7582:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"7589:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7582:3:27"}]}]},"name":"abi_encode_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6817:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6824:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6833:3:27","type":""}],"src":"6670:928:27"},{"body":{"nodeType":"YulBlock","src":"7647:47:27","statements":[{"nodeType":"YulAssignment","src":"7657:31:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7679:1:27","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"7682:5:27"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"7668:10:27"},"nodeType":"YulFunctionCall","src":"7668:20:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7657:7:27"}]}]},"name":"cleanup_t_int16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7629:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7639:7:27","type":""}],"src":"7604:90:27"},{"body":{"nodeType":"YulBlock","src":"7751:51:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7768:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7789:5:27"}],"functionName":{"name":"cleanup_t_int16","nodeType":"YulIdentifier","src":"7773:15:27"},"nodeType":"YulFunctionCall","src":"7773:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7761:6:27"},"nodeType":"YulFunctionCall","src":"7761:35:27"},"nodeType":"YulExpressionStatement","src":"7761:35:27"}]},"name":"abi_encode_t_int16_to_t_int16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7739:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7746:3:27","type":""}],"src":"7700:102:27"},{"body":{"nodeType":"YulBlock","src":"7851:47:27","statements":[{"nodeType":"YulAssignment","src":"7861:31:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7883:1:27","type":"","value":"2"},{"name":"value","nodeType":"YulIdentifier","src":"7886:5:27"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"7872:10:27"},"nodeType":"YulFunctionCall","src":"7872:20:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7861:7:27"}]}]},"name":"cleanup_t_int24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7833:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7843:7:27","type":""}],"src":"7808:90:27"},{"body":{"nodeType":"YulBlock","src":"7955:51:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7972:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7993:5:27"}],"functionName":{"name":"cleanup_t_int24","nodeType":"YulIdentifier","src":"7977:15:27"},"nodeType":"YulFunctionCall","src":"7977:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7965:6:27"},"nodeType":"YulFunctionCall","src":"7965:35:27"},"nodeType":"YulExpressionStatement","src":"7965:35:27"}]},"name":"abi_encode_t_int24_to_t_int24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7943:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7950:3:27","type":""}],"src":"7904:102:27"},{"body":{"nodeType":"YulBlock","src":"8218:1096:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8228:26:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8244:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8249:4:27","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8240:3:27"},"nodeType":"YulFunctionCall","src":"8240:14:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"8232:4:27","type":""}]},{"nodeType":"YulBlock","src":"8264:332:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8312:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8342:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"8349:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8338:3:27"},"nodeType":"YulFunctionCall","src":"8338:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8332:5:27"},"nodeType":"YulFunctionCall","src":"8332:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8316:12:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8380:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8385:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8376:3:27"},"nodeType":"YulFunctionCall","src":"8376:14:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8396:4:27"},{"name":"pos","nodeType":"YulIdentifier","src":"8402:3:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8392:3:27"},"nodeType":"YulFunctionCall","src":"8392:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8369:6:27"},"nodeType":"YulFunctionCall","src":"8369:38:27"},"nodeType":"YulExpressionStatement","src":"8369:38:27"},{"nodeType":"YulAssignment","src":"8420:165:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8566:12:27"},{"name":"tail","nodeType":"YulIdentifier","src":"8580:4:27"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8428:137:27"},"nodeType":"YulFunctionCall","src":"8428:157:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8420:4:27"}]}]},{"nodeType":"YulBlock","src":"8606:333:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8655:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8685:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"8692:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8681:3:27"},"nodeType":"YulFunctionCall","src":"8681:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8675:5:27"},"nodeType":"YulFunctionCall","src":"8675:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8659:12:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8723:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8728:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8719:3:27"},"nodeType":"YulFunctionCall","src":"8719:14:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8739:4:27"},{"name":"pos","nodeType":"YulIdentifier","src":"8745:3:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8735:3:27"},"nodeType":"YulFunctionCall","src":"8735:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8712:6:27"},"nodeType":"YulFunctionCall","src":"8712:38:27"},"nodeType":"YulExpressionStatement","src":"8712:38:27"},{"nodeType":"YulAssignment","src":"8763:165:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8909:12:27"},{"name":"tail","nodeType":"YulIdentifier","src":"8923:4:27"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8771:137:27"},"nodeType":"YulFunctionCall","src":"8771:157:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8763:4:27"}]}]},{"nodeType":"YulBlock","src":"8949:169:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8993:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9023:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"9030:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9019:3:27"},"nodeType":"YulFunctionCall","src":"9019:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9013:5:27"},"nodeType":"YulFunctionCall","src":"9013:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8997:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9079:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9097:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9102:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9093:3:27"},"nodeType":"YulFunctionCall","src":"9093:14:27"}],"functionName":{"name":"abi_encode_t_int16_to_t_int16","nodeType":"YulIdentifier","src":"9049:29:27"},"nodeType":"YulFunctionCall","src":"9049:59:27"},"nodeType":"YulExpressionStatement","src":"9049:59:27"}]},{"nodeType":"YulBlock","src":"9128:159:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9162:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9192:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"9199:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9188:3:27"},"nodeType":"YulFunctionCall","src":"9188:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9182:5:27"},"nodeType":"YulFunctionCall","src":"9182:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9166:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9248:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9266:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9271:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9262:3:27"},"nodeType":"YulFunctionCall","src":"9262:14:27"}],"functionName":{"name":"abi_encode_t_int24_to_t_int24","nodeType":"YulIdentifier","src":"9218:29:27"},"nodeType":"YulFunctionCall","src":"9218:59:27"},"nodeType":"YulExpressionStatement","src":"9218:59:27"}]},{"nodeType":"YulAssignment","src":"9297:11:27","value":{"name":"tail","nodeType":"YulIdentifier","src":"9304:4:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9297:3:27"}]}]},"name":"abi_encode_t_struct$_WorkflowStepResult_$138_memory_ptr_to_t_struct$_WorkflowStepResult_$138_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8197:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8204:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8213:3:27","type":""}],"src":"8074:1240:27"},{"body":{"nodeType":"YulBlock","src":"9488:245:27","statements":[{"nodeType":"YulAssignment","src":"9498:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9510:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9521:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9506:3:27"},"nodeType":"YulFunctionCall","src":"9506:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9498:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9545:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9556:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9541:3:27"},"nodeType":"YulFunctionCall","src":"9541:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9564:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"9570:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9560:3:27"},"nodeType":"YulFunctionCall","src":"9560:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9534:6:27"},"nodeType":"YulFunctionCall","src":"9534:47:27"},"nodeType":"YulExpressionStatement","src":"9534:47:27"},{"nodeType":"YulAssignment","src":"9590:136:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9712:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"9721:4:27"}],"functionName":{"name":"abi_encode_t_struct$_WorkflowStepResult_$138_memory_ptr_to_t_struct$_WorkflowStepResult_$138_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9598:113:27"},"nodeType":"YulFunctionCall","src":"9598:128:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9590:4:27"}]}]},"name":"abi_encode_tuple_t_struct$_WorkflowStepResult_$138_memory_ptr__to_t_struct$_WorkflowStepResult_$138_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9460:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9472:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9483:4:27","type":""}],"src":"9320:413:27"},{"body":{"nodeType":"YulBlock","src":"9783:45:27","statements":[{"nodeType":"YulAssignment","src":"9793:29:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9808:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"9815:6:27","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9804:3:27"},"nodeType":"YulFunctionCall","src":"9804:18:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9793:7:27"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9765:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9775:7:27","type":""}],"src":"9739:89:27"},{"body":{"nodeType":"YulBlock","src":"9876:78:27","statements":[{"body":{"nodeType":"YulBlock","src":"9932:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9941:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9944:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9934:6:27"},"nodeType":"YulFunctionCall","src":"9934:12:27"},"nodeType":"YulExpressionStatement","src":"9934:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9899:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9923:5:27"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"9906:16:27"},"nodeType":"YulFunctionCall","src":"9906:23:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9896:2:27"},"nodeType":"YulFunctionCall","src":"9896:34:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9889:6:27"},"nodeType":"YulFunctionCall","src":"9889:42:27"},"nodeType":"YulIf","src":"9886:62:27"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9869:5:27","type":""}],"src":"9834:120:27"},{"body":{"nodeType":"YulBlock","src":"10011:86:27","statements":[{"nodeType":"YulAssignment","src":"10021:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10043:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10030:12:27"},"nodeType":"YulFunctionCall","src":"10030:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10021:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10085:5:27"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"10059:25:27"},"nodeType":"YulFunctionCall","src":"10059:32:27"},"nodeType":"YulExpressionStatement","src":"10059:32:27"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9989:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"9997:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10005:5:27","type":""}],"src":"9960:137:27"},{"body":{"nodeType":"YulBlock","src":"10192:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10209:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10212:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10202:6:27"},"nodeType":"YulFunctionCall","src":"10202:12:27"},"nodeType":"YulExpressionStatement","src":"10202:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"10103:117:27"},{"body":{"nodeType":"YulBlock","src":"10274:54:27","statements":[{"nodeType":"YulAssignment","src":"10284:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10302:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"10309:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10298:3:27"},"nodeType":"YulFunctionCall","src":"10298:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10318:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10314:3:27"},"nodeType":"YulFunctionCall","src":"10314:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10294:3:27"},"nodeType":"YulFunctionCall","src":"10294:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10284:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10257:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"10267:6:27","type":""}],"src":"10226:102:27"},{"body":{"nodeType":"YulBlock","src":"10362:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10379:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10382:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10372:6:27"},"nodeType":"YulFunctionCall","src":"10372:88:27"},"nodeType":"YulExpressionStatement","src":"10372:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10476:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10479:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10469:6:27"},"nodeType":"YulFunctionCall","src":"10469:15:27"},"nodeType":"YulExpressionStatement","src":"10469:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10500:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10503:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10493:6:27"},"nodeType":"YulFunctionCall","src":"10493:15:27"},"nodeType":"YulExpressionStatement","src":"10493:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"10334:180:27"},{"body":{"nodeType":"YulBlock","src":"10563:238:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10573:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10595:6:27"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10625:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10603:21:27"},"nodeType":"YulFunctionCall","src":"10603:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10591:3:27"},"nodeType":"YulFunctionCall","src":"10591:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"10577:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"10742:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10744:16:27"},"nodeType":"YulFunctionCall","src":"10744:18:27"},"nodeType":"YulExpressionStatement","src":"10744:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10685:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"10697:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10682:2:27"},"nodeType":"YulFunctionCall","src":"10682:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10721:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"10733:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10718:2:27"},"nodeType":"YulFunctionCall","src":"10718:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10679:2:27"},"nodeType":"YulFunctionCall","src":"10679:62:27"},"nodeType":"YulIf","src":"10676:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10780:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10784:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10773:6:27"},"nodeType":"YulFunctionCall","src":"10773:22:27"},"nodeType":"YulExpressionStatement","src":"10773:22:27"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10549:6:27","type":""},{"name":"size","nodeType":"YulTypedName","src":"10557:4:27","type":""}],"src":"10520:281:27"},{"body":{"nodeType":"YulBlock","src":"10848:88:27","statements":[{"nodeType":"YulAssignment","src":"10858:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"10868:18:27"},"nodeType":"YulFunctionCall","src":"10868:20:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10858:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10917:6:27"},{"name":"size","nodeType":"YulIdentifier","src":"10925:4:27"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"10897:19:27"},"nodeType":"YulFunctionCall","src":"10897:33:27"},"nodeType":"YulExpressionStatement","src":"10897:33:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"10832:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"10841:6:27","type":""}],"src":"10807:129:27"},{"body":{"nodeType":"YulBlock","src":"11008:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"11113:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11115:16:27"},"nodeType":"YulFunctionCall","src":"11115:18:27"},"nodeType":"YulExpressionStatement","src":"11115:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11085:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11093:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11082:2:27"},"nodeType":"YulFunctionCall","src":"11082:30:27"},"nodeType":"YulIf","src":"11079:56:27"},{"nodeType":"YulAssignment","src":"11145:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11175:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11153:21:27"},"nodeType":"YulFunctionCall","src":"11153:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"11145:4:27"}]},{"nodeType":"YulAssignment","src":"11219:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"11231:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"11237:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11227:3:27"},"nodeType":"YulFunctionCall","src":"11227:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"11219:4:27"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10992:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"11003:4:27","type":""}],"src":"10942:307:27"},{"body":{"nodeType":"YulBlock","src":"11319:82:27","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11342:3:27"},{"name":"src","nodeType":"YulIdentifier","src":"11347:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"11352:6:27"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"11329:12:27"},"nodeType":"YulFunctionCall","src":"11329:30:27"},"nodeType":"YulExpressionStatement","src":"11329:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11379:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"11384:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11375:3:27"},"nodeType":"YulFunctionCall","src":"11375:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"11393:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11368:6:27"},"nodeType":"YulFunctionCall","src":"11368:27:27"},"nodeType":"YulExpressionStatement","src":"11368:27:27"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11301:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11306:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"11311:6:27","type":""}],"src":"11255:146:27"},{"body":{"nodeType":"YulBlock","src":"11490:340:27","statements":[{"nodeType":"YulAssignment","src":"11500:74:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11566:6:27"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11525:40:27"},"nodeType":"YulFunctionCall","src":"11525:48:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"11509:15:27"},"nodeType":"YulFunctionCall","src":"11509:65:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11500:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11590:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"11597:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11583:6:27"},"nodeType":"YulFunctionCall","src":"11583:21:27"},"nodeType":"YulExpressionStatement","src":"11583:21:27"},{"nodeType":"YulVariableDeclaration","src":"11613:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11628:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"11635:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11624:3:27"},"nodeType":"YulFunctionCall","src":"11624:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"11617:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"11678:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"11680:77:27"},"nodeType":"YulFunctionCall","src":"11680:79:27"},"nodeType":"YulExpressionStatement","src":"11680:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11659:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"11664:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11655:3:27"},"nodeType":"YulFunctionCall","src":"11655:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"11673:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11652:2:27"},"nodeType":"YulFunctionCall","src":"11652:25:27"},"nodeType":"YulIf","src":"11649:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11807:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"11812:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"11817:6:27"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11770:36:27"},"nodeType":"YulFunctionCall","src":"11770:54:27"},"nodeType":"YulExpressionStatement","src":"11770:54:27"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11463:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"11468:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"11476:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11484:5:27","type":""}],"src":"11407:423:27"},{"body":{"nodeType":"YulBlock","src":"11910:277:27","statements":[{"body":{"nodeType":"YulBlock","src":"11959:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11961:77:27"},"nodeType":"YulFunctionCall","src":"11961:79:27"},"nodeType":"YulExpressionStatement","src":"11961:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11938:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11946:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11934:3:27"},"nodeType":"YulFunctionCall","src":"11934:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"11953:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11930:3:27"},"nodeType":"YulFunctionCall","src":"11930:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11923:6:27"},"nodeType":"YulFunctionCall","src":"11923:35:27"},"nodeType":"YulIf","src":"11920:122:27"},{"nodeType":"YulVariableDeclaration","src":"12051:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12078:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12065:12:27"},"nodeType":"YulFunctionCall","src":"12065:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12055:6:27","type":""}]},{"nodeType":"YulAssignment","src":"12094:87:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12154:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12162:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12150:3:27"},"nodeType":"YulFunctionCall","src":"12150:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"12169:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"12177:3:27"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12103:46:27"},"nodeType":"YulFunctionCall","src":"12103:78:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"12094:5:27"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11888:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"11896:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11904:5:27","type":""}],"src":"11849:338:27"},{"body":{"nodeType":"YulBlock","src":"12236:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"12293:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12302:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12305:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12295:6:27"},"nodeType":"YulFunctionCall","src":"12295:12:27"},"nodeType":"YulExpressionStatement","src":"12295:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12259:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12284:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12266:17:27"},"nodeType":"YulFunctionCall","src":"12266:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12256:2:27"},"nodeType":"YulFunctionCall","src":"12256:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12249:6:27"},"nodeType":"YulFunctionCall","src":"12249:43:27"},"nodeType":"YulIf","src":"12246:63:27"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12229:5:27","type":""}],"src":"12193:122:27"},{"body":{"nodeType":"YulBlock","src":"12373:87:27","statements":[{"nodeType":"YulAssignment","src":"12383:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12405:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12392:12:27"},"nodeType":"YulFunctionCall","src":"12392:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12383:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12448:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"12421:26:27"},"nodeType":"YulFunctionCall","src":"12421:33:27"},"nodeType":"YulExpressionStatement","src":"12421:33:27"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12351:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"12359:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12367:5:27","type":""}],"src":"12321:139:27"},{"body":{"nodeType":"YulBlock","src":"12509:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"12566:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12575:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12578:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12568:6:27"},"nodeType":"YulFunctionCall","src":"12568:12:27"},"nodeType":"YulExpressionStatement","src":"12568:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12532:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12557:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12539:17:27"},"nodeType":"YulFunctionCall","src":"12539:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12529:2:27"},"nodeType":"YulFunctionCall","src":"12529:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12522:6:27"},"nodeType":"YulFunctionCall","src":"12522:43:27"},"nodeType":"YulIf","src":"12519:63:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12502:5:27","type":""}],"src":"12466:122:27"},{"body":{"nodeType":"YulBlock","src":"12646:87:27","statements":[{"nodeType":"YulAssignment","src":"12656:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12678:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12665:12:27"},"nodeType":"YulFunctionCall","src":"12665:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12656:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12721:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"12694:26:27"},"nodeType":"YulFunctionCall","src":"12694:33:27"},"nodeType":"YulExpressionStatement","src":"12694:33:27"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12624:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"12632:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12640:5:27","type":""}],"src":"12594:139:27"},{"body":{"nodeType":"YulBlock","src":"12907:1243:27","statements":[{"body":{"nodeType":"YulBlock","src":"12954:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12956:77:27"},"nodeType":"YulFunctionCall","src":"12956:79:27"},"nodeType":"YulExpressionStatement","src":"12956:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12928:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"12937:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12924:3:27"},"nodeType":"YulFunctionCall","src":"12924:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"12949:3:27","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12920:3:27"},"nodeType":"YulFunctionCall","src":"12920:33:27"},"nodeType":"YulIf","src":"12917:120:27"},{"nodeType":"YulBlock","src":"13047:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13062:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13076:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13066:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13091:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13125:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"13136:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13121:3:27"},"nodeType":"YulFunctionCall","src":"13121:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13145:7:27"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"13101:19:27"},"nodeType":"YulFunctionCall","src":"13101:52:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13091:6:27"}]}]},{"nodeType":"YulBlock","src":"13173:287:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13188:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13219:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13230:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13215:3:27"},"nodeType":"YulFunctionCall","src":"13215:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13202:12:27"},"nodeType":"YulFunctionCall","src":"13202:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13192:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"13281:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13283:77:27"},"nodeType":"YulFunctionCall","src":"13283:79:27"},"nodeType":"YulExpressionStatement","src":"13283:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13253:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"13261:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13250:2:27"},"nodeType":"YulFunctionCall","src":"13250:30:27"},"nodeType":"YulIf","src":"13247:117:27"},{"nodeType":"YulAssignment","src":"13378:72:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13422:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"13433:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13418:3:27"},"nodeType":"YulFunctionCall","src":"13418:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13442:7:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13388:29:27"},"nodeType":"YulFunctionCall","src":"13388:62:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13378:6:27"}]}]},{"nodeType":"YulBlock","src":"13470:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13485:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13499:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13489:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13515:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13550:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"13561:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13546:3:27"},"nodeType":"YulFunctionCall","src":"13546:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13570:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13525:20:27"},"nodeType":"YulFunctionCall","src":"13525:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13515:6:27"}]}]},{"nodeType":"YulBlock","src":"13598:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13613:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13627:2:27","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13617:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13643:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13678:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"13689:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13674:3:27"},"nodeType":"YulFunctionCall","src":"13674:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13698:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13653:20:27"},"nodeType":"YulFunctionCall","src":"13653:53:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13643:6:27"}]}]},{"nodeType":"YulBlock","src":"13726:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13741:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"13755:3:27","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13745:6:27","type":""}]},{"nodeType":"YulAssignment","src":"13772:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13807:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"13818:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13803:3:27"},"nodeType":"YulFunctionCall","src":"13803:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13827:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13782:20:27"},"nodeType":"YulFunctionCall","src":"13782:53:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"13772:6:27"}]}]},{"nodeType":"YulBlock","src":"13855:288:27","statements":[{"nodeType":"YulVariableDeclaration","src":"13870:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13901:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13912:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13897:3:27"},"nodeType":"YulFunctionCall","src":"13897:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13884:12:27"},"nodeType":"YulFunctionCall","src":"13884:33:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13874:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"13964:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13966:77:27"},"nodeType":"YulFunctionCall","src":"13966:79:27"},"nodeType":"YulExpressionStatement","src":"13966:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13936:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"13944:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13933:2:27"},"nodeType":"YulFunctionCall","src":"13933:30:27"},"nodeType":"YulIf","src":"13930:117:27"},{"nodeType":"YulAssignment","src":"14061:72:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14105:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"14116:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14101:3:27"},"nodeType":"YulFunctionCall","src":"14101:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14125:7:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14071:29:27"},"nodeType":"YulFunctionCall","src":"14071:62:27"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"14061:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint256t_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12837:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12848:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12860:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12868:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12876:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12884:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12892:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"12900:6:27","type":""}],"src":"12739:1411:27"},{"body":{"nodeType":"YulBlock","src":"14252:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14269:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"14274:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14262:6:27"},"nodeType":"YulFunctionCall","src":"14262:19:27"},"nodeType":"YulExpressionStatement","src":"14262:19:27"},{"nodeType":"YulAssignment","src":"14290:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14309:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14314:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14305:3:27"},"nodeType":"YulFunctionCall","src":"14305:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"14290:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14224:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"14229:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14240:11:27","type":""}],"src":"14156:169:27"},{"body":{"nodeType":"YulBlock","src":"14437:72:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14459:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"14467:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14455:3:27"},"nodeType":"YulFunctionCall","src":"14455:14:27"},{"hexValue":"7468657265206d757374206265203220696e70757420617373657473","kind":"string","nodeType":"YulLiteral","src":"14471:30:27","type":"","value":"there must be 2 input assets"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14448:6:27"},"nodeType":"YulFunctionCall","src":"14448:54:27"},"nodeType":"YulExpressionStatement","src":"14448:54:27"}]},"name":"store_literal_in_memory_590e660aed693aa0f9d319191c32c446b71871c11dee5c13929b633f25f7a9ac","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14429:6:27","type":""}],"src":"14331:178:27"},{"body":{"nodeType":"YulBlock","src":"14661:220:27","statements":[{"nodeType":"YulAssignment","src":"14671:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14737:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14742:2:27","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14678:58:27"},"nodeType":"YulFunctionCall","src":"14678:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14671:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14843:3:27"}],"functionName":{"name":"store_literal_in_memory_590e660aed693aa0f9d319191c32c446b71871c11dee5c13929b633f25f7a9ac","nodeType":"YulIdentifier","src":"14754:88:27"},"nodeType":"YulFunctionCall","src":"14754:93:27"},"nodeType":"YulExpressionStatement","src":"14754:93:27"},{"nodeType":"YulAssignment","src":"14856:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14867:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14872:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14863:3:27"},"nodeType":"YulFunctionCall","src":"14863:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14856:3:27"}]}]},"name":"abi_encode_t_stringliteral_590e660aed693aa0f9d319191c32c446b71871c11dee5c13929b633f25f7a9ac_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14649:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14657:3:27","type":""}],"src":"14515:366:27"},{"body":{"nodeType":"YulBlock","src":"15058:248:27","statements":[{"nodeType":"YulAssignment","src":"15068:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15080:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15091:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15076:3:27"},"nodeType":"YulFunctionCall","src":"15076:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15068:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15115:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15126:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15111:3:27"},"nodeType":"YulFunctionCall","src":"15111:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15134:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"15140:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15130:3:27"},"nodeType":"YulFunctionCall","src":"15130:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15104:6:27"},"nodeType":"YulFunctionCall","src":"15104:47:27"},"nodeType":"YulExpressionStatement","src":"15104:47:27"},{"nodeType":"YulAssignment","src":"15160:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15294:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_590e660aed693aa0f9d319191c32c446b71871c11dee5c13929b633f25f7a9ac_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15168:124:27"},"nodeType":"YulFunctionCall","src":"15168:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15160:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_590e660aed693aa0f9d319191c32c446b71871c11dee5c13929b633f25f7a9ac__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15038:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15053:4:27","type":""}],"src":"14887:419:27"},{"body":{"nodeType":"YulBlock","src":"15340:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15357:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15360:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15350:6:27"},"nodeType":"YulFunctionCall","src":"15350:88:27"},"nodeType":"YulExpressionStatement","src":"15350:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15454:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15457:4:27","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15447:6:27"},"nodeType":"YulFunctionCall","src":"15447:15:27"},"nodeType":"YulExpressionStatement","src":"15447:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15478:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15481:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15471:6:27"},"nodeType":"YulFunctionCall","src":"15471:15:27"},"nodeType":"YulExpressionStatement","src":"15471:15:27"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"15312:180:27"},{"body":{"nodeType":"YulBlock","src":"15553:56:27","statements":[{"body":{"nodeType":"YulBlock","src":"15587:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15596:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15599:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15589:6:27"},"nodeType":"YulFunctionCall","src":"15589:12:27"},"nodeType":"YulExpressionStatement","src":"15589:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15576:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"15583:1:27","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15573:2:27"},"nodeType":"YulFunctionCall","src":"15573:12:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15566:6:27"},"nodeType":"YulFunctionCall","src":"15566:20:27"},"nodeType":"YulIf","src":"15563:40:27"}]},"name":"validator_revert_t_enum$_AssetType_$72","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15546:5:27","type":""}],"src":"15498:111:27"},{"body":{"nodeType":"YulBlock","src":"15679:99:27","statements":[{"nodeType":"YulAssignment","src":"15689:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15711:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15698:12:27"},"nodeType":"YulFunctionCall","src":"15698:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15689:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15766:5:27"}],"functionName":{"name":"validator_revert_t_enum$_AssetType_$72","nodeType":"YulIdentifier","src":"15727:38:27"},"nodeType":"YulFunctionCall","src":"15727:45:27"},"nodeType":"YulExpressionStatement","src":"15727:45:27"}]},"name":"abi_decode_t_enum$_AssetType_$72","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15657:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"15665:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15673:5:27","type":""}],"src":"15615:163:27"},{"body":{"nodeType":"YulBlock","src":"15862:275:27","statements":[{"body":{"nodeType":"YulBlock","src":"15908:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15910:77:27"},"nodeType":"YulFunctionCall","src":"15910:79:27"},"nodeType":"YulExpressionStatement","src":"15910:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15883:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"15892:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15879:3:27"},"nodeType":"YulFunctionCall","src":"15879:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"15904:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15875:3:27"},"nodeType":"YulFunctionCall","src":"15875:32:27"},"nodeType":"YulIf","src":"15872:119:27"},{"nodeType":"YulBlock","src":"16001:129:27","statements":[{"nodeType":"YulVariableDeclaration","src":"16016:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"16030:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16020:6:27","type":""}]},{"nodeType":"YulAssignment","src":"16045:75:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16092:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"16103:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16088:3:27"},"nodeType":"YulFunctionCall","src":"16088:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16112:7:27"}],"functionName":{"name":"abi_decode_t_enum$_AssetType_$72","nodeType":"YulIdentifier","src":"16055:32:27"},"nodeType":"YulFunctionCall","src":"16055:65:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16045:6:27"}]}]}]},"name":"abi_decode_tuple_t_enum$_AssetType_$72","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15832:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15843:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15855:6:27","type":""}],"src":"15784:353:27"},{"body":{"nodeType":"YulBlock","src":"16249:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16271:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"16279:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16267:3:27"},"nodeType":"YulFunctionCall","src":"16267:14:27"},{"hexValue":"6f6e6520696e707574206173736574206d75737420626520616e204552433230","kind":"string","nodeType":"YulLiteral","src":"16283:34:27","type":"","value":"one input asset must be an ERC20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16260:6:27"},"nodeType":"YulFunctionCall","src":"16260:58:27"},"nodeType":"YulExpressionStatement","src":"16260:58:27"}]},"name":"store_literal_in_memory_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16241:6:27","type":""}],"src":"16143:182:27"},{"body":{"nodeType":"YulBlock","src":"16477:220:27","statements":[{"nodeType":"YulAssignment","src":"16487:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16553:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16558:2:27","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16494:58:27"},"nodeType":"YulFunctionCall","src":"16494:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16487:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16659:3:27"}],"functionName":{"name":"store_literal_in_memory_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249","nodeType":"YulIdentifier","src":"16570:88:27"},"nodeType":"YulFunctionCall","src":"16570:93:27"},"nodeType":"YulExpressionStatement","src":"16570:93:27"},{"nodeType":"YulAssignment","src":"16672:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16683:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16688:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16679:3:27"},"nodeType":"YulFunctionCall","src":"16679:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16672:3:27"}]}]},"name":"abi_encode_t_stringliteral_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16465:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16473:3:27","type":""}],"src":"16331:366:27"},{"body":{"nodeType":"YulBlock","src":"16874:248:27","statements":[{"nodeType":"YulAssignment","src":"16884:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16896:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16907:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16892:3:27"},"nodeType":"YulFunctionCall","src":"16892:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16884:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16931:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16942:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16927:3:27"},"nodeType":"YulFunctionCall","src":"16927:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16950:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"16956:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16946:3:27"},"nodeType":"YulFunctionCall","src":"16946:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16920:6:27"},"nodeType":"YulFunctionCall","src":"16920:47:27"},"nodeType":"YulExpressionStatement","src":"16920:47:27"},{"nodeType":"YulAssignment","src":"16976:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17110:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16984:124:27"},"nodeType":"YulFunctionCall","src":"16984:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16976:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16854:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16869:4:27","type":""}],"src":"16703:419:27"},{"body":{"nodeType":"YulBlock","src":"17217:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17234:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17237:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17227:6:27"},"nodeType":"YulFunctionCall","src":"17227:12:27"},"nodeType":"YulExpressionStatement","src":"17227:12:27"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"17128:117:27"},{"body":{"nodeType":"YulBlock","src":"17340:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17357:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17360:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17350:6:27"},"nodeType":"YulFunctionCall","src":"17350:12:27"},"nodeType":"YulExpressionStatement","src":"17350:12:27"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"17251:117:27"},{"body":{"nodeType":"YulBlock","src":"17470:519:27","statements":[{"body":{"nodeType":"YulBlock","src":"17514:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"17516:77:27"},"nodeType":"YulFunctionCall","src":"17516:79:27"},"nodeType":"YulExpressionStatement","src":"17516:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"17491:3:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"17496:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17487:3:27"},"nodeType":"YulFunctionCall","src":"17487:19:27"},{"kind":"number","nodeType":"YulLiteral","src":"17508:4:27","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17483:3:27"},"nodeType":"YulFunctionCall","src":"17483:30:27"},"nodeType":"YulIf","src":"17480:117:27"},{"nodeType":"YulAssignment","src":"17606:30:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17631:4:27","type":"","value":"0x40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"17615:15:27"},"nodeType":"YulFunctionCall","src":"17615:21:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17606:5:27"}]},{"nodeType":"YulBlock","src":"17646:167:27","statements":[{"nodeType":"YulVariableDeclaration","src":"17686:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"17700:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17690:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17726:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"17733:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17722:3:27"},"nodeType":"YulFunctionCall","src":"17722:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17777:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"17788:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17773:3:27"},"nodeType":"YulFunctionCall","src":"17773:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"17797:3:27"}],"functionName":{"name":"abi_decode_t_enum$_AssetType_$72","nodeType":"YulIdentifier","src":"17740:32:27"},"nodeType":"YulFunctionCall","src":"17740:61:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17715:6:27"},"nodeType":"YulFunctionCall","src":"17715:87:27"},"nodeType":"YulExpressionStatement","src":"17715:87:27"}]},{"nodeType":"YulBlock","src":"17823:159:27","statements":[{"nodeType":"YulVariableDeclaration","src":"17866:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"17880:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17870:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17907:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"17914:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17903:3:27"},"nodeType":"YulFunctionCall","src":"17903:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17946:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"17957:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17942:3:27"},"nodeType":"YulFunctionCall","src":"17942:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"17966:3:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17921:20:27"},"nodeType":"YulFunctionCall","src":"17921:49:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17896:6:27"},"nodeType":"YulFunctionCall","src":"17896:75:27"},"nodeType":"YulExpressionStatement","src":"17896:75:27"}]}]},"name":"abi_decode_t_struct$_Asset_$57_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17445:9:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"17456:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"17464:5:27","type":""}],"src":"17394:595:27"},{"body":{"nodeType":"YulBlock","src":"18103:518:27","statements":[{"body":{"nodeType":"YulBlock","src":"18147:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"18149:77:27"},"nodeType":"YulFunctionCall","src":"18149:79:27"},"nodeType":"YulExpressionStatement","src":"18149:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"18124:3:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"18129:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18120:3:27"},"nodeType":"YulFunctionCall","src":"18120:19:27"},{"kind":"number","nodeType":"YulLiteral","src":"18141:4:27","type":"","value":"0x60"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18116:3:27"},"nodeType":"YulFunctionCall","src":"18116:30:27"},"nodeType":"YulIf","src":"18113:117:27"},{"nodeType":"YulAssignment","src":"18239:30:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18264:4:27","type":"","value":"0x40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"18248:15:27"},"nodeType":"YulFunctionCall","src":"18248:21:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18239:5:27"}]},{"nodeType":"YulBlock","src":"18279:172:27","statements":[{"nodeType":"YulVariableDeclaration","src":"18315:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"18329:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18319:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18355:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"18362:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18351:3:27"},"nodeType":"YulFunctionCall","src":"18351:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18415:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"18426:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18411:3:27"},"nodeType":"YulFunctionCall","src":"18411:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"18435:3:27"}],"functionName":{"name":"abi_decode_t_struct$_Asset_$57_memory_ptr","nodeType":"YulIdentifier","src":"18369:41:27"},"nodeType":"YulFunctionCall","src":"18369:70:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18344:6:27"},"nodeType":"YulFunctionCall","src":"18344:96:27"},"nodeType":"YulExpressionStatement","src":"18344:96:27"}]},{"nodeType":"YulBlock","src":"18461:153:27","statements":[{"nodeType":"YulVariableDeclaration","src":"18498:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"18512:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18502:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18539:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"18546:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18535:3:27"},"nodeType":"YulFunctionCall","src":"18535:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18578:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"18589:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18574:3:27"},"nodeType":"YulFunctionCall","src":"18574:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"18598:3:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18553:20:27"},"nodeType":"YulFunctionCall","src":"18553:49:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18528:6:27"},"nodeType":"YulFunctionCall","src":"18528:75:27"},"nodeType":"YulExpressionStatement","src":"18528:75:27"}]}]},"name":"abi_decode_t_struct$_AssetAmount_$66_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18078:9:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"18089:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"18097:5:27","type":""}],"src":"18021:600:27"},{"body":{"nodeType":"YulBlock","src":"18720:290:27","statements":[{"body":{"nodeType":"YulBlock","src":"18766:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18768:77:27"},"nodeType":"YulFunctionCall","src":"18768:79:27"},"nodeType":"YulExpressionStatement","src":"18768:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18741:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"18750:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18737:3:27"},"nodeType":"YulFunctionCall","src":"18737:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"18762:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18733:3:27"},"nodeType":"YulFunctionCall","src":"18733:32:27"},"nodeType":"YulIf","src":"18730:119:27"},{"nodeType":"YulBlock","src":"18859:144:27","statements":[{"nodeType":"YulVariableDeclaration","src":"18874:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"18888:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18878:6:27","type":""}]},{"nodeType":"YulAssignment","src":"18903:90:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18965:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"18976:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18961:3:27"},"nodeType":"YulFunctionCall","src":"18961:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18985:7:27"}],"functionName":{"name":"abi_decode_t_struct$_AssetAmount_$66_memory_ptr","nodeType":"YulIdentifier","src":"18913:47:27"},"nodeType":"YulFunctionCall","src":"18913:80:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18903:6:27"}]}]}]},"name":"abi_decode_tuple_t_struct$_AssetAmount_$66_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18690:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18701:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18713:6:27","type":""}],"src":"18627:383:27"},{"body":{"nodeType":"YulBlock","src":"19122:74:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19144:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"19152:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19140:3:27"},"nodeType":"YulFunctionCall","src":"19140:14:27"},{"hexValue":"6f6e6520696e707574206173736574206d757374206265206e6174697665","kind":"string","nodeType":"YulLiteral","src":"19156:32:27","type":"","value":"one input asset must be native"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19133:6:27"},"nodeType":"YulFunctionCall","src":"19133:56:27"},"nodeType":"YulExpressionStatement","src":"19133:56:27"}]},"name":"store_literal_in_memory_341516f60fb8577ba204e32e18bfdd1f3bcf9219299c2411ebc2e5ab9e051915","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19114:6:27","type":""}],"src":"19016:180:27"},{"body":{"nodeType":"YulBlock","src":"19348:220:27","statements":[{"nodeType":"YulAssignment","src":"19358:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19424:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19429:2:27","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19365:58:27"},"nodeType":"YulFunctionCall","src":"19365:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19358:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19530:3:27"}],"functionName":{"name":"store_literal_in_memory_341516f60fb8577ba204e32e18bfdd1f3bcf9219299c2411ebc2e5ab9e051915","nodeType":"YulIdentifier","src":"19441:88:27"},"nodeType":"YulFunctionCall","src":"19441:93:27"},"nodeType":"YulExpressionStatement","src":"19441:93:27"},{"nodeType":"YulAssignment","src":"19543:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19554:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19559:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19550:3:27"},"nodeType":"YulFunctionCall","src":"19550:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19543:3:27"}]}]},"name":"abi_encode_t_stringliteral_341516f60fb8577ba204e32e18bfdd1f3bcf9219299c2411ebc2e5ab9e051915_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19336:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19344:3:27","type":""}],"src":"19202:366:27"},{"body":{"nodeType":"YulBlock","src":"19745:248:27","statements":[{"nodeType":"YulAssignment","src":"19755:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19767:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19778:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19763:3:27"},"nodeType":"YulFunctionCall","src":"19763:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19755:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19802:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19813:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19798:3:27"},"nodeType":"YulFunctionCall","src":"19798:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19821:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"19827:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19817:3:27"},"nodeType":"YulFunctionCall","src":"19817:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19791:6:27"},"nodeType":"YulFunctionCall","src":"19791:47:27"},"nodeType":"YulExpressionStatement","src":"19791:47:27"},{"nodeType":"YulAssignment","src":"19847:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19981:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_341516f60fb8577ba204e32e18bfdd1f3bcf9219299c2411ebc2e5ab9e051915_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19855:124:27"},"nodeType":"YulFunctionCall","src":"19855:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19847:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_341516f60fb8577ba204e32e18bfdd1f3bcf9219299c2411ebc2e5ab9e051915__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19725:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19740:4:27","type":""}],"src":"19574:419:27"},{"body":{"nodeType":"YulBlock","src":"20105:123:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20127:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"20135:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20123:3:27"},"nodeType":"YulFunctionCall","src":"20123:14:27"},{"hexValue":"74686520696e707574206173736574206d75737420626520616e204552433230","kind":"string","nodeType":"YulLiteral","src":"20139:34:27","type":"","value":"the input asset must be an ERC20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20116:6:27"},"nodeType":"YulFunctionCall","src":"20116:58:27"},"nodeType":"YulExpressionStatement","src":"20116:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20195:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"20203:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20191:3:27"},"nodeType":"YulFunctionCall","src":"20191:15:27"},{"hexValue":"206f72204e6174697665","kind":"string","nodeType":"YulLiteral","src":"20208:12:27","type":"","value":" or Native"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20184:6:27"},"nodeType":"YulFunctionCall","src":"20184:37:27"},"nodeType":"YulExpressionStatement","src":"20184:37:27"}]},"name":"store_literal_in_memory_5f03c7f0873af184bf69334aa0d702e8990fbd46f725ffc3fd003cc841705e0c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20097:6:27","type":""}],"src":"19999:229:27"},{"body":{"nodeType":"YulBlock","src":"20380:220:27","statements":[{"nodeType":"YulAssignment","src":"20390:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20456:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20461:2:27","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20397:58:27"},"nodeType":"YulFunctionCall","src":"20397:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20390:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20562:3:27"}],"functionName":{"name":"store_literal_in_memory_5f03c7f0873af184bf69334aa0d702e8990fbd46f725ffc3fd003cc841705e0c","nodeType":"YulIdentifier","src":"20473:88:27"},"nodeType":"YulFunctionCall","src":"20473:93:27"},"nodeType":"YulExpressionStatement","src":"20473:93:27"},{"nodeType":"YulAssignment","src":"20575:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20586:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20591:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20582:3:27"},"nodeType":"YulFunctionCall","src":"20582:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20575:3:27"}]}]},"name":"abi_encode_t_stringliteral_5f03c7f0873af184bf69334aa0d702e8990fbd46f725ffc3fd003cc841705e0c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20368:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20376:3:27","type":""}],"src":"20234:366:27"},{"body":{"nodeType":"YulBlock","src":"20777:248:27","statements":[{"nodeType":"YulAssignment","src":"20787:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20799:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20810:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20795:3:27"},"nodeType":"YulFunctionCall","src":"20795:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20787:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20834:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20845:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20830:3:27"},"nodeType":"YulFunctionCall","src":"20830:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20853:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"20859:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20849:3:27"},"nodeType":"YulFunctionCall","src":"20849:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20823:6:27"},"nodeType":"YulFunctionCall","src":"20823:47:27"},"nodeType":"YulExpressionStatement","src":"20823:47:27"},{"nodeType":"YulAssignment","src":"20879:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21013:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_5f03c7f0873af184bf69334aa0d702e8990fbd46f725ffc3fd003cc841705e0c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20887:124:27"},"nodeType":"YulFunctionCall","src":"20887:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20879:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_5f03c7f0873af184bf69334aa0d702e8990fbd46f725ffc3fd003cc841705e0c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20757:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20772:4:27","type":""}],"src":"20606:419:27"},{"body":{"nodeType":"YulBlock","src":"21097:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"21143:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21145:77:27"},"nodeType":"YulFunctionCall","src":"21145:79:27"},"nodeType":"YulExpressionStatement","src":"21145:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21118:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"21127:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21114:3:27"},"nodeType":"YulFunctionCall","src":"21114:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"21139:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21110:3:27"},"nodeType":"YulFunctionCall","src":"21110:32:27"},"nodeType":"YulIf","src":"21107:119:27"},{"nodeType":"YulBlock","src":"21236:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"21251:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"21265:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21255:6:27","type":""}]},{"nodeType":"YulAssignment","src":"21280:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21315:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"21326:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21311:3:27"},"nodeType":"YulFunctionCall","src":"21311:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21335:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"21290:20:27"},"nodeType":"YulFunctionCall","src":"21290:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21280:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21067:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21078:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21090:6:27","type":""}],"src":"21031:329:27"},{"body":{"nodeType":"YulBlock","src":"21408:48:27","statements":[{"nodeType":"YulAssignment","src":"21418:32:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21443:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21436:6:27"},"nodeType":"YulFunctionCall","src":"21436:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21429:6:27"},"nodeType":"YulFunctionCall","src":"21429:21:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21418:7:27"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21390:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21400:7:27","type":""}],"src":"21366:90:27"},{"body":{"nodeType":"YulBlock","src":"21502:76:27","statements":[{"body":{"nodeType":"YulBlock","src":"21556:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21565:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21568:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21558:6:27"},"nodeType":"YulFunctionCall","src":"21558:12:27"},"nodeType":"YulExpressionStatement","src":"21558:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21525:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21547:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"21532:14:27"},"nodeType":"YulFunctionCall","src":"21532:21:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21522:2:27"},"nodeType":"YulFunctionCall","src":"21522:32:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21515:6:27"},"nodeType":"YulFunctionCall","src":"21515:40:27"},"nodeType":"YulIf","src":"21512:60:27"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21495:5:27","type":""}],"src":"21462:116:27"},{"body":{"nodeType":"YulBlock","src":"21633:84:27","statements":[{"nodeType":"YulAssignment","src":"21643:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21665:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21652:12:27"},"nodeType":"YulFunctionCall","src":"21652:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21643:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21705:5:27"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"21681:23:27"},"nodeType":"YulFunctionCall","src":"21681:30:27"},"nodeType":"YulExpressionStatement","src":"21681:30:27"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21611:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"21619:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21627:5:27","type":""}],"src":"21584:133:27"},{"body":{"nodeType":"YulBlock","src":"21859:2416:27","statements":[{"body":{"nodeType":"YulBlock","src":"21905:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"21907:77:27"},"nodeType":"YulFunctionCall","src":"21907:79:27"},"nodeType":"YulExpressionStatement","src":"21907:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"21880:3:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"21885:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21876:3:27"},"nodeType":"YulFunctionCall","src":"21876:19:27"},{"kind":"number","nodeType":"YulLiteral","src":"21897:6:27","type":"","value":"0x0180"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21872:3:27"},"nodeType":"YulFunctionCall","src":"21872:32:27"},"nodeType":"YulIf","src":"21869:119:27"},{"nodeType":"YulAssignment","src":"21997:32:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22022:6:27","type":"","value":"0x0180"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"22006:15:27"},"nodeType":"YulFunctionCall","src":"22006:23:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21997:5:27"}]},{"nodeType":"YulBlock","src":"22039:162:27","statements":[{"nodeType":"YulVariableDeclaration","src":"22086:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"22100:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22090:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22126:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"22133:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22122:3:27"},"nodeType":"YulFunctionCall","src":"22122:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22165:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"22176:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22161:3:27"},"nodeType":"YulFunctionCall","src":"22161:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"22185:3:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"22140:20:27"},"nodeType":"YulFunctionCall","src":"22140:49:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22115:6:27"},"nodeType":"YulFunctionCall","src":"22115:75:27"},"nodeType":"YulExpressionStatement","src":"22115:75:27"}]},{"nodeType":"YulBlock","src":"22211:161:27","statements":[{"nodeType":"YulVariableDeclaration","src":"22256:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"22270:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22260:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22297:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"22304:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22293:3:27"},"nodeType":"YulFunctionCall","src":"22293:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22336:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"22347:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22332:3:27"},"nodeType":"YulFunctionCall","src":"22332:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"22356:3:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"22311:20:27"},"nodeType":"YulFunctionCall","src":"22311:49:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22286:6:27"},"nodeType":"YulFunctionCall","src":"22286:75:27"},"nodeType":"YulExpressionStatement","src":"22286:75:27"}]},{"nodeType":"YulBlock","src":"22382:156:27","statements":[{"nodeType":"YulVariableDeclaration","src":"22423:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"22437:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22427:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22464:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"22471:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22460:3:27"},"nodeType":"YulFunctionCall","src":"22460:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22502:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"22513:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22498:3:27"},"nodeType":"YulFunctionCall","src":"22498:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"22522:3:27"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"22478:19:27"},"nodeType":"YulFunctionCall","src":"22478:48:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22453:6:27"},"nodeType":"YulFunctionCall","src":"22453:74:27"},"nodeType":"YulExpressionStatement","src":"22453:74:27"}]},{"nodeType":"YulBlock","src":"22548:156:27","statements":[{"nodeType":"YulVariableDeclaration","src":"22588:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"22602:2:27","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22592:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22629:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"22636:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22625:3:27"},"nodeType":"YulFunctionCall","src":"22625:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22668:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"22679:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22664:3:27"},"nodeType":"YulFunctionCall","src":"22664:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"22688:3:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22643:20:27"},"nodeType":"YulFunctionCall","src":"22643:49:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22618:6:27"},"nodeType":"YulFunctionCall","src":"22618:75:27"},"nodeType":"YulExpressionStatement","src":"22618:75:27"}]},{"nodeType":"YulBlock","src":"22714:157:27","statements":[{"nodeType":"YulVariableDeclaration","src":"22754:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"22768:3:27","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22758:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22796:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"22803:4:27","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22792:3:27"},"nodeType":"YulFunctionCall","src":"22792:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22835:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"22846:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22831:3:27"},"nodeType":"YulFunctionCall","src":"22831:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"22855:3:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22810:20:27"},"nodeType":"YulFunctionCall","src":"22810:49:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22785:6:27"},"nodeType":"YulFunctionCall","src":"22785:75:27"},"nodeType":"YulExpressionStatement","src":"22785:75:27"}]},{"nodeType":"YulBlock","src":"22881:161:27","statements":[{"nodeType":"YulVariableDeclaration","src":"22925:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"22939:3:27","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22929:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22967:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"22974:4:27","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22963:3:27"},"nodeType":"YulFunctionCall","src":"22963:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23006:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"23017:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23002:3:27"},"nodeType":"YulFunctionCall","src":"23002:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"23026:3:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22981:20:27"},"nodeType":"YulFunctionCall","src":"22981:49:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22956:6:27"},"nodeType":"YulFunctionCall","src":"22956:75:27"},"nodeType":"YulExpressionStatement","src":"22956:75:27"}]},{"nodeType":"YulBlock","src":"23052:163:27","statements":[{"nodeType":"YulVariableDeclaration","src":"23098:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"23112:3:27","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23102:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23140:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"23147:4:27","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23136:3:27"},"nodeType":"YulFunctionCall","src":"23136:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23179:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"23190:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23175:3:27"},"nodeType":"YulFunctionCall","src":"23175:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"23199:3:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"23154:20:27"},"nodeType":"YulFunctionCall","src":"23154:49:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23129:6:27"},"nodeType":"YulFunctionCall","src":"23129:75:27"},"nodeType":"YulExpressionStatement","src":"23129:75:27"}]},{"nodeType":"YulBlock","src":"23225:160:27","statements":[{"nodeType":"YulVariableDeclaration","src":"23268:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"23282:3:27","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23272:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23310:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"23317:4:27","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23306:3:27"},"nodeType":"YulFunctionCall","src":"23306:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23349:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"23360:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23345:3:27"},"nodeType":"YulFunctionCall","src":"23345:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"23369:3:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"23324:20:27"},"nodeType":"YulFunctionCall","src":"23324:49:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23299:6:27"},"nodeType":"YulFunctionCall","src":"23299:75:27"},"nodeType":"YulExpressionStatement","src":"23299:75:27"}]},{"nodeType":"YulBlock","src":"23395:168:27","statements":[{"nodeType":"YulVariableDeclaration","src":"23447:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"23461:3:27","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23451:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23489:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"23496:6:27","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23485:3:27"},"nodeType":"YulFunctionCall","src":"23485:18:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23527:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"23538:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23523:3:27"},"nodeType":"YulFunctionCall","src":"23523:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"23547:3:27"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"23505:17:27"},"nodeType":"YulFunctionCall","src":"23505:46:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23478:6:27"},"nodeType":"YulFunctionCall","src":"23478:74:27"},"nodeType":"YulExpressionStatement","src":"23478:74:27"}]},{"nodeType":"YulBlock","src":"23573:339:27","statements":[{"nodeType":"YulVariableDeclaration","src":"23624:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23655:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23666:3:27","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23651:3:27"},"nodeType":"YulFunctionCall","src":"23651:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23638:12:27"},"nodeType":"YulFunctionCall","src":"23638:33:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23628:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"23718:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"23720:77:27"},"nodeType":"YulFunctionCall","src":"23720:79:27"},"nodeType":"YulExpressionStatement","src":"23720:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23690:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23698:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23687:2:27"},"nodeType":"YulFunctionCall","src":"23687:30:27"},"nodeType":"YulIf","src":"23684:117:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23826:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"23833:6:27","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23822:3:27"},"nodeType":"YulFunctionCall","src":"23822:18:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23876:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"23887:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23872:3:27"},"nodeType":"YulFunctionCall","src":"23872:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"23896:3:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"23842:29:27"},"nodeType":"YulFunctionCall","src":"23842:58:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23815:6:27"},"nodeType":"YulFunctionCall","src":"23815:86:27"},"nodeType":"YulExpressionStatement","src":"23815:86:27"}]},{"nodeType":"YulBlock","src":"23922:155:27","statements":[{"nodeType":"YulVariableDeclaration","src":"23958:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"23972:3:27","type":"","value":"320"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23962:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24000:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"24007:6:27","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23996:3:27"},"nodeType":"YulFunctionCall","src":"23996:18:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24041:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"24052:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24037:3:27"},"nodeType":"YulFunctionCall","src":"24037:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"24061:3:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"24016:20:27"},"nodeType":"YulFunctionCall","src":"24016:49:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23989:6:27"},"nodeType":"YulFunctionCall","src":"23989:77:27"},"nodeType":"YulExpressionStatement","src":"23989:77:27"}]},{"nodeType":"YulBlock","src":"24087:181:27","statements":[{"nodeType":"YulVariableDeclaration","src":"24152:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"24166:3:27","type":"","value":"352"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24156:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24194:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"24201:6:27","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24190:3:27"},"nodeType":"YulFunctionCall","src":"24190:18:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24232:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"24243:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24228:3:27"},"nodeType":"YulFunctionCall","src":"24228:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"24252:3:27"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"24210:17:27"},"nodeType":"YulFunctionCall","src":"24210:46:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24183:6:27"},"nodeType":"YulFunctionCall","src":"24183:74:27"},"nodeType":"YulExpressionStatement","src":"24183:74:27"}]}]},"name":"abi_decode_t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21834:9:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"21845:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21853:5:27","type":""}],"src":"21762:2513:27"},{"body":{"nodeType":"YulBlock","src":"24389:465:27","statements":[{"body":{"nodeType":"YulBlock","src":"24435:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24437:77:27"},"nodeType":"YulFunctionCall","src":"24437:79:27"},"nodeType":"YulExpressionStatement","src":"24437:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24410:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"24419:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24406:3:27"},"nodeType":"YulFunctionCall","src":"24406:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"24431:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24402:3:27"},"nodeType":"YulFunctionCall","src":"24402:32:27"},"nodeType":"YulIf","src":"24399:119:27"},{"nodeType":"YulBlock","src":"24528:319:27","statements":[{"nodeType":"YulVariableDeclaration","src":"24543:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24574:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24585:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24570:3:27"},"nodeType":"YulFunctionCall","src":"24570:17:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24557:12:27"},"nodeType":"YulFunctionCall","src":"24557:31:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24547:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"24635:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24637:77:27"},"nodeType":"YulFunctionCall","src":"24637:79:27"},"nodeType":"YulExpressionStatement","src":"24637:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24607:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"24615:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24604:2:27"},"nodeType":"YulFunctionCall","src":"24604:30:27"},"nodeType":"YulIf","src":"24601:117:27"},{"nodeType":"YulAssignment","src":"24732:105:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24809:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"24820:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24805:3:27"},"nodeType":"YulFunctionCall","src":"24805:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24829:7:27"}],"functionName":{"name":"abi_decode_t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","nodeType":"YulIdentifier","src":"24742:62:27"},"nodeType":"YulFunctionCall","src":"24742:95:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24732:6:27"}]}]}]},"name":"abi_decode_tuple_t_struct$_StargateBridgeActionArgs_$2372_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24359:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24370:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24382:6:27","type":""}],"src":"24281:573:27"},{"body":{"nodeType":"YulBlock","src":"24902:52:27","statements":[{"nodeType":"YulAssignment","src":"24912:35:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24937:2:27","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"24941:5:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"24933:3:27"},"nodeType":"YulFunctionCall","src":"24933:14:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"24912:8:27"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24883:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"24893:8:27","type":""}],"src":"24860:94:27"},{"body":{"nodeType":"YulBlock","src":"25007:47:27","statements":[{"nodeType":"YulAssignment","src":"25017:31:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25042:5:27"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"25028:13:27"},"nodeType":"YulFunctionCall","src":"25028:20:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"25017:7:27"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24989:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"24999:7:27","type":""}],"src":"24960:94:27"},{"body":{"nodeType":"YulBlock","src":"25107:53:27","statements":[{"nodeType":"YulAssignment","src":"25117:37:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25148:5:27"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"25128:19:27"},"nodeType":"YulFunctionCall","src":"25128:26:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"25117:7:27"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25089:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"25099:7:27","type":""}],"src":"25060:100:27"},{"body":{"nodeType":"YulBlock","src":"25249:74:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25266:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25309:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"25291:17:27"},"nodeType":"YulFunctionCall","src":"25291:24:27"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"25271:19:27"},"nodeType":"YulFunctionCall","src":"25271:45:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25259:6:27"},"nodeType":"YulFunctionCall","src":"25259:58:27"},"nodeType":"YulExpressionStatement","src":"25259:58:27"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25237:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25244:3:27","type":""}],"src":"25166:157:27"},{"body":{"nodeType":"YulBlock","src":"25445:140:27","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25518:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"25527:3:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25456:61:27"},"nodeType":"YulFunctionCall","src":"25456:75:27"},"nodeType":"YulExpressionStatement","src":"25456:75:27"},{"nodeType":"YulAssignment","src":"25540:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25551:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"25556:2:27","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25547:3:27"},"nodeType":"YulFunctionCall","src":"25547:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25540:3:27"}]},{"nodeType":"YulAssignment","src":"25569:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"25576:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25569:3:27"}]}]},"name":"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25424:3:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25430:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25441:3:27","type":""}],"src":"25329:256:27"},{"body":{"nodeType":"YulBlock","src":"25619:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25636:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25639:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25629:6:27"},"nodeType":"YulFunctionCall","src":"25629:88:27"},"nodeType":"YulExpressionStatement","src":"25629:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25733:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25736:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25726:6:27"},"nodeType":"YulFunctionCall","src":"25726:15:27"},"nodeType":"YulExpressionStatement","src":"25726:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25757:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25760:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25750:6:27"},"nodeType":"YulFunctionCall","src":"25750:15:27"},"nodeType":"YulExpressionStatement","src":"25750:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"25591:180:27"},{"body":{"nodeType":"YulBlock","src":"25825:362:27","statements":[{"nodeType":"YulAssignment","src":"25835:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25858:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25840:17:27"},"nodeType":"YulFunctionCall","src":"25840:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"25835:1:27"}]},{"nodeType":"YulAssignment","src":"25869:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25892:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25874:17:27"},"nodeType":"YulFunctionCall","src":"25874:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"25869:1:27"}]},{"nodeType":"YulVariableDeclaration","src":"25903:28:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25926:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"25929:1:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25922:3:27"},"nodeType":"YulFunctionCall","src":"25922:9:27"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"25907:11:27","type":""}]},{"nodeType":"YulAssignment","src":"25940:41:27","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"25969:11:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25951:17:27"},"nodeType":"YulFunctionCall","src":"25951:30:27"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"25940:7:27"}]},{"body":{"nodeType":"YulBlock","src":"26158:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26160:16:27"},"nodeType":"YulFunctionCall","src":"26160:18:27"},"nodeType":"YulExpressionStatement","src":"26160:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26091:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26084:6:27"},"nodeType":"YulFunctionCall","src":"26084:9:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26114:1:27"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"26121:7:27"},{"name":"x","nodeType":"YulIdentifier","src":"26130:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"26117:3:27"},"nodeType":"YulFunctionCall","src":"26117:15:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26111:2:27"},"nodeType":"YulFunctionCall","src":"26111:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"26064:2:27"},"nodeType":"YulFunctionCall","src":"26064:83:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26044:6:27"},"nodeType":"YulFunctionCall","src":"26044:113:27"},"nodeType":"YulIf","src":"26041:139:27"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25808:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"25811:1:27","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"25817:7:27","type":""}],"src":"25777:410:27"},{"body":{"nodeType":"YulBlock","src":"26221:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26238:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26241:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26231:6:27"},"nodeType":"YulFunctionCall","src":"26231:88:27"},"nodeType":"YulExpressionStatement","src":"26231:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26335:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26338:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26328:6:27"},"nodeType":"YulFunctionCall","src":"26328:15:27"},"nodeType":"YulExpressionStatement","src":"26328:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26359:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26362:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26352:6:27"},"nodeType":"YulFunctionCall","src":"26352:15:27"},"nodeType":"YulExpressionStatement","src":"26352:15:27"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"26193:180:27"},{"body":{"nodeType":"YulBlock","src":"26421:143:27","statements":[{"nodeType":"YulAssignment","src":"26431:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26454:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26436:17:27"},"nodeType":"YulFunctionCall","src":"26436:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26431:1:27"}]},{"nodeType":"YulAssignment","src":"26465:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26488:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26470:17:27"},"nodeType":"YulFunctionCall","src":"26470:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26465:1:27"}]},{"body":{"nodeType":"YulBlock","src":"26512:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"26514:16:27"},"nodeType":"YulFunctionCall","src":"26514:18:27"},"nodeType":"YulExpressionStatement","src":"26514:18:27"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26509:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26502:6:27"},"nodeType":"YulFunctionCall","src":"26502:9:27"},"nodeType":"YulIf","src":"26499:35:27"},{"nodeType":"YulAssignment","src":"26544:14:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26553:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"26556:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"26549:3:27"},"nodeType":"YulFunctionCall","src":"26549:9:27"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"26544:1:27"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26410:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"26413:1:27","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"26419:1:27","type":""}],"src":"26379:185:27"},{"body":{"nodeType":"YulBlock","src":"26635:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26652:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26675:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26657:17:27"},"nodeType":"YulFunctionCall","src":"26657:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26645:6:27"},"nodeType":"YulFunctionCall","src":"26645:37:27"},"nodeType":"YulExpressionStatement","src":"26645:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26623:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26630:3:27","type":""}],"src":"26570:118:27"},{"body":{"nodeType":"YulBlock","src":"26757:52:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26774:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26796:5:27"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"26779:16:27"},"nodeType":"YulFunctionCall","src":"26779:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26767:6:27"},"nodeType":"YulFunctionCall","src":"26767:36:27"},"nodeType":"YulExpressionStatement","src":"26767:36:27"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26745:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26752:3:27","type":""}],"src":"26694:115:27"},{"body":{"nodeType":"YulBlock","src":"26873:40:27","statements":[{"nodeType":"YulAssignment","src":"26884:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26900:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26894:5:27"},"nodeType":"YulFunctionCall","src":"26894:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"26884:6:27"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26856:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"26866:6:27","type":""}],"src":"26815:98:27"},{"body":{"nodeType":"YulBlock","src":"27014:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27031:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"27036:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27024:6:27"},"nodeType":"YulFunctionCall","src":"27024:19:27"},"nodeType":"YulExpressionStatement","src":"27024:19:27"},{"nodeType":"YulAssignment","src":"27052:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27071:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"27076:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27067:3:27"},"nodeType":"YulFunctionCall","src":"27067:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"27052:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26986:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"26991:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"27002:11:27","type":""}],"src":"26919:168:27"},{"body":{"nodeType":"YulBlock","src":"27155:184:27","statements":[{"nodeType":"YulVariableDeclaration","src":"27165:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"27174:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"27169:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"27234:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"27259:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"27264:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27255:3:27"},"nodeType":"YulFunctionCall","src":"27255:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"27278:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"27283:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27274:3:27"},"nodeType":"YulFunctionCall","src":"27274:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27268:5:27"},"nodeType":"YulFunctionCall","src":"27268:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27248:6:27"},"nodeType":"YulFunctionCall","src":"27248:39:27"},"nodeType":"YulExpressionStatement","src":"27248:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"27195:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"27198:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27192:2:27"},"nodeType":"YulFunctionCall","src":"27192:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"27206:19:27","statements":[{"nodeType":"YulAssignment","src":"27208:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"27217:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"27220:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27213:3:27"},"nodeType":"YulFunctionCall","src":"27213:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"27208:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"27188:3:27","statements":[]},"src":"27184:113:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"27317:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"27322:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27313:3:27"},"nodeType":"YulFunctionCall","src":"27313:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"27331:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27306:6:27"},"nodeType":"YulFunctionCall","src":"27306:27:27"},"nodeType":"YulExpressionStatement","src":"27306:27:27"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"27137:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"27142:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"27147:6:27","type":""}],"src":"27093:246:27"},{"body":{"nodeType":"YulBlock","src":"27435:283:27","statements":[{"nodeType":"YulVariableDeclaration","src":"27445:52:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27491:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"27459:31:27"},"nodeType":"YulFunctionCall","src":"27459:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"27449:6:27","type":""}]},{"nodeType":"YulAssignment","src":"27506:77:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27571:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"27576:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27513:57:27"},"nodeType":"YulFunctionCall","src":"27513:70:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27506:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27631:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"27638:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27627:3:27"},"nodeType":"YulFunctionCall","src":"27627:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"27645:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"27650:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"27592:34:27"},"nodeType":"YulFunctionCall","src":"27592:65:27"},"nodeType":"YulExpressionStatement","src":"27592:65:27"},{"nodeType":"YulAssignment","src":"27666:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27677:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27704:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"27682:21:27"},"nodeType":"YulFunctionCall","src":"27682:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27673:3:27"},"nodeType":"YulFunctionCall","src":"27673:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27666:3:27"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27416:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27423:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27431:3:27","type":""}],"src":"27345:373:27"},{"body":{"nodeType":"YulBlock","src":"28090:936:27","statements":[{"nodeType":"YulAssignment","src":"28100:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28112:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28123:3:27","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28108:3:27"},"nodeType":"YulFunctionCall","src":"28108:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28100:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28181:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28194:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28205:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28190:3:27"},"nodeType":"YulFunctionCall","src":"28190:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28137:43:27"},"nodeType":"YulFunctionCall","src":"28137:71:27"},"nodeType":"YulExpressionStatement","src":"28137:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28262:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28275:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28286:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28271:3:27"},"nodeType":"YulFunctionCall","src":"28271:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28218:43:27"},"nodeType":"YulFunctionCall","src":"28218:72:27"},"nodeType":"YulExpressionStatement","src":"28218:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"28344:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28357:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28368:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28353:3:27"},"nodeType":"YulFunctionCall","src":"28353:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28300:43:27"},"nodeType":"YulFunctionCall","src":"28300:72:27"},"nodeType":"YulExpressionStatement","src":"28300:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"28424:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28437:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28448:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28433:3:27"},"nodeType":"YulFunctionCall","src":"28433:18:27"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"28382:41:27"},"nodeType":"YulFunctionCall","src":"28382:70:27"},"nodeType":"YulExpressionStatement","src":"28382:70:27"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"28506:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28519:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28530:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28515:3:27"},"nodeType":"YulFunctionCall","src":"28515:19:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28462:43:27"},"nodeType":"YulFunctionCall","src":"28462:73:27"},"nodeType":"YulExpressionStatement","src":"28462:73:27"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"28589:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28602:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28613:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28598:3:27"},"nodeType":"YulFunctionCall","src":"28598:19:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28545:43:27"},"nodeType":"YulFunctionCall","src":"28545:73:27"},"nodeType":"YulExpressionStatement","src":"28545:73:27"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"28672:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28685:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28696:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28681:3:27"},"nodeType":"YulFunctionCall","src":"28681:19:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28628:43:27"},"nodeType":"YulFunctionCall","src":"28628:73:27"},"nodeType":"YulExpressionStatement","src":"28628:73:27"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"28755:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28768:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28779:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28764:3:27"},"nodeType":"YulFunctionCall","src":"28764:19:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28711:43:27"},"nodeType":"YulFunctionCall","src":"28711:73:27"},"nodeType":"YulExpressionStatement","src":"28711:73:27"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"28838:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28851:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28862:3:27","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28847:3:27"},"nodeType":"YulFunctionCall","src":"28847:19:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28794:43:27"},"nodeType":"YulFunctionCall","src":"28794:73:27"},"nodeType":"YulExpressionStatement","src":"28794:73:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28888:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28899:3:27","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28884:3:27"},"nodeType":"YulFunctionCall","src":"28884:19:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28909:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"28915:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28905:3:27"},"nodeType":"YulFunctionCall","src":"28905:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28877:6:27"},"nodeType":"YulFunctionCall","src":"28877:49:27"},"nodeType":"YulExpressionStatement","src":"28877:49:27"},{"nodeType":"YulAssignment","src":"28935:84:27","value":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"29005:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"29014:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28943:61:27"},"nodeType":"YulFunctionCall","src":"28943:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28935:4:27"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address_t_uint16_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_uint16_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27990:9:27","type":""},{"name":"value9","nodeType":"YulTypedName","src":"28002:6:27","type":""},{"name":"value8","nodeType":"YulTypedName","src":"28010:6:27","type":""},{"name":"value7","nodeType":"YulTypedName","src":"28018:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"28026:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"28034:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"28042:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28050:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28058:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28066:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28074:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28085:4:27","type":""}],"src":"27724:1302:27"},{"body":{"nodeType":"YulBlock","src":"29085:51:27","statements":[{"nodeType":"YulAssignment","src":"29095:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29124:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"29106:17:27"},"nodeType":"YulFunctionCall","src":"29106:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"29095:7:27"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29067:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"29077:7:27","type":""}],"src":"29032:104:27"},{"body":{"nodeType":"YulBlock","src":"29223:61:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29240:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29271:5:27"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"29245:25:27"},"nodeType":"YulFunctionCall","src":"29245:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29233:6:27"},"nodeType":"YulFunctionCall","src":"29233:45:27"},"nodeType":"YulExpressionStatement","src":"29233:45:27"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29211:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29218:3:27","type":""}],"src":"29142:142:27"},{"body":{"nodeType":"YulBlock","src":"29375:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29392:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"29397:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29385:6:27"},"nodeType":"YulFunctionCall","src":"29385:19:27"},"nodeType":"YulExpressionStatement","src":"29385:19:27"},{"nodeType":"YulAssignment","src":"29413:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29432:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"29437:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29428:3:27"},"nodeType":"YulFunctionCall","src":"29428:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"29413:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29347:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"29352:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"29363:11:27","type":""}],"src":"29290:158:27"},{"body":{"nodeType":"YulBlock","src":"29534:273:27","statements":[{"nodeType":"YulVariableDeclaration","src":"29544:52:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29590:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"29558:31:27"},"nodeType":"YulFunctionCall","src":"29558:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"29548:6:27","type":""}]},{"nodeType":"YulAssignment","src":"29605:67:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29660:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"29665:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"29612:47:27"},"nodeType":"YulFunctionCall","src":"29612:60:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29605:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29720:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"29727:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29716:3:27"},"nodeType":"YulFunctionCall","src":"29716:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"29734:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"29739:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"29681:34:27"},"nodeType":"YulFunctionCall","src":"29681:65:27"},"nodeType":"YulExpressionStatement","src":"29681:65:27"},{"nodeType":"YulAssignment","src":"29755:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29766:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29793:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"29771:21:27"},"nodeType":"YulFunctionCall","src":"29771:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29762:3:27"},"nodeType":"YulFunctionCall","src":"29762:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29755:3:27"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29515:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29522:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29530:3:27","type":""}],"src":"29454:353:27"},{"body":{"nodeType":"YulBlock","src":"30009:683:27","statements":[{"nodeType":"YulVariableDeclaration","src":"30019:26:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30035:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"30040:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30031:3:27"},"nodeType":"YulFunctionCall","src":"30031:14:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"30023:4:27","type":""}]},{"nodeType":"YulBlock","src":"30055:173:27","statements":[{"nodeType":"YulVariableDeclaration","src":"30099:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30129:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"30136:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30125:3:27"},"nodeType":"YulFunctionCall","src":"30125:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30119:5:27"},"nodeType":"YulFunctionCall","src":"30119:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"30103:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"30189:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30207:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"30212:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30203:3:27"},"nodeType":"YulFunctionCall","src":"30203:14:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"30155:33:27"},"nodeType":"YulFunctionCall","src":"30155:63:27"},"nodeType":"YulExpressionStatement","src":"30155:63:27"}]},{"nodeType":"YulBlock","src":"30238:175:27","statements":[{"nodeType":"YulVariableDeclaration","src":"30284:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30314:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"30321:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30310:3:27"},"nodeType":"YulFunctionCall","src":"30310:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30304:5:27"},"nodeType":"YulFunctionCall","src":"30304:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"30288:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"30374:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30392:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"30397:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30388:3:27"},"nodeType":"YulFunctionCall","src":"30388:14:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"30340:33:27"},"nodeType":"YulFunctionCall","src":"30340:63:27"},"nodeType":"YulExpressionStatement","src":"30340:63:27"}]},{"nodeType":"YulBlock","src":"30423:242:27","statements":[{"nodeType":"YulVariableDeclaration","src":"30467:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30497:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"30504:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30493:3:27"},"nodeType":"YulFunctionCall","src":"30493:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30487:5:27"},"nodeType":"YulFunctionCall","src":"30487:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"30471:12:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30535:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"30540:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30531:3:27"},"nodeType":"YulFunctionCall","src":"30531:14:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30551:4:27"},{"name":"pos","nodeType":"YulIdentifier","src":"30557:3:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30547:3:27"},"nodeType":"YulFunctionCall","src":"30547:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30524:6:27"},"nodeType":"YulFunctionCall","src":"30524:38:27"},"nodeType":"YulExpressionStatement","src":"30524:38:27"},{"nodeType":"YulAssignment","src":"30575:79:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"30635:12:27"},{"name":"tail","nodeType":"YulIdentifier","src":"30649:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"30583:51:27"},"nodeType":"YulFunctionCall","src":"30583:71:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30575:4:27"}]}]},{"nodeType":"YulAssignment","src":"30675:11:27","value":{"name":"tail","nodeType":"YulIdentifier","src":"30682:4:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30675:3:27"}]}]},"name":"abi_encode_t_struct$_lzTxObj_$1994_memory_ptr_to_t_struct$_lzTxObj_$1994_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29988:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29995:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30004:3:27","type":""}],"src":"29885:807:27"},{"body":{"nodeType":"YulBlock","src":"31120:1039:27","statements":[{"nodeType":"YulAssignment","src":"31130:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31142:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31153:3:27","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31138:3:27"},"nodeType":"YulFunctionCall","src":"31138:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31130:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31209:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31222:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31233:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31218:3:27"},"nodeType":"YulFunctionCall","src":"31218:17:27"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"31167:41:27"},"nodeType":"YulFunctionCall","src":"31167:69:27"},"nodeType":"YulExpressionStatement","src":"31167:69:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31290:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31303:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31314:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31299:3:27"},"nodeType":"YulFunctionCall","src":"31299:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31246:43:27"},"nodeType":"YulFunctionCall","src":"31246:72:27"},"nodeType":"YulExpressionStatement","src":"31246:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31372:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31385:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31396:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31381:3:27"},"nodeType":"YulFunctionCall","src":"31381:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31328:43:27"},"nodeType":"YulFunctionCall","src":"31328:72:27"},"nodeType":"YulExpressionStatement","src":"31328:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"31470:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31483:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31494:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31479:3:27"},"nodeType":"YulFunctionCall","src":"31479:18:27"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"31410:59:27"},"nodeType":"YulFunctionCall","src":"31410:88:27"},"nodeType":"YulExpressionStatement","src":"31410:88:27"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"31552:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31565:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31576:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31561:3:27"},"nodeType":"YulFunctionCall","src":"31561:19:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31508:43:27"},"nodeType":"YulFunctionCall","src":"31508:73:27"},"nodeType":"YulExpressionStatement","src":"31508:73:27"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"31635:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31648:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31659:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31644:3:27"},"nodeType":"YulFunctionCall","src":"31644:19:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31591:43:27"},"nodeType":"YulFunctionCall","src":"31591:73:27"},"nodeType":"YulExpressionStatement","src":"31591:73:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31685:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31696:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31681:3:27"},"nodeType":"YulFunctionCall","src":"31681:19:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31706:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"31712:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31702:3:27"},"nodeType":"YulFunctionCall","src":"31702:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31674:6:27"},"nodeType":"YulFunctionCall","src":"31674:49:27"},"nodeType":"YulExpressionStatement","src":"31674:49:27"},{"nodeType":"YulAssignment","src":"31732:116:27","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"31834:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"31843:4:27"}],"functionName":{"name":"abi_encode_t_struct$_lzTxObj_$1994_memory_ptr_to_t_struct$_lzTxObj_$1994_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31740:93:27"},"nodeType":"YulFunctionCall","src":"31740:108:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31732:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31869:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31880:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31865:3:27"},"nodeType":"YulFunctionCall","src":"31865:19:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31890:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"31896:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31886:3:27"},"nodeType":"YulFunctionCall","src":"31886:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31858:6:27"},"nodeType":"YulFunctionCall","src":"31858:49:27"},"nodeType":"YulExpressionStatement","src":"31858:49:27"},{"nodeType":"YulAssignment","src":"31916:84:27","value":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"31986:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"31995:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31924:61:27"},"nodeType":"YulFunctionCall","src":"31924:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31916:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32021:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"32032:3:27","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32017:3:27"},"nodeType":"YulFunctionCall","src":"32017:19:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32042:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"32048:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32038:3:27"},"nodeType":"YulFunctionCall","src":"32038:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32010:6:27"},"nodeType":"YulFunctionCall","src":"32010:49:27"},"nodeType":"YulExpressionStatement","src":"32010:49:27"},{"nodeType":"YulAssignment","src":"32068:84:27","value":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"32138:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"32147:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32076:61:27"},"nodeType":"YulFunctionCall","src":"32076:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32068:4:27"}]}]},"name":"abi_encode_tuple_t_uint16_t_uint256_t_uint256_t_address_payable_t_uint256_t_uint256_t_struct$_lzTxObj_$1994_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_uint256_t_uint256_t_address_payable_t_uint256_t_uint256_t_struct$_lzTxObj_$1994_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31028:9:27","type":""},{"name":"value8","nodeType":"YulTypedName","src":"31040:6:27","type":""},{"name":"value7","nodeType":"YulTypedName","src":"31048:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"31056:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"31064:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"31072:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"31080:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31088:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31096:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31104:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31115:4:27","type":""}],"src":"30698:1461:27"},{"body":{"nodeType":"YulBlock","src":"32271:59:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32293:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"32301:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32289:3:27"},"nodeType":"YulFunctionCall","src":"32289:14:27"},{"hexValue":"73746172676174652d627269646765","kind":"string","nodeType":"YulLiteral","src":"32305:17:27","type":"","value":"stargate-bridge"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32282:6:27"},"nodeType":"YulFunctionCall","src":"32282:41:27"},"nodeType":"YulExpressionStatement","src":"32282:41:27"}]},"name":"store_literal_in_memory_8e1550899f8bc1bc6c149effec0f09a9ee45bec22ed4d270ef087ee96a82320e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32263:6:27","type":""}],"src":"32165:165:27"},{"body":{"nodeType":"YulBlock","src":"32482:220:27","statements":[{"nodeType":"YulAssignment","src":"32492:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32558:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"32563:2:27","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32499:58:27"},"nodeType":"YulFunctionCall","src":"32499:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32492:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32664:3:27"}],"functionName":{"name":"store_literal_in_memory_8e1550899f8bc1bc6c149effec0f09a9ee45bec22ed4d270ef087ee96a82320e","nodeType":"YulIdentifier","src":"32575:88:27"},"nodeType":"YulFunctionCall","src":"32575:93:27"},"nodeType":"YulExpressionStatement","src":"32575:93:27"},{"nodeType":"YulAssignment","src":"32677:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32688:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"32693:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32684:3:27"},"nodeType":"YulFunctionCall","src":"32684:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32677:3:27"}]}]},"name":"abi_encode_t_stringliteral_8e1550899f8bc1bc6c149effec0f09a9ee45bec22ed4d270ef087ee96a82320e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32470:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32478:3:27","type":""}],"src":"32336:366:27"},{"body":{"nodeType":"YulBlock","src":"32846:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32863:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"32868:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32856:6:27"},"nodeType":"YulFunctionCall","src":"32856:19:27"},"nodeType":"YulExpressionStatement","src":"32856:19:27"},{"nodeType":"YulAssignment","src":"32884:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32903:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"32908:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32899:3:27"},"nodeType":"YulFunctionCall","src":"32899:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"32884:11:27"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32818:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"32823:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"32834:11:27","type":""}],"src":"32708:211:27"},{"body":{"nodeType":"YulBlock","src":"33155:770:27","statements":[{"nodeType":"YulVariableDeclaration","src":"33165:95:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33254:5:27"}],"functionName":{"name":"array_length_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"33179:74:27"},"nodeType":"YulFunctionCall","src":"33179:81:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"33169:6:27","type":""}]},{"nodeType":"YulAssignment","src":"33269:120:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33377:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"33382:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33276:100:27"},"nodeType":"YulFunctionCall","src":"33276:113:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33269:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"33398:98:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33490:5:27"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"33413:76:27"},"nodeType":"YulFunctionCall","src":"33413:83:27"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"33402:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33505:21:27","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"33519:7:27"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"33509:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"33595:305:27","statements":[{"nodeType":"YulVariableDeclaration","src":"33609:34:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"33636:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33630:5:27"},"nodeType":"YulFunctionCall","src":"33630:13:27"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"33613:13:27","type":""}]},{"nodeType":"YulAssignment","src":"33656:124:27","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"33761:13:27"},{"name":"pos","nodeType":"YulIdentifier","src":"33776:3:27"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_AssetAmount_$66_memory_ptr_to_t_struct$_AssetAmount_$66_memory_ptr","nodeType":"YulIdentifier","src":"33663:97:27"},"nodeType":"YulFunctionCall","src":"33663:117:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33656:3:27"}]},{"nodeType":"YulAssignment","src":"33793:97:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"33883:6:27"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"33803:79:27"},"nodeType":"YulFunctionCall","src":"33803:87:27"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"33793:6:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"33557:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"33560:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33554:2:27"},"nodeType":"YulFunctionCall","src":"33554:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"33568:18:27","statements":[{"nodeType":"YulAssignment","src":"33570:14:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"33579:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"33582:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33575:3:27"},"nodeType":"YulFunctionCall","src":"33575:9:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"33570:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"33539:14:27","statements":[{"nodeType":"YulVariableDeclaration","src":"33541:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"33550:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"33545:1:27","type":""}]}]},"src":"33535:365:27"},{"nodeType":"YulAssignment","src":"33909:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"33916:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33909:3:27"}]}]},"name":"abi_encode_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33134:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"33141:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33150:3:27","type":""}],"src":"32977:948:27"},{"body":{"nodeType":"YulBlock","src":"34334:800:27","statements":[{"nodeType":"YulAssignment","src":"34344:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34356:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"34367:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34352:3:27"},"nodeType":"YulFunctionCall","src":"34352:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34344:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34392:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"34403:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34388:3:27"},"nodeType":"YulFunctionCall","src":"34388:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34411:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"34417:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34407:3:27"},"nodeType":"YulFunctionCall","src":"34407:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34381:6:27"},"nodeType":"YulFunctionCall","src":"34381:47:27"},"nodeType":"YulExpressionStatement","src":"34381:47:27"},{"nodeType":"YulAssignment","src":"34437:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34571:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_8e1550899f8bc1bc6c149effec0f09a9ee45bec22ed4d270ef087ee96a82320e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34445:124:27"},"nodeType":"YulFunctionCall","src":"34445:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34437:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34628:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34641:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"34652:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34637:3:27"},"nodeType":"YulFunctionCall","src":"34637:18:27"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"34586:41:27"},"nodeType":"YulFunctionCall","src":"34586:70:27"},"nodeType":"YulExpressionStatement","src":"34586:70:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34710:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34723:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"34734:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34719:3:27"},"nodeType":"YulFunctionCall","src":"34719:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34666:43:27"},"nodeType":"YulFunctionCall","src":"34666:72:27"},"nodeType":"YulExpressionStatement","src":"34666:72:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34759:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"34770:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34755:3:27"},"nodeType":"YulFunctionCall","src":"34755:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34779:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"34785:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34775:3:27"},"nodeType":"YulFunctionCall","src":"34775:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34748:6:27"},"nodeType":"YulFunctionCall","src":"34748:48:27"},"nodeType":"YulExpressionStatement","src":"34748:48:27"},{"nodeType":"YulAssignment","src":"34805:170:27","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"34961:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"34970:4:27"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34813:147:27"},"nodeType":"YulFunctionCall","src":"34813:162:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34805:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34996:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"35007:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34992:3:27"},"nodeType":"YulFunctionCall","src":"34992:19:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35017:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"35023:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35013:3:27"},"nodeType":"YulFunctionCall","src":"35013:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34985:6:27"},"nodeType":"YulFunctionCall","src":"34985:49:27"},"nodeType":"YulExpressionStatement","src":"34985:49:27"},{"nodeType":"YulAssignment","src":"35043:84:27","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"35113:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"35122:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35051:61:27"},"nodeType":"YulFunctionCall","src":"35051:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35043:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e1550899f8bc1bc6c149effec0f09a9ee45bec22ed4d270ef087ee96a82320e_t_uint16_t_uint256_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_string_memory_ptr_t_uint16_t_uint256_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34282:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"34294:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"34302:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34310:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34318:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34329:4:27","type":""}],"src":"33931:1203:27"},{"body":{"nodeType":"YulBlock","src":"35246:125:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35268:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"35276:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35264:3:27"},"nodeType":"YulFunctionCall","src":"35264:14:27"},{"hexValue":"6f6e6c79205374617267617465206973207065726d697474656420746f206361","kind":"string","nodeType":"YulLiteral","src":"35280:34:27","type":"","value":"only Stargate is permitted to ca"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35257:6:27"},"nodeType":"YulFunctionCall","src":"35257:58:27"},"nodeType":"YulExpressionStatement","src":"35257:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35336:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"35344:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35332:3:27"},"nodeType":"YulFunctionCall","src":"35332:15:27"},{"hexValue":"6c6c20736752656365697665","kind":"string","nodeType":"YulLiteral","src":"35349:14:27","type":"","value":"ll sgReceive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35325:6:27"},"nodeType":"YulFunctionCall","src":"35325:39:27"},"nodeType":"YulExpressionStatement","src":"35325:39:27"}]},"name":"store_literal_in_memory_5a267dde6b27d43e272bb2037a542b88bf55a0b6a5c36fa1965ab7e904ec9984","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35238:6:27","type":""}],"src":"35140:231:27"},{"body":{"nodeType":"YulBlock","src":"35523:220:27","statements":[{"nodeType":"YulAssignment","src":"35533:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35599:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"35604:2:27","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35540:58:27"},"nodeType":"YulFunctionCall","src":"35540:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35533:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35705:3:27"}],"functionName":{"name":"store_literal_in_memory_5a267dde6b27d43e272bb2037a542b88bf55a0b6a5c36fa1965ab7e904ec9984","nodeType":"YulIdentifier","src":"35616:88:27"},"nodeType":"YulFunctionCall","src":"35616:93:27"},"nodeType":"YulExpressionStatement","src":"35616:93:27"},{"nodeType":"YulAssignment","src":"35718:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35729:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"35734:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35725:3:27"},"nodeType":"YulFunctionCall","src":"35725:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35718:3:27"}]}]},"name":"abi_encode_t_stringliteral_5a267dde6b27d43e272bb2037a542b88bf55a0b6a5c36fa1965ab7e904ec9984_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35511:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35519:3:27","type":""}],"src":"35377:366:27"},{"body":{"nodeType":"YulBlock","src":"35920:248:27","statements":[{"nodeType":"YulAssignment","src":"35930:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35942:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"35953:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35938:3:27"},"nodeType":"YulFunctionCall","src":"35938:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35930:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35977:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"35988:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35973:3:27"},"nodeType":"YulFunctionCall","src":"35973:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35996:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"36002:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35992:3:27"},"nodeType":"YulFunctionCall","src":"35992:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35966:6:27"},"nodeType":"YulFunctionCall","src":"35966:47:27"},"nodeType":"YulExpressionStatement","src":"35966:47:27"},{"nodeType":"YulAssignment","src":"36022:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36156:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_5a267dde6b27d43e272bb2037a542b88bf55a0b6a5c36fa1965ab7e904ec9984_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36030:124:27"},"nodeType":"YulFunctionCall","src":"36030:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36022:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_5a267dde6b27d43e272bb2037a542b88bf55a0b6a5c36fa1965ab7e904ec9984__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35900:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35915:4:27","type":""}],"src":"35749:419:27"},{"body":{"nodeType":"YulBlock","src":"36237:80:27","statements":[{"nodeType":"YulAssignment","src":"36247:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"36262:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36256:5:27"},"nodeType":"YulFunctionCall","src":"36256:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"36247:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36305:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"36278:26:27"},"nodeType":"YulFunctionCall","src":"36278:33:27"},"nodeType":"YulExpressionStatement","src":"36278:33:27"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"36215:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"36223:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"36231:5:27","type":""}],"src":"36174:143:27"},{"body":{"nodeType":"YulBlock","src":"36386:80:27","statements":[{"nodeType":"YulAssignment","src":"36396:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"36411:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36405:5:27"},"nodeType":"YulFunctionCall","src":"36405:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"36396:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36454:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"36427:26:27"},"nodeType":"YulFunctionCall","src":"36427:33:27"},"nodeType":"YulExpressionStatement","src":"36427:33:27"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"36364:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"36372:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"36380:5:27","type":""}],"src":"36323:143:27"},{"body":{"nodeType":"YulBlock","src":"36583:229:27","statements":[{"body":{"nodeType":"YulBlock","src":"36688:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"36690:16:27"},"nodeType":"YulFunctionCall","src":"36690:18:27"},"nodeType":"YulExpressionStatement","src":"36690:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"36660:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"36668:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36657:2:27"},"nodeType":"YulFunctionCall","src":"36657:30:27"},"nodeType":"YulIf","src":"36654:56:27"},{"nodeType":"YulAssignment","src":"36720:25:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"36732:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"36740:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"36728:3:27"},"nodeType":"YulFunctionCall","src":"36728:17:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"36720:4:27"}]},{"nodeType":"YulAssignment","src":"36782:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"36794:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"36800:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36790:3:27"},"nodeType":"YulFunctionCall","src":"36790:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"36782:4:27"}]}]},"name":"array_allocation_size_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"36567:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"36578:4:27","type":""}],"src":"36472:340:27"},{"body":{"nodeType":"YulBlock","src":"36880:79:27","statements":[{"nodeType":"YulAssignment","src":"36890:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"36905:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36899:5:27"},"nodeType":"YulFunctionCall","src":"36899:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"36890:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36947:5:27"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"36921:25:27"},"nodeType":"YulFunctionCall","src":"36921:32:27"},"nodeType":"YulExpressionStatement","src":"36921:32:27"}]},"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"36858:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"36866:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"36874:5:27","type":""}],"src":"36818:141:27"},{"body":{"nodeType":"YulBlock","src":"37086:229:27","statements":[{"body":{"nodeType":"YulBlock","src":"37191:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"37193:16:27"},"nodeType":"YulFunctionCall","src":"37193:18:27"},"nodeType":"YulExpressionStatement","src":"37193:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37163:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"37171:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37160:2:27"},"nodeType":"YulFunctionCall","src":"37160:30:27"},"nodeType":"YulIf","src":"37157:56:27"},{"nodeType":"YulAssignment","src":"37223:25:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37235:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"37243:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37231:3:27"},"nodeType":"YulFunctionCall","src":"37231:17:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"37223:4:27"}]},{"nodeType":"YulAssignment","src":"37285:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"37297:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"37303:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37293:3:27"},"nodeType":"YulFunctionCall","src":"37293:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"37285:4:27"}]}]},"name":"array_allocation_size_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"37070:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"37081:4:27","type":""}],"src":"36965:350:27"},{"body":{"nodeType":"YulBlock","src":"37381:77:27","statements":[{"nodeType":"YulAssignment","src":"37391:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"37406:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37400:5:27"},"nodeType":"YulFunctionCall","src":"37400:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37391:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37446:5:27"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"37422:23:27"},"nodeType":"YulFunctionCall","src":"37422:30:27"},"nodeType":"YulExpressionStatement","src":"37422:30:27"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37359:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"37367:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"37375:5:27","type":""}],"src":"37321:137:27"},{"body":{"nodeType":"YulBlock","src":"37539:92:27","statements":[{"nodeType":"YulAssignment","src":"37549:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"37564:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37558:5:27"},"nodeType":"YulFunctionCall","src":"37558:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37549:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37619:5:27"}],"functionName":{"name":"validator_revert_t_enum$_AssetType_$72","nodeType":"YulIdentifier","src":"37580:38:27"},"nodeType":"YulFunctionCall","src":"37580:45:27"},"nodeType":"YulExpressionStatement","src":"37580:45:27"}]},"name":"abi_decode_t_enum$_AssetType_$72_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37517:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"37525:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"37533:5:27","type":""}],"src":"37464:167:27"},{"body":{"nodeType":"YulBlock","src":"37744:541:27","statements":[{"body":{"nodeType":"YulBlock","src":"37788:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"37790:77:27"},"nodeType":"YulFunctionCall","src":"37790:79:27"},"nodeType":"YulExpressionStatement","src":"37790:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"37765:3:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"37770:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37761:3:27"},"nodeType":"YulFunctionCall","src":"37761:19:27"},{"kind":"number","nodeType":"YulLiteral","src":"37782:4:27","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"37757:3:27"},"nodeType":"YulFunctionCall","src":"37757:30:27"},"nodeType":"YulIf","src":"37754:117:27"},{"nodeType":"YulAssignment","src":"37880:30:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37905:4:27","type":"","value":"0x40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"37889:15:27"},"nodeType":"YulFunctionCall","src":"37889:21:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37880:5:27"}]},{"nodeType":"YulBlock","src":"37920:178:27","statements":[{"nodeType":"YulVariableDeclaration","src":"37960:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"37974:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"37964:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38000:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"38007:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37996:3:27"},"nodeType":"YulFunctionCall","src":"37996:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38062:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"38073:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38058:3:27"},"nodeType":"YulFunctionCall","src":"38058:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"38082:3:27"}],"functionName":{"name":"abi_decode_t_enum$_AssetType_$72_fromMemory","nodeType":"YulIdentifier","src":"38014:43:27"},"nodeType":"YulFunctionCall","src":"38014:72:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37989:6:27"},"nodeType":"YulFunctionCall","src":"37989:98:27"},"nodeType":"YulExpressionStatement","src":"37989:98:27"}]},{"nodeType":"YulBlock","src":"38108:170:27","statements":[{"nodeType":"YulVariableDeclaration","src":"38151:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"38165:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"38155:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38192:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"38199:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38188:3:27"},"nodeType":"YulFunctionCall","src":"38188:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38242:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"38253:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38238:3:27"},"nodeType":"YulFunctionCall","src":"38238:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"38262:3:27"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"38206:31:27"},"nodeType":"YulFunctionCall","src":"38206:60:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38181:6:27"},"nodeType":"YulFunctionCall","src":"38181:86:27"},"nodeType":"YulExpressionStatement","src":"38181:86:27"}]}]},"name":"abi_decode_t_struct$_Asset_$57_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37719:9:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"37730:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"37738:5:27","type":""}],"src":"37657:628:27"},{"body":{"nodeType":"YulBlock","src":"38433:900:27","statements":[{"body":{"nodeType":"YulBlock","src":"38477:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"38479:77:27"},"nodeType":"YulFunctionCall","src":"38479:79:27"},"nodeType":"YulExpressionStatement","src":"38479:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"38454:3:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"38459:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38450:3:27"},"nodeType":"YulFunctionCall","src":"38450:19:27"},{"kind":"number","nodeType":"YulLiteral","src":"38471:4:27","type":"","value":"0xa0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"38446:3:27"},"nodeType":"YulFunctionCall","src":"38446:30:27"},"nodeType":"YulIf","src":"38443:117:27"},{"nodeType":"YulAssignment","src":"38569:30:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38594:4:27","type":"","value":"0x80"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"38578:15:27"},"nodeType":"YulFunctionCall","src":"38578:21:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"38569:5:27"}]},{"nodeType":"YulBlock","src":"38609:168:27","statements":[{"nodeType":"YulVariableDeclaration","src":"38654:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"38668:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"38658:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38694:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"38701:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38690:3:27"},"nodeType":"YulFunctionCall","src":"38690:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38741:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"38752:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38737:3:27"},"nodeType":"YulFunctionCall","src":"38737:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"38761:3:27"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"38708:28:27"},"nodeType":"YulFunctionCall","src":"38708:57:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38683:6:27"},"nodeType":"YulFunctionCall","src":"38683:83:27"},"nodeType":"YulExpressionStatement","src":"38683:83:27"}]},{"nodeType":"YulBlock","src":"38787:170:27","statements":[{"nodeType":"YulVariableDeclaration","src":"38833:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"38847:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"38837:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38874:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"38881:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38870:3:27"},"nodeType":"YulFunctionCall","src":"38870:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38921:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"38932:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38917:3:27"},"nodeType":"YulFunctionCall","src":"38917:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"38941:3:27"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"38888:28:27"},"nodeType":"YulFunctionCall","src":"38888:57:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38863:6:27"},"nodeType":"YulFunctionCall","src":"38863:83:27"},"nodeType":"YulExpressionStatement","src":"38863:83:27"}]},{"nodeType":"YulBlock","src":"38967:184:27","statements":[{"nodeType":"YulVariableDeclaration","src":"39003:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"39017:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"39007:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39044:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"39051:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39040:3:27"},"nodeType":"YulFunctionCall","src":"39040:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39115:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"39126:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39111:3:27"},"nodeType":"YulFunctionCall","src":"39111:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"39135:3:27"}],"functionName":{"name":"abi_decode_t_struct$_Asset_$57_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"39058:52:27"},"nodeType":"YulFunctionCall","src":"39058:81:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39033:6:27"},"nodeType":"YulFunctionCall","src":"39033:107:27"},"nodeType":"YulExpressionStatement","src":"39033:107:27"}]},{"nodeType":"YulBlock","src":"39161:165:27","statements":[{"nodeType":"YulVariableDeclaration","src":"39198:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"39212:3:27","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"39202:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39240:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"39247:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39236:3:27"},"nodeType":"YulFunctionCall","src":"39236:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39290:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"39301:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39286:3:27"},"nodeType":"YulFunctionCall","src":"39286:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"39310:3:27"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"39254:31:27"},"nodeType":"YulFunctionCall","src":"39254:60:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39229:6:27"},"nodeType":"YulFunctionCall","src":"39229:86:27"},"nodeType":"YulExpressionStatement","src":"39229:86:27"}]}]},"name":"abi_decode_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38408:9:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"38419:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"38427:5:27","type":""}],"src":"38328:1005:27"},{"body":{"nodeType":"YulBlock","src":"39530:697:27","statements":[{"nodeType":"YulAssignment","src":"39540:129:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"39661:6:27"}],"functionName":{"name":"array_allocation_size_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"39565:95:27"},"nodeType":"YulFunctionCall","src":"39565:103:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"39549:15:27"},"nodeType":"YulFunctionCall","src":"39549:120:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"39540:5:27"}]},{"nodeType":"YulVariableDeclaration","src":"39678:16:27","value":{"name":"array","nodeType":"YulIdentifier","src":"39689:5:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"39682:3:27","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"39711:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"39718:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39704:6:27"},"nodeType":"YulFunctionCall","src":"39704:21:27"},"nodeType":"YulExpressionStatement","src":"39704:21:27"},{"nodeType":"YulAssignment","src":"39734:23:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"39745:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"39752:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39741:3:27"},"nodeType":"YulFunctionCall","src":"39741:16:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"39734:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"39767:44:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"39785:6:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"39797:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"39805:4:27","type":"","value":"0xa0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"39793:3:27"},"nodeType":"YulFunctionCall","src":"39793:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39781:3:27"},"nodeType":"YulFunctionCall","src":"39781:30:27"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"39771:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"39839:103:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"39853:77:27"},"nodeType":"YulFunctionCall","src":"39853:79:27"},"nodeType":"YulExpressionStatement","src":"39853:79:27"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"39826:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"39834:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"39823:2:27"},"nodeType":"YulFunctionCall","src":"39823:15:27"},"nodeType":"YulIf","src":"39820:122:27"},{"body":{"nodeType":"YulBlock","src":"40027:194:27","statements":[{"nodeType":"YulVariableDeclaration","src":"40042:21:27","value":{"name":"src","nodeType":"YulIdentifier","src":"40060:3:27"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"40046:10:27","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"40084:3:27"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"40160:10:27"},{"name":"end","nodeType":"YulIdentifier","src":"40172:3:27"}],"functionName":{"name":"abi_decode_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"40089:70:27"},"nodeType":"YulFunctionCall","src":"40089:87:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40077:6:27"},"nodeType":"YulFunctionCall","src":"40077:100:27"},"nodeType":"YulExpressionStatement","src":"40077:100:27"},{"nodeType":"YulAssignment","src":"40190:21:27","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"40201:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"40206:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40197:3:27"},"nodeType":"YulFunctionCall","src":"40197:14:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"40190:3:27"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"39980:3:27"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"39985:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"39977:2:27"},"nodeType":"YulFunctionCall","src":"39977:15:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"39993:25:27","statements":[{"nodeType":"YulAssignment","src":"39995:21:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"40006:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"40011:4:27","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40002:3:27"},"nodeType":"YulFunctionCall","src":"40002:14:27"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"39995:3:27"}]}]},"pre":{"nodeType":"YulBlock","src":"39955:21:27","statements":[{"nodeType":"YulVariableDeclaration","src":"39957:17:27","value":{"name":"offset","nodeType":"YulIdentifier","src":"39968:6:27"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"39961:3:27","type":""}]}]},"src":"39951:270:27"}]},"name":"abi_decode_available_length_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"39500:6:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"39508:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"39516:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"39524:5:27","type":""}],"src":"39378:849:27"},{"body":{"nodeType":"YulBlock","src":"40399:336:27","statements":[{"body":{"nodeType":"YulBlock","src":"40448:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"40450:77:27"},"nodeType":"YulFunctionCall","src":"40450:79:27"},"nodeType":"YulExpressionStatement","src":"40450:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"40427:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"40435:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40423:3:27"},"nodeType":"YulFunctionCall","src":"40423:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"40442:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"40419:3:27"},"nodeType":"YulFunctionCall","src":"40419:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40412:6:27"},"nodeType":"YulFunctionCall","src":"40412:35:27"},"nodeType":"YulIf","src":"40409:122:27"},{"nodeType":"YulVariableDeclaration","src":"40540:27:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"40560:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"40554:5:27"},"nodeType":"YulFunctionCall","src":"40554:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"40544:6:27","type":""}]},{"nodeType":"YulAssignment","src":"40576:153:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"40702:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"40710:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40698:3:27"},"nodeType":"YulFunctionCall","src":"40698:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"40717:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"40725:3:27"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"40585:112:27"},"nodeType":"YulFunctionCall","src":"40585:144:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"40576:5:27"}]}]},"name":"abi_decode_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"40377:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"40385:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"40393:5:27","type":""}],"src":"40272:463:27"},{"body":{"nodeType":"YulBlock","src":"40835:338:27","statements":[{"nodeType":"YulAssignment","src":"40845:74:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"40911:6:27"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"40870:40:27"},"nodeType":"YulFunctionCall","src":"40870:48:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"40854:15:27"},"nodeType":"YulFunctionCall","src":"40854:65:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"40845:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"40935:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"40942:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40928:6:27"},"nodeType":"YulFunctionCall","src":"40928:21:27"},"nodeType":"YulExpressionStatement","src":"40928:21:27"},{"nodeType":"YulVariableDeclaration","src":"40958:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"40973:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"40980:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40969:3:27"},"nodeType":"YulFunctionCall","src":"40969:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"40962:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"41023:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"41025:77:27"},"nodeType":"YulFunctionCall","src":"41025:79:27"},"nodeType":"YulExpressionStatement","src":"41025:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"41004:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"41009:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41000:3:27"},"nodeType":"YulFunctionCall","src":"41000:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"41018:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"40997:2:27"},"nodeType":"YulFunctionCall","src":"40997:25:27"},"nodeType":"YulIf","src":"40994:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"41150:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"41155:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"41160:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"41115:34:27"},"nodeType":"YulFunctionCall","src":"41115:52:27"},"nodeType":"YulExpressionStatement","src":"41115:52:27"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"40808:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"40813:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"40821:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"40829:5:27","type":""}],"src":"40741:432:27"},{"body":{"nodeType":"YulBlock","src":"41264:281:27","statements":[{"body":{"nodeType":"YulBlock","src":"41313:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"41315:77:27"},"nodeType":"YulFunctionCall","src":"41315:79:27"},"nodeType":"YulExpressionStatement","src":"41315:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"41292:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"41300:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41288:3:27"},"nodeType":"YulFunctionCall","src":"41288:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"41307:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"41284:3:27"},"nodeType":"YulFunctionCall","src":"41284:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"41277:6:27"},"nodeType":"YulFunctionCall","src":"41277:35:27"},"nodeType":"YulIf","src":"41274:122:27"},{"nodeType":"YulVariableDeclaration","src":"41405:27:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"41425:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41419:5:27"},"nodeType":"YulFunctionCall","src":"41419:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"41409:6:27","type":""}]},{"nodeType":"YulAssignment","src":"41441:98:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"41512:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"41520:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41508:3:27"},"nodeType":"YulFunctionCall","src":"41508:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"41527:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"41535:3:27"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"41450:57:27"},"nodeType":"YulFunctionCall","src":"41450:89:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"41441:5:27"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"41242:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"41250:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"41258:5:27","type":""}],"src":"41192:353:27"},{"body":{"nodeType":"YulBlock","src":"41592:77:27","statements":[{"body":{"nodeType":"YulBlock","src":"41647:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41656:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41659:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"41649:6:27"},"nodeType":"YulFunctionCall","src":"41649:12:27"},"nodeType":"YulExpressionStatement","src":"41649:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41615:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41638:5:27"}],"functionName":{"name":"cleanup_t_int16","nodeType":"YulIdentifier","src":"41622:15:27"},"nodeType":"YulFunctionCall","src":"41622:22:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"41612:2:27"},"nodeType":"YulFunctionCall","src":"41612:33:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"41605:6:27"},"nodeType":"YulFunctionCall","src":"41605:41:27"},"nodeType":"YulIf","src":"41602:61:27"}]},"name":"validator_revert_t_int16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41585:5:27","type":""}],"src":"41551:118:27"},{"body":{"nodeType":"YulBlock","src":"41736:78:27","statements":[{"nodeType":"YulAssignment","src":"41746:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"41761:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41755:5:27"},"nodeType":"YulFunctionCall","src":"41755:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"41746:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41802:5:27"}],"functionName":{"name":"validator_revert_t_int16","nodeType":"YulIdentifier","src":"41777:24:27"},"nodeType":"YulFunctionCall","src":"41777:31:27"},"nodeType":"YulExpressionStatement","src":"41777:31:27"}]},"name":"abi_decode_t_int16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"41714:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"41722:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"41730:5:27","type":""}],"src":"41675:139:27"},{"body":{"nodeType":"YulBlock","src":"41942:1441:27","statements":[{"body":{"nodeType":"YulBlock","src":"41986:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"41988:77:27"},"nodeType":"YulFunctionCall","src":"41988:79:27"},"nodeType":"YulExpressionStatement","src":"41988:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"41963:3:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"41968:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41959:3:27"},"nodeType":"YulFunctionCall","src":"41959:19:27"},{"kind":"number","nodeType":"YulLiteral","src":"41980:4:27","type":"","value":"0xa0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"41955:3:27"},"nodeType":"YulFunctionCall","src":"41955:30:27"},"nodeType":"YulIf","src":"41952:117:27"},{"nodeType":"YulAssignment","src":"42078:30:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42103:4:27","type":"","value":"0xa0"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"42087:15:27"},"nodeType":"YulFunctionCall","src":"42087:21:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"42078:5:27"}]},{"nodeType":"YulBlock","src":"42118:166:27","statements":[{"nodeType":"YulVariableDeclaration","src":"42159:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"42173:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"42163:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42199:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"42206:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42195:3:27"},"nodeType":"YulFunctionCall","src":"42195:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42248:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"42259:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42244:3:27"},"nodeType":"YulFunctionCall","src":"42244:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"42268:3:27"}],"functionName":{"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulIdentifier","src":"42213:30:27"},"nodeType":"YulFunctionCall","src":"42213:59:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42188:6:27"},"nodeType":"YulFunctionCall","src":"42188:85:27"},"nodeType":"YulExpressionStatement","src":"42188:85:27"}]},{"nodeType":"YulBlock","src":"42294:169:27","statements":[{"nodeType":"YulVariableDeclaration","src":"42336:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"42350:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"42340:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42377:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"42384:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42373:3:27"},"nodeType":"YulFunctionCall","src":"42373:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42427:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"42438:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42423:3:27"},"nodeType":"YulFunctionCall","src":"42423:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"42447:3:27"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"42391:31:27"},"nodeType":"YulFunctionCall","src":"42391:60:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42366:6:27"},"nodeType":"YulFunctionCall","src":"42366:86:27"},"nodeType":"YulExpressionStatement","src":"42366:86:27"}]},{"nodeType":"YulBlock","src":"42473:386:27","statements":[{"nodeType":"YulVariableDeclaration","src":"42515:39:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42539:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"42550:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42535:3:27"},"nodeType":"YulFunctionCall","src":"42535:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"42529:5:27"},"nodeType":"YulFunctionCall","src":"42529:25:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"42519:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"42601:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"42603:77:27"},"nodeType":"YulFunctionCall","src":"42603:79:27"},"nodeType":"YulExpressionStatement","src":"42603:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"42573:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"42581:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"42570:2:27"},"nodeType":"YulFunctionCall","src":"42570:30:27"},"nodeType":"YulIf","src":"42567:117:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42709:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"42716:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42705:3:27"},"nodeType":"YulFunctionCall","src":"42705:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42823:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"42834:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42819:3:27"},"nodeType":"YulFunctionCall","src":"42819:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"42843:3:27"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"42723:95:27"},"nodeType":"YulFunctionCall","src":"42723:124:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42698:6:27"},"nodeType":"YulFunctionCall","src":"42698:150:27"},"nodeType":"YulExpressionStatement","src":"42698:150:27"}]},{"nodeType":"YulBlock","src":"42869:327:27","statements":[{"nodeType":"YulVariableDeclaration","src":"42907:39:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42931:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"42942:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42927:3:27"},"nodeType":"YulFunctionCall","src":"42927:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"42921:5:27"},"nodeType":"YulFunctionCall","src":"42921:25:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"42911:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"42993:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"42995:77:27"},"nodeType":"YulFunctionCall","src":"42995:79:27"},"nodeType":"YulExpressionStatement","src":"42995:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"42965:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"42973:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"42962:2:27"},"nodeType":"YulFunctionCall","src":"42962:30:27"},"nodeType":"YulIf","src":"42959:117:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43101:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"43108:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43097:3:27"},"nodeType":"YulFunctionCall","src":"43097:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43160:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"43171:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43156:3:27"},"nodeType":"YulFunctionCall","src":"43156:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"43180:3:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"43115:40:27"},"nodeType":"YulFunctionCall","src":"43115:69:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43090:6:27"},"nodeType":"YulFunctionCall","src":"43090:95:27"},"nodeType":"YulExpressionStatement","src":"43090:95:27"}]},{"nodeType":"YulBlock","src":"43206:170:27","statements":[{"nodeType":"YulVariableDeclaration","src":"43250:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"43264:3:27","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"43254:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43292:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"43299:4:27","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43288:3:27"},"nodeType":"YulFunctionCall","src":"43288:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43340:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"43351:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43336:3:27"},"nodeType":"YulFunctionCall","src":"43336:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"43360:3:27"}],"functionName":{"name":"abi_decode_t_int16_fromMemory","nodeType":"YulIdentifier","src":"43306:29:27"},"nodeType":"YulFunctionCall","src":"43306:58:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43281:6:27"},"nodeType":"YulFunctionCall","src":"43281:84:27"},"nodeType":"YulExpressionStatement","src":"43281:84:27"}]}]},"name":"abi_decode_t_struct$_WorkflowStep_$109_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41917:9:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"41928:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"41936:5:27","type":""}],"src":"41847:1536:27"},{"body":{"nodeType":"YulBlock","src":"43560:875:27","statements":[{"nodeType":"YulAssignment","src":"43570:119:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"43681:6:27"}],"functionName":{"name":"array_allocation_size_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"43595:85:27"},"nodeType":"YulFunctionCall","src":"43595:93:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"43579:15:27"},"nodeType":"YulFunctionCall","src":"43579:110:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"43570:5:27"}]},{"nodeType":"YulVariableDeclaration","src":"43698:16:27","value":{"name":"array","nodeType":"YulIdentifier","src":"43709:5:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"43702:3:27","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"43731:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"43738:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43724:6:27"},"nodeType":"YulFunctionCall","src":"43724:21:27"},"nodeType":"YulExpressionStatement","src":"43724:21:27"},{"nodeType":"YulAssignment","src":"43754:23:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"43765:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"43772:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43761:3:27"},"nodeType":"YulFunctionCall","src":"43761:16:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"43754:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"43787:44:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"43805:6:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"43817:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"43825:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"43813:3:27"},"nodeType":"YulFunctionCall","src":"43813:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43801:3:27"},"nodeType":"YulFunctionCall","src":"43801:30:27"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"43791:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"43859:103:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"43873:77:27"},"nodeType":"YulFunctionCall","src":"43873:79:27"},"nodeType":"YulExpressionStatement","src":"43873:79:27"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"43846:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"43854:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"43843:2:27"},"nodeType":"YulFunctionCall","src":"43843:15:27"},"nodeType":"YulIf","src":"43840:122:27"},{"body":{"nodeType":"YulBlock","src":"44047:382:27","statements":[{"nodeType":"YulVariableDeclaration","src":"44062:29:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"44087:3:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"44081:5:27"},"nodeType":"YulFunctionCall","src":"44081:10:27"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"44066:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"44143:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"44145:77:27"},"nodeType":"YulFunctionCall","src":"44145:79:27"},"nodeType":"YulExpressionStatement","src":"44145:79:27"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"44110:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"44123:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44107:2:27"},"nodeType":"YulFunctionCall","src":"44107:35:27"},"nodeType":"YulIf","src":"44104:122:27"},{"nodeType":"YulVariableDeclaration","src":"44239:42:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"44261:6:27"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"44269:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44257:3:27"},"nodeType":"YulFunctionCall","src":"44257:24:27"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"44243:10:27","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"44302:3:27"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"44368:10:27"},{"name":"end","nodeType":"YulIdentifier","src":"44380:3:27"}],"functionName":{"name":"abi_decode_t_struct$_WorkflowStep_$109_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"44307:60:27"},"nodeType":"YulFunctionCall","src":"44307:77:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44295:6:27"},"nodeType":"YulFunctionCall","src":"44295:90:27"},"nodeType":"YulExpressionStatement","src":"44295:90:27"},{"nodeType":"YulAssignment","src":"44398:21:27","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"44409:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"44414:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44405:3:27"},"nodeType":"YulFunctionCall","src":"44405:14:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"44398:3:27"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"44000:3:27"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"44005:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"43997:2:27"},"nodeType":"YulFunctionCall","src":"43997:15:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"44013:25:27","statements":[{"nodeType":"YulAssignment","src":"44015:21:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"44026:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"44031:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44022:3:27"},"nodeType":"YulFunctionCall","src":"44022:14:27"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"44015:3:27"}]}]},"pre":{"nodeType":"YulBlock","src":"43975:21:27","statements":[{"nodeType":"YulVariableDeclaration","src":"43977:17:27","value":{"name":"offset","nodeType":"YulIdentifier","src":"43988:6:27"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"43981:3:27","type":""}]}]},"src":"43971:458:27"}]},"name":"abi_decode_available_length_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"43530:6:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"43538:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"43546:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"43554:5:27","type":""}],"src":"43418:1017:27"},{"body":{"nodeType":"YulBlock","src":"44587:326:27","statements":[{"body":{"nodeType":"YulBlock","src":"44636:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"44638:77:27"},"nodeType":"YulFunctionCall","src":"44638:79:27"},"nodeType":"YulExpressionStatement","src":"44638:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"44615:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"44623:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44611:3:27"},"nodeType":"YulFunctionCall","src":"44611:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"44630:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"44607:3:27"},"nodeType":"YulFunctionCall","src":"44607:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"44600:6:27"},"nodeType":"YulFunctionCall","src":"44600:35:27"},"nodeType":"YulIf","src":"44597:122:27"},{"nodeType":"YulVariableDeclaration","src":"44728:27:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"44748:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"44742:5:27"},"nodeType":"YulFunctionCall","src":"44742:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"44732:6:27","type":""}]},{"nodeType":"YulAssignment","src":"44764:143:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"44880:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"44888:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44876:3:27"},"nodeType":"YulFunctionCall","src":"44876:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"44895:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"44903:3:27"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"44773:102:27"},"nodeType":"YulFunctionCall","src":"44773:134:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"44764:5:27"}]}]},"name":"abi_decode_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44565:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"44573:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"44581:5:27","type":""}],"src":"44470:443:27"},{"body":{"nodeType":"YulBlock","src":"45032:741:27","statements":[{"body":{"nodeType":"YulBlock","src":"45076:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"45078:77:27"},"nodeType":"YulFunctionCall","src":"45078:79:27"},"nodeType":"YulExpressionStatement","src":"45078:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"45053:3:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"45058:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45049:3:27"},"nodeType":"YulFunctionCall","src":"45049:19:27"},{"kind":"number","nodeType":"YulLiteral","src":"45070:4:27","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"45045:3:27"},"nodeType":"YulFunctionCall","src":"45045:30:27"},"nodeType":"YulIf","src":"45042:117:27"},{"nodeType":"YulAssignment","src":"45168:30:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45193:4:27","type":"","value":"0x40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"45177:15:27"},"nodeType":"YulFunctionCall","src":"45177:21:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"45168:5:27"}]},{"nodeType":"YulBlock","src":"45208:178:27","statements":[{"nodeType":"YulVariableDeclaration","src":"45260:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"45274:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"45264:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45300:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"45307:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45296:3:27"},"nodeType":"YulFunctionCall","src":"45296:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45350:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"45361:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45346:3:27"},"nodeType":"YulFunctionCall","src":"45346:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"45370:3:27"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"45314:31:27"},"nodeType":"YulFunctionCall","src":"45314:60:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45289:6:27"},"nodeType":"YulFunctionCall","src":"45289:86:27"},"nodeType":"YulExpressionStatement","src":"45289:86:27"}]},{"nodeType":"YulBlock","src":"45396:370:27","statements":[{"nodeType":"YulVariableDeclaration","src":"45432:39:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45456:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"45467:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45452:3:27"},"nodeType":"YulFunctionCall","src":"45452:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"45446:5:27"},"nodeType":"YulFunctionCall","src":"45446:25:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"45436:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"45518:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"45520:77:27"},"nodeType":"YulFunctionCall","src":"45520:79:27"},"nodeType":"YulExpressionStatement","src":"45520:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"45490:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"45498:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"45487:2:27"},"nodeType":"YulFunctionCall","src":"45487:30:27"},"nodeType":"YulIf","src":"45484:117:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45626:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"45633:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45622:3:27"},"nodeType":"YulFunctionCall","src":"45622:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45730:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"45741:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45726:3:27"},"nodeType":"YulFunctionCall","src":"45726:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"45750:3:27"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"45640:85:27"},"nodeType":"YulFunctionCall","src":"45640:114:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45615:6:27"},"nodeType":"YulFunctionCall","src":"45615:140:27"},"nodeType":"YulExpressionStatement","src":"45615:140:27"}]}]},"name":"abi_decode_t_struct$_Workflow_$93_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45007:9:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"45018:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"45026:5:27","type":""}],"src":"44942:831:27"},{"body":{"nodeType":"YulBlock","src":"45902:877:27","statements":[{"body":{"nodeType":"YulBlock","src":"45946:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"45948:77:27"},"nodeType":"YulFunctionCall","src":"45948:79:27"},"nodeType":"YulExpressionStatement","src":"45948:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"45923:3:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"45928:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45919:3:27"},"nodeType":"YulFunctionCall","src":"45919:19:27"},{"kind":"number","nodeType":"YulLiteral","src":"45940:4:27","type":"","value":"0x60"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"45915:3:27"},"nodeType":"YulFunctionCall","src":"45915:30:27"},"nodeType":"YulIf","src":"45912:117:27"},{"nodeType":"YulAssignment","src":"46038:30:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46063:4:27","type":"","value":"0x60"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"46047:15:27"},"nodeType":"YulFunctionCall","src":"46047:21:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"46038:5:27"}]},{"nodeType":"YulBlock","src":"46078:168:27","statements":[{"nodeType":"YulVariableDeclaration","src":"46120:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"46134:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"46124:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46160:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"46167:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46156:3:27"},"nodeType":"YulFunctionCall","src":"46156:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46210:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"46221:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46206:3:27"},"nodeType":"YulFunctionCall","src":"46206:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"46230:3:27"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"46174:31:27"},"nodeType":"YulFunctionCall","src":"46174:60:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46149:6:27"},"nodeType":"YulFunctionCall","src":"46149:86:27"},"nodeType":"YulExpressionStatement","src":"46149:86:27"}]},{"nodeType":"YulBlock","src":"46256:163:27","statements":[{"nodeType":"YulVariableDeclaration","src":"46292:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"46306:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"46296:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46333:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"46340:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46329:3:27"},"nodeType":"YulFunctionCall","src":"46329:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46383:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"46394:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46379:3:27"},"nodeType":"YulFunctionCall","src":"46379:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"46403:3:27"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"46347:31:27"},"nodeType":"YulFunctionCall","src":"46347:60:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46322:6:27"},"nodeType":"YulFunctionCall","src":"46322:86:27"},"nodeType":"YulExpressionStatement","src":"46322:86:27"}]},{"nodeType":"YulBlock","src":"46429:343:27","statements":[{"nodeType":"YulVariableDeclaration","src":"46468:39:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46492:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"46503:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46488:3:27"},"nodeType":"YulFunctionCall","src":"46488:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"46482:5:27"},"nodeType":"YulFunctionCall","src":"46482:25:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"46472:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"46554:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"46556:77:27"},"nodeType":"YulFunctionCall","src":"46556:79:27"},"nodeType":"YulExpressionStatement","src":"46556:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"46526:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"46534:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"46523:2:27"},"nodeType":"YulFunctionCall","src":"46523:30:27"},"nodeType":"YulIf","src":"46520:117:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46662:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"46669:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46658:3:27"},"nodeType":"YulFunctionCall","src":"46658:16:27"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46736:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"46747:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46732:3:27"},"nodeType":"YulFunctionCall","src":"46732:22:27"},{"name":"end","nodeType":"YulIdentifier","src":"46756:3:27"}],"functionName":{"name":"abi_decode_t_struct$_Workflow_$93_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"46676:55:27"},"nodeType":"YulFunctionCall","src":"46676:84:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46651:6:27"},"nodeType":"YulFunctionCall","src":"46651:110:27"},"nodeType":"YulExpressionStatement","src":"46651:110:27"}]}]},"name":"abi_decode_t_struct$_BridgePayload_$83_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45877:9:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"45888:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"45896:5:27","type":""}],"src":"45807:972:27"},{"body":{"nodeType":"YulBlock","src":"46891:456:27","statements":[{"body":{"nodeType":"YulBlock","src":"46937:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"46939:77:27"},"nodeType":"YulFunctionCall","src":"46939:79:27"},"nodeType":"YulExpressionStatement","src":"46939:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"46912:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"46921:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46908:3:27"},"nodeType":"YulFunctionCall","src":"46908:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"46933:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"46904:3:27"},"nodeType":"YulFunctionCall","src":"46904:32:27"},"nodeType":"YulIf","src":"46901:119:27"},{"nodeType":"YulBlock","src":"47030:310:27","statements":[{"nodeType":"YulVariableDeclaration","src":"47045:38:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47069:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"47080:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47065:3:27"},"nodeType":"YulFunctionCall","src":"47065:17:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"47059:5:27"},"nodeType":"YulFunctionCall","src":"47059:24:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"47049:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"47130:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"47132:77:27"},"nodeType":"YulFunctionCall","src":"47132:79:27"},"nodeType":"YulExpressionStatement","src":"47132:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"47102:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"47110:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"47099:2:27"},"nodeType":"YulFunctionCall","src":"47099:30:27"},"nodeType":"YulIf","src":"47096:117:27"},{"nodeType":"YulAssignment","src":"47227:103:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47302:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"47313:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47298:3:27"},"nodeType":"YulFunctionCall","src":"47298:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"47322:7:27"}],"functionName":{"name":"abi_decode_t_struct$_BridgePayload_$83_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"47237:60:27"},"nodeType":"YulFunctionCall","src":"47237:93:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"47227:6:27"}]}]}]},"name":"abi_decode_tuple_t_struct$_BridgePayload_$83_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46861:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"46872:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"46884:6:27","type":""}],"src":"46785:562:27"},{"body":{"nodeType":"YulBlock","src":"47456:40:27","statements":[{"nodeType":"YulAssignment","src":"47467:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47483:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"47477:5:27"},"nodeType":"YulFunctionCall","src":"47477:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"47467:6:27"}]}]},"name":"array_length_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47439:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"47449:6:27","type":""}],"src":"47353:143:27"},{"body":{"nodeType":"YulBlock","src":"47632:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47649:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"47654:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47642:6:27"},"nodeType":"YulFunctionCall","src":"47642:19:27"},"nodeType":"YulExpressionStatement","src":"47642:19:27"},{"nodeType":"YulAssignment","src":"47670:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47689:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"47694:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47685:3:27"},"nodeType":"YulFunctionCall","src":"47685:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"47670:11:27"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47604:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"47609:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"47620:11:27","type":""}],"src":"47502:203:27"},{"body":{"nodeType":"YulBlock","src":"47812:60:27","statements":[{"nodeType":"YulAssignment","src":"47822:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"47830:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"47822:4:27"}]},{"nodeType":"YulAssignment","src":"47843:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"47855:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"47860:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47851:3:27"},"nodeType":"YulFunctionCall","src":"47851:14:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"47843:4:27"}]}]},"name":"array_dataslot_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"47799:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"47807:4:27","type":""}],"src":"47711:161:27"},{"body":{"nodeType":"YulBlock","src":"47931:52:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47948:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47970:5:27"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"47953:16:27"},"nodeType":"YulFunctionCall","src":"47953:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47941:6:27"},"nodeType":"YulFunctionCall","src":"47941:36:27"},"nodeType":"YulExpressionStatement","src":"47941:36:27"}]},"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47919:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"47926:3:27","type":""}],"src":"47878:105:27"},{"body":{"nodeType":"YulBlock","src":"48102:40:27","statements":[{"nodeType":"YulAssignment","src":"48113:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48129:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"48123:5:27"},"nodeType":"YulFunctionCall","src":"48123:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"48113:6:27"}]}]},"name":"array_length_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48085:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"48095:6:27","type":""}],"src":"47989:153:27"},{"body":{"nodeType":"YulBlock","src":"48288:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48305:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"48310:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48298:6:27"},"nodeType":"YulFunctionCall","src":"48298:19:27"},"nodeType":"YulExpressionStatement","src":"48298:19:27"},{"nodeType":"YulAssignment","src":"48326:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48345:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"48350:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48341:3:27"},"nodeType":"YulFunctionCall","src":"48341:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"48326:11:27"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"48260:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"48265:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"48276:11:27","type":""}],"src":"48148:213:27"},{"body":{"nodeType":"YulBlock","src":"48478:60:27","statements":[{"nodeType":"YulAssignment","src":"48488:11:27","value":{"name":"ptr","nodeType":"YulIdentifier","src":"48496:3:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"48488:4:27"}]},{"nodeType":"YulAssignment","src":"48509:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"48521:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"48526:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48517:3:27"},"nodeType":"YulFunctionCall","src":"48517:14:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"48509:4:27"}]}]},"name":"array_dataslot_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"48465:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"48473:4:27","type":""}],"src":"48367:171:27"},{"body":{"nodeType":"YulBlock","src":"48593:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48610:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48630:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"48615:14:27"},"nodeType":"YulFunctionCall","src":"48615:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48603:6:27"},"nodeType":"YulFunctionCall","src":"48603:34:27"},"nodeType":"YulExpressionStatement","src":"48603:34:27"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48581:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"48588:3:27","type":""}],"src":"48544:99:27"},{"body":{"nodeType":"YulBlock","src":"48853:793:27","statements":[{"nodeType":"YulVariableDeclaration","src":"48863:26:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48879:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"48884:4:27","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48875:3:27"},"nodeType":"YulFunctionCall","src":"48875:14:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"48867:4:27","type":""}]},{"nodeType":"YulBlock","src":"48899:168:27","statements":[{"nodeType":"YulVariableDeclaration","src":"48944:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48974:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"48981:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48970:3:27"},"nodeType":"YulFunctionCall","src":"48970:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"48964:5:27"},"nodeType":"YulFunctionCall","src":"48964:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"48948:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"49028:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49046:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"49051:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49042:3:27"},"nodeType":"YulFunctionCall","src":"49042:14:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"49000:27:27"},"nodeType":"YulFunctionCall","src":"49000:57:27"},"nodeType":"YulExpressionStatement","src":"49000:57:27"}]},{"nodeType":"YulBlock","src":"49077:169:27","statements":[{"nodeType":"YulVariableDeclaration","src":"49123:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49153:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"49160:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49149:3:27"},"nodeType":"YulFunctionCall","src":"49149:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"49143:5:27"},"nodeType":"YulFunctionCall","src":"49143:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"49127:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"49207:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49225:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"49230:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49221:3:27"},"nodeType":"YulFunctionCall","src":"49221:14:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"49179:27:27"},"nodeType":"YulFunctionCall","src":"49179:57:27"},"nodeType":"YulExpressionStatement","src":"49179:57:27"}]},{"nodeType":"YulBlock","src":"49256:207:27","statements":[{"nodeType":"YulVariableDeclaration","src":"49292:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49322:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"49329:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49318:3:27"},"nodeType":"YulFunctionCall","src":"49318:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"49312:5:27"},"nodeType":"YulFunctionCall","src":"49312:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"49296:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"49424:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49442:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"49447:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49438:3:27"},"nodeType":"YulFunctionCall","src":"49438:14:27"}],"functionName":{"name":"abi_encode_t_struct$_Asset_$57_memory_ptr_to_t_struct$_Asset_$57_memory_ptr","nodeType":"YulIdentifier","src":"49348:75:27"},"nodeType":"YulFunctionCall","src":"49348:105:27"},"nodeType":"YulExpressionStatement","src":"49348:105:27"}]},{"nodeType":"YulBlock","src":"49473:166:27","statements":[{"nodeType":"YulVariableDeclaration","src":"49510:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49540:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"49547:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49536:3:27"},"nodeType":"YulFunctionCall","src":"49536:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"49530:5:27"},"nodeType":"YulFunctionCall","src":"49530:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"49514:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"49600:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49618:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"49623:4:27","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49614:3:27"},"nodeType":"YulFunctionCall","src":"49614:14:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"49566:33:27"},"nodeType":"YulFunctionCall","src":"49566:63:27"},"nodeType":"YulExpressionStatement","src":"49566:63:27"}]}]},"name":"abi_encode_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_to_t_struct$_WorkflowStepInputAsset_$122_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48840:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"48847:3:27","type":""}],"src":"48719:927:27"},{"body":{"nodeType":"YulBlock","src":"49810:177:27","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"49932:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"49940:3:27"}],"functionName":{"name":"abi_encode_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_to_t_struct$_WorkflowStepInputAsset_$122_memory_ptr","nodeType":"YulIdentifier","src":"49820:111:27"},"nodeType":"YulFunctionCall","src":"49820:124:27"},"nodeType":"YulExpressionStatement","src":"49820:124:27"},{"nodeType":"YulAssignment","src":"49953:28:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49971:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"49976:4:27","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49967:3:27"},"nodeType":"YulFunctionCall","src":"49967:14:27"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"49953:10:27"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_to_t_struct$_WorkflowStepInputAsset_$122_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"49783:6:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"49791:3:27","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"49799:10:27","type":""}],"src":"49652:335:27"},{"body":{"nodeType":"YulBlock","src":"50107:38:27","statements":[{"nodeType":"YulAssignment","src":"50117:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"50129:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"50134:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50125:3:27"},"nodeType":"YulFunctionCall","src":"50125:14:27"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"50117:4:27"}]}]},"name":"array_nextElement_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"50094:3:27","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"50102:4:27","type":""}],"src":"49993:152:27"},{"body":{"nodeType":"YulBlock","src":"50417:832:27","statements":[{"nodeType":"YulVariableDeclaration","src":"50427:107:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50528:5:27"}],"functionName":{"name":"array_length_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"50441:86:27"},"nodeType":"YulFunctionCall","src":"50441:93:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"50431:6:27","type":""}]},{"nodeType":"YulAssignment","src":"50543:122:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50653:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"50658:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"50550:102:27"},"nodeType":"YulFunctionCall","src":"50550:115:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50543:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"50674:110:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50778:5:27"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"50689:88:27"},"nodeType":"YulFunctionCall","src":"50689:95:27"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"50678:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"50793:21:27","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"50807:7:27"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"50797:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"50883:341:27","statements":[{"nodeType":"YulVariableDeclaration","src":"50897:34:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"50924:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"50918:5:27"},"nodeType":"YulFunctionCall","src":"50918:13:27"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"50901:13:27","type":""}]},{"nodeType":"YulAssignment","src":"50944:148:27","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"51073:13:27"},{"name":"pos","nodeType":"YulIdentifier","src":"51088:3:27"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_to_t_struct$_WorkflowStepInputAsset_$122_memory_ptr","nodeType":"YulIdentifier","src":"50951:121:27"},"nodeType":"YulFunctionCall","src":"50951:141:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50944:3:27"}]},{"nodeType":"YulAssignment","src":"51105:109:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"51207:6:27"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"51115:91:27"},"nodeType":"YulFunctionCall","src":"51115:99:27"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"51105:6:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"50845:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"50848:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"50842:2:27"},"nodeType":"YulFunctionCall","src":"50842:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"50856:18:27","statements":[{"nodeType":"YulAssignment","src":"50858:14:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"50867:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"50870:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50863:3:27"},"nodeType":"YulFunctionCall","src":"50863:9:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"50858:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"50827:14:27","statements":[{"nodeType":"YulVariableDeclaration","src":"50829:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"50838:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"50833:1:27","type":""}]}]},"src":"50823:401:27"},{"nodeType":"YulAssignment","src":"51233:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"51240:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"51233:3:27"}]}]},"name":"abi_encode_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"50396:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"50403:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"50412:3:27","type":""}],"src":"50225:1024:27"},{"body":{"nodeType":"YulBlock","src":"51427:1207:27","statements":[{"nodeType":"YulVariableDeclaration","src":"51437:26:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51453:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"51458:4:27","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51449:3:27"},"nodeType":"YulFunctionCall","src":"51449:14:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"51441:4:27","type":""}]},{"nodeType":"YulBlock","src":"51473:168:27","statements":[{"nodeType":"YulVariableDeclaration","src":"51514:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"51544:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"51551:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51540:3:27"},"nodeType":"YulFunctionCall","src":"51540:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"51534:5:27"},"nodeType":"YulFunctionCall","src":"51534:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"51518:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"51602:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51620:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"51625:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51616:3:27"},"nodeType":"YulFunctionCall","src":"51616:14:27"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulIdentifier","src":"51570:31:27"},"nodeType":"YulFunctionCall","src":"51570:61:27"},"nodeType":"YulExpressionStatement","src":"51570:61:27"}]},{"nodeType":"YulBlock","src":"51651:171:27","statements":[{"nodeType":"YulVariableDeclaration","src":"51693:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"51723:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"51730:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51719:3:27"},"nodeType":"YulFunctionCall","src":"51719:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"51713:5:27"},"nodeType":"YulFunctionCall","src":"51713:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"51697:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"51783:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51801:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"51806:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51797:3:27"},"nodeType":"YulFunctionCall","src":"51797:14:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"51749:33:27"},"nodeType":"YulFunctionCall","src":"51749:63:27"},"nodeType":"YulExpressionStatement","src":"51749:63:27"}]},{"nodeType":"YulBlock","src":"51832:350:27","statements":[{"nodeType":"YulVariableDeclaration","src":"51874:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"51904:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"51911:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51900:3:27"},"nodeType":"YulFunctionCall","src":"51900:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"51894:5:27"},"nodeType":"YulFunctionCall","src":"51894:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"51878:12:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51942:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"51947:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51938:3:27"},"nodeType":"YulFunctionCall","src":"51938:14:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51958:4:27"},{"name":"pos","nodeType":"YulIdentifier","src":"51964:3:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51954:3:27"},"nodeType":"YulFunctionCall","src":"51954:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51931:6:27"},"nodeType":"YulFunctionCall","src":"51931:38:27"},"nodeType":"YulExpressionStatement","src":"51931:38:27"},{"nodeType":"YulAssignment","src":"51982:189:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"52152:12:27"},{"name":"tail","nodeType":"YulIdentifier","src":"52166:4:27"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"51990:161:27"},"nodeType":"YulFunctionCall","src":"51990:181:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51982:4:27"}]}]},{"nodeType":"YulBlock","src":"52192:236:27","statements":[{"nodeType":"YulVariableDeclaration","src":"52230:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"52260:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"52267:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52256:3:27"},"nodeType":"YulFunctionCall","src":"52256:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"52250:5:27"},"nodeType":"YulFunctionCall","src":"52250:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"52234:12:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52298:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"52303:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52294:3:27"},"nodeType":"YulFunctionCall","src":"52294:14:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52314:4:27"},{"name":"pos","nodeType":"YulIdentifier","src":"52320:3:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"52310:3:27"},"nodeType":"YulFunctionCall","src":"52310:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52287:6:27"},"nodeType":"YulFunctionCall","src":"52287:38:27"},"nodeType":"YulExpressionStatement","src":"52287:38:27"},{"nodeType":"YulAssignment","src":"52338:79:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"52398:12:27"},{"name":"tail","nodeType":"YulIdentifier","src":"52412:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"52346:51:27"},"nodeType":"YulFunctionCall","src":"52346:71:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52338:4:27"}]}]},{"nodeType":"YulBlock","src":"52438:169:27","statements":[{"nodeType":"YulVariableDeclaration","src":"52482:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"52512:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"52519:4:27","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52508:3:27"},"nodeType":"YulFunctionCall","src":"52508:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"52502:5:27"},"nodeType":"YulFunctionCall","src":"52502:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"52486:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"52568:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52586:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"52591:4:27","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52582:3:27"},"nodeType":"YulFunctionCall","src":"52582:14:27"}],"functionName":{"name":"abi_encode_t_int16_to_t_int16","nodeType":"YulIdentifier","src":"52538:29:27"},"nodeType":"YulFunctionCall","src":"52538:59:27"},"nodeType":"YulExpressionStatement","src":"52538:59:27"}]},{"nodeType":"YulAssignment","src":"52617:11:27","value":{"name":"tail","nodeType":"YulIdentifier","src":"52624:4:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"52617:3:27"}]}]},"name":"abi_encode_t_struct$_WorkflowStep_$109_memory_ptr_to_t_struct$_WorkflowStep_$109_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"51406:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"51413:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"51422:3:27","type":""}],"src":"51305:1329:27"},{"body":{"nodeType":"YulBlock","src":"52778:134:27","statements":[{"nodeType":"YulAssignment","src":"52788:118:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"52894:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"52902:3:27"}],"functionName":{"name":"abi_encode_t_struct$_WorkflowStep_$109_memory_ptr_to_t_struct$_WorkflowStep_$109_memory_ptr","nodeType":"YulIdentifier","src":"52802:91:27"},"nodeType":"YulFunctionCall","src":"52802:104:27"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"52788:10:27"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_WorkflowStep_$109_memory_ptr_to_t_struct$_WorkflowStep_$109_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"52751:6:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"52759:3:27","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"52767:10:27","type":""}],"src":"52640:272:27"},{"body":{"nodeType":"YulBlock","src":"53022:38:27","statements":[{"nodeType":"YulAssignment","src":"53032:22:27","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"53044:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"53049:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53040:3:27"},"nodeType":"YulFunctionCall","src":"53040:14:27"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"53032:4:27"}]}]},"name":"array_nextElement_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"53009:3:27","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"53017:4:27","type":""}],"src":"52918:142:27"},{"body":{"nodeType":"YulBlock","src":"53292:951:27","statements":[{"nodeType":"YulVariableDeclaration","src":"53302:97:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"53393:5:27"}],"functionName":{"name":"array_length_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"53316:76:27"},"nodeType":"YulFunctionCall","src":"53316:83:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"53306:6:27","type":""}]},{"nodeType":"YulAssignment","src":"53408:112:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53508:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"53513:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"53415:92:27"},"nodeType":"YulFunctionCall","src":"53415:105:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"53408:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"53529:20:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"53546:3:27"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"53533:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"53558:39:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53574:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"53583:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"53591:4:27","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"53579:3:27"},"nodeType":"YulFunctionCall","src":"53579:17:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53570:3:27"},"nodeType":"YulFunctionCall","src":"53570:27:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"53562:4:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"53606:100:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"53700:5:27"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"53621:78:27"},"nodeType":"YulFunctionCall","src":"53621:85:27"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"53610:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"53715:21:27","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"53729:7:27"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"53719:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"53805:393:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53826:3:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53835:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"53841:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"53831:3:27"},"nodeType":"YulFunctionCall","src":"53831:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53819:6:27"},"nodeType":"YulFunctionCall","src":"53819:33:27"},"nodeType":"YulExpressionStatement","src":"53819:33:27"},{"nodeType":"YulVariableDeclaration","src":"53865:34:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"53892:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"53886:5:27"},"nodeType":"YulFunctionCall","src":"53886:13:27"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"53869:13:27","type":""}]},{"nodeType":"YulAssignment","src":"53912:130:27","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"54022:13:27"},{"name":"tail","nodeType":"YulIdentifier","src":"54037:4:27"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_WorkflowStep_$109_memory_ptr_to_t_struct$_WorkflowStep_$109_memory_ptr","nodeType":"YulIdentifier","src":"53920:101:27"},"nodeType":"YulFunctionCall","src":"53920:122:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53912:4:27"}]},{"nodeType":"YulAssignment","src":"54055:99:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"54147:6:27"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"54065:81:27"},"nodeType":"YulFunctionCall","src":"54065:89:27"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"54055:6:27"}]},{"nodeType":"YulAssignment","src":"54167:21:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54178:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"54183:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54174:3:27"},"nodeType":"YulFunctionCall","src":"54174:14:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"54167:3:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"53767:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"53770:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"53764:2:27"},"nodeType":"YulFunctionCall","src":"53764:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"53778:18:27","statements":[{"nodeType":"YulAssignment","src":"53780:14:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"53789:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"53792:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53785:3:27"},"nodeType":"YulFunctionCall","src":"53785:9:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"53780:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"53749:14:27","statements":[{"nodeType":"YulVariableDeclaration","src":"53751:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"53760:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"53755:1:27","type":""}]}]},"src":"53745:453:27"},{"nodeType":"YulAssignment","src":"54207:11:27","value":{"name":"tail","nodeType":"YulIdentifier","src":"54214:4:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"54207:3:27"}]},{"nodeType":"YulAssignment","src":"54227:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"54234:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"54227:3:27"}]}]},"name":"abi_encode_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"53271:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"53278:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"53287:3:27","type":""}],"src":"53120:1123:27"},{"body":{"nodeType":"YulBlock","src":"54403:588:27","statements":[{"nodeType":"YulVariableDeclaration","src":"54413:26:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54429:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"54434:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54425:3:27"},"nodeType":"YulFunctionCall","src":"54425:14:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"54417:4:27","type":""}]},{"nodeType":"YulBlock","src":"54449:181:27","statements":[{"nodeType":"YulVariableDeclaration","src":"54501:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"54531:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"54538:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54527:3:27"},"nodeType":"YulFunctionCall","src":"54527:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"54521:5:27"},"nodeType":"YulFunctionCall","src":"54521:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"54505:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"54591:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54609:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"54614:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54605:3:27"},"nodeType":"YulFunctionCall","src":"54605:14:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"54557:33:27"},"nodeType":"YulFunctionCall","src":"54557:63:27"},"nodeType":"YulExpressionStatement","src":"54557:63:27"}]},{"nodeType":"YulBlock","src":"54640:324:27","statements":[{"nodeType":"YulVariableDeclaration","src":"54676:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"54706:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"54713:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54702:3:27"},"nodeType":"YulFunctionCall","src":"54702:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"54696:5:27"},"nodeType":"YulFunctionCall","src":"54696:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"54680:12:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54744:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"54749:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54740:3:27"},"nodeType":"YulFunctionCall","src":"54740:14:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54760:4:27"},{"name":"pos","nodeType":"YulIdentifier","src":"54766:3:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54756:3:27"},"nodeType":"YulFunctionCall","src":"54756:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54733:6:27"},"nodeType":"YulFunctionCall","src":"54733:38:27"},"nodeType":"YulExpressionStatement","src":"54733:38:27"},{"nodeType":"YulAssignment","src":"54784:169:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"54934:12:27"},{"name":"tail","nodeType":"YulIdentifier","src":"54948:4:27"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"54792:141:27"},"nodeType":"YulFunctionCall","src":"54792:161:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54784:4:27"}]}]},{"nodeType":"YulAssignment","src":"54974:11:27","value":{"name":"tail","nodeType":"YulIdentifier","src":"54981:4:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"54974:3:27"}]}]},"name":"abi_encode_t_struct$_Workflow_$93_memory_ptr_to_t_struct$_Workflow_$93_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"54382:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"54389:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"54398:3:27","type":""}],"src":"54291:700:27"},{"body":{"nodeType":"YulBlock","src":"55181:696:27","statements":[{"nodeType":"YulVariableDeclaration","src":"55191:26:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55207:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"55212:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55203:3:27"},"nodeType":"YulFunctionCall","src":"55203:14:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"55195:4:27","type":""}]},{"nodeType":"YulBlock","src":"55227:171:27","statements":[{"nodeType":"YulVariableDeclaration","src":"55269:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55299:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"55306:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55295:3:27"},"nodeType":"YulFunctionCall","src":"55295:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"55289:5:27"},"nodeType":"YulFunctionCall","src":"55289:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"55273:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"55359:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55377:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"55382:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55373:3:27"},"nodeType":"YulFunctionCall","src":"55373:14:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"55325:33:27"},"nodeType":"YulFunctionCall","src":"55325:63:27"},"nodeType":"YulExpressionStatement","src":"55325:63:27"}]},{"nodeType":"YulBlock","src":"55408:165:27","statements":[{"nodeType":"YulVariableDeclaration","src":"55444:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55474:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"55481:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55470:3:27"},"nodeType":"YulFunctionCall","src":"55470:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"55464:5:27"},"nodeType":"YulFunctionCall","src":"55464:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"55448:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"55534:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55552:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"55557:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55548:3:27"},"nodeType":"YulFunctionCall","src":"55548:14:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"55500:33:27"},"nodeType":"YulFunctionCall","src":"55500:63:27"},"nodeType":"YulExpressionStatement","src":"55500:63:27"}]},{"nodeType":"YulBlock","src":"55583:267:27","statements":[{"nodeType":"YulVariableDeclaration","src":"55622:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"55652:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"55659:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55648:3:27"},"nodeType":"YulFunctionCall","src":"55648:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"55642:5:27"},"nodeType":"YulFunctionCall","src":"55642:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"55626:12:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55690:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"55695:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55686:3:27"},"nodeType":"YulFunctionCall","src":"55686:14:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55706:4:27"},{"name":"pos","nodeType":"YulIdentifier","src":"55712:3:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"55702:3:27"},"nodeType":"YulFunctionCall","src":"55702:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55679:6:27"},"nodeType":"YulFunctionCall","src":"55679:38:27"},"nodeType":"YulExpressionStatement","src":"55679:38:27"},{"nodeType":"YulAssignment","src":"55730:109:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"55820:12:27"},{"name":"tail","nodeType":"YulIdentifier","src":"55834:4:27"}],"functionName":{"name":"abi_encode_t_struct$_Workflow_$93_memory_ptr_to_t_struct$_Workflow_$93_memory_ptr","nodeType":"YulIdentifier","src":"55738:81:27"},"nodeType":"YulFunctionCall","src":"55738:101:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55730:4:27"}]}]},{"nodeType":"YulAssignment","src":"55860:11:27","value":{"name":"tail","nodeType":"YulIdentifier","src":"55867:4:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"55860:3:27"}]}]},"name":"abi_encode_t_struct$_BridgePayload_$83_memory_ptr_to_t_struct$_BridgePayload_$83_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"55160:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"55167:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"55176:3:27","type":""}],"src":"55049:828:27"},{"body":{"nodeType":"YulBlock","src":"56095:397:27","statements":[{"nodeType":"YulAssignment","src":"56105:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56117:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"56128:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56113:3:27"},"nodeType":"YulFunctionCall","src":"56113:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56105:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"56185:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56198:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"56209:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56194:3:27"},"nodeType":"YulFunctionCall","src":"56194:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"56141:43:27"},"nodeType":"YulFunctionCall","src":"56141:71:27"},"nodeType":"YulExpressionStatement","src":"56141:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"56266:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56279:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"56290:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56275:3:27"},"nodeType":"YulFunctionCall","src":"56275:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"56222:43:27"},"nodeType":"YulFunctionCall","src":"56222:72:27"},"nodeType":"YulExpressionStatement","src":"56222:72:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56315:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"56326:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56311:3:27"},"nodeType":"YulFunctionCall","src":"56311:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56335:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"56341:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"56331:3:27"},"nodeType":"YulFunctionCall","src":"56331:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56304:6:27"},"nodeType":"YulFunctionCall","src":"56304:48:27"},"nodeType":"YulExpressionStatement","src":"56304:48:27"},{"nodeType":"YulAssignment","src":"56361:124:27","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"56471:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"56480:4:27"}],"functionName":{"name":"abi_encode_t_struct$_BridgePayload_$83_memory_ptr_to_t_struct$_BridgePayload_$83_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"56369:101:27"},"nodeType":"YulFunctionCall","src":"56369:116:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56361:4:27"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_struct$_BridgePayload_$83_memory_ptr__to_t_address_t_uint256_t_struct$_BridgePayload_$83_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"56051:9:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"56063:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"56071:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"56079:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"56090:4:27","type":""}],"src":"55883:609:27"},{"body":{"nodeType":"YulBlock","src":"56662:588:27","statements":[{"nodeType":"YulVariableDeclaration","src":"56672:26:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56688:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"56693:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56684:3:27"},"nodeType":"YulFunctionCall","src":"56684:14:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"56676:4:27","type":""}]},{"nodeType":"YulBlock","src":"56708:181:27","statements":[{"nodeType":"YulVariableDeclaration","src":"56760:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"56790:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"56797:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56786:3:27"},"nodeType":"YulFunctionCall","src":"56786:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"56780:5:27"},"nodeType":"YulFunctionCall","src":"56780:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"56764:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"56850:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56868:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"56873:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56864:3:27"},"nodeType":"YulFunctionCall","src":"56864:14:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"56816:33:27"},"nodeType":"YulFunctionCall","src":"56816:63:27"},"nodeType":"YulExpressionStatement","src":"56816:63:27"}]},{"nodeType":"YulBlock","src":"56899:324:27","statements":[{"nodeType":"YulVariableDeclaration","src":"56935:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"56965:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"56972:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56961:3:27"},"nodeType":"YulFunctionCall","src":"56961:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"56955:5:27"},"nodeType":"YulFunctionCall","src":"56955:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"56939:12:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57003:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"57008:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56999:3:27"},"nodeType":"YulFunctionCall","src":"56999:14:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"57019:4:27"},{"name":"pos","nodeType":"YulIdentifier","src":"57025:3:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"57015:3:27"},"nodeType":"YulFunctionCall","src":"57015:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56992:6:27"},"nodeType":"YulFunctionCall","src":"56992:38:27"},"nodeType":"YulExpressionStatement","src":"56992:38:27"},{"nodeType":"YulAssignment","src":"57043:169:27","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"57193:12:27"},{"name":"tail","nodeType":"YulIdentifier","src":"57207:4:27"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"57051:141:27"},"nodeType":"YulFunctionCall","src":"57051:161:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57043:4:27"}]}]},{"nodeType":"YulAssignment","src":"57233:11:27","value":{"name":"tail","nodeType":"YulIdentifier","src":"57240:4:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"57233:3:27"}]}]},"name":"abi_encode_t_struct$_Workflow_$93_memory_ptr_to_t_struct$_Workflow_$93_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"56641:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"56648:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"56657:3:27","type":""}],"src":"56540:710:27"},{"body":{"nodeType":"YulBlock","src":"57590:625:27","statements":[{"nodeType":"YulAssignment","src":"57600:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57612:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"57623:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57608:3:27"},"nodeType":"YulFunctionCall","src":"57608:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57600:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"57681:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57694:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"57705:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57690:3:27"},"nodeType":"YulFunctionCall","src":"57690:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"57637:43:27"},"nodeType":"YulFunctionCall","src":"57637:71:27"},"nodeType":"YulExpressionStatement","src":"57637:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"57762:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57775:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"57786:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57771:3:27"},"nodeType":"YulFunctionCall","src":"57771:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"57718:43:27"},"nodeType":"YulFunctionCall","src":"57718:72:27"},"nodeType":"YulExpressionStatement","src":"57718:72:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57811:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"57822:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57807:3:27"},"nodeType":"YulFunctionCall","src":"57807:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"57831:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"57837:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"57827:3:27"},"nodeType":"YulFunctionCall","src":"57827:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57800:6:27"},"nodeType":"YulFunctionCall","src":"57800:48:27"},"nodeType":"YulExpressionStatement","src":"57800:48:27"},{"nodeType":"YulAssignment","src":"57857:114:27","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"57957:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"57966:4:27"}],"functionName":{"name":"abi_encode_t_struct$_Workflow_$93_memory_ptr_to_t_struct$_Workflow_$93_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"57865:91:27"},"nodeType":"YulFunctionCall","src":"57865:106:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57857:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57992:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"58003:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57988:3:27"},"nodeType":"YulFunctionCall","src":"57988:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"58012:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"58018:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"58008:3:27"},"nodeType":"YulFunctionCall","src":"58008:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57981:6:27"},"nodeType":"YulFunctionCall","src":"57981:48:27"},"nodeType":"YulExpressionStatement","src":"57981:48:27"},{"nodeType":"YulAssignment","src":"58038:170:27","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"58194:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"58203:4:27"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"58046:147:27"},"nodeType":"YulFunctionCall","src":"58046:162:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"58038:4:27"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_struct$_Workflow_$93_memory_ptr_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr__to_t_address_t_uint256_t_struct$_Workflow_$93_memory_ptr_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"57538:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"57550:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"57558:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"57566:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"57574:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"57585:4:27","type":""}],"src":"57256:959:27"},{"body":{"nodeType":"YulBlock","src":"58347:206:27","statements":[{"nodeType":"YulAssignment","src":"58357:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58369:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"58380:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58365:3:27"},"nodeType":"YulFunctionCall","src":"58365:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"58357:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"58437:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58450:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"58461:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58446:3:27"},"nodeType":"YulFunctionCall","src":"58446:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"58393:43:27"},"nodeType":"YulFunctionCall","src":"58393:71:27"},"nodeType":"YulExpressionStatement","src":"58393:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"58518:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58531:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"58542:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58527:3:27"},"nodeType":"YulFunctionCall","src":"58527:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"58474:43:27"},"nodeType":"YulFunctionCall","src":"58474:72:27"},"nodeType":"YulExpressionStatement","src":"58474:72:27"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"58311:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"58323:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"58331:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"58342:4:27","type":""}],"src":"58221:332:27"},{"body":{"nodeType":"YulBlock","src":"58633:271:27","statements":[{"body":{"nodeType":"YulBlock","src":"58679:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"58681:77:27"},"nodeType":"YulFunctionCall","src":"58681:79:27"},"nodeType":"YulExpressionStatement","src":"58681:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"58654:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"58663:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"58650:3:27"},"nodeType":"YulFunctionCall","src":"58650:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"58675:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"58646:3:27"},"nodeType":"YulFunctionCall","src":"58646:32:27"},"nodeType":"YulIf","src":"58643:119:27"},{"nodeType":"YulBlock","src":"58772:125:27","statements":[{"nodeType":"YulVariableDeclaration","src":"58787:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"58801:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"58791:6:27","type":""}]},{"nodeType":"YulAssignment","src":"58816:71:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58859:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"58870:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58855:3:27"},"nodeType":"YulFunctionCall","src":"58855:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"58879:7:27"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"58826:28:27"},"nodeType":"YulFunctionCall","src":"58826:61:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"58816:6:27"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"58603:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"58614:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"58626:6:27","type":""}],"src":"58559:345:27"},{"body":{"nodeType":"YulBlock","src":"59036:206:27","statements":[{"nodeType":"YulAssignment","src":"59046:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59058:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"59069:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59054:3:27"},"nodeType":"YulFunctionCall","src":"59054:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"59046:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"59126:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59139:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"59150:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59135:3:27"},"nodeType":"YulFunctionCall","src":"59135:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"59082:43:27"},"nodeType":"YulFunctionCall","src":"59082:71:27"},"nodeType":"YulExpressionStatement","src":"59082:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"59207:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59220:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"59231:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59216:3:27"},"nodeType":"YulFunctionCall","src":"59216:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"59163:43:27"},"nodeType":"YulFunctionCall","src":"59163:72:27"},"nodeType":"YulExpressionStatement","src":"59163:72:27"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"59000:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"59012:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"59020:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"59031:4:27","type":""}],"src":"58910:332:27"},{"body":{"nodeType":"YulBlock","src":"59325:274:27","statements":[{"body":{"nodeType":"YulBlock","src":"59371:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"59373:77:27"},"nodeType":"YulFunctionCall","src":"59373:79:27"},"nodeType":"YulExpressionStatement","src":"59373:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"59346:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"59355:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"59342:3:27"},"nodeType":"YulFunctionCall","src":"59342:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"59367:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"59338:3:27"},"nodeType":"YulFunctionCall","src":"59338:32:27"},"nodeType":"YulIf","src":"59335:119:27"},{"nodeType":"YulBlock","src":"59464:128:27","statements":[{"nodeType":"YulVariableDeclaration","src":"59479:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"59493:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"59483:6:27","type":""}]},{"nodeType":"YulAssignment","src":"59508:74:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59554:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"59565:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59550:3:27"},"nodeType":"YulFunctionCall","src":"59550:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"59574:7:27"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"59518:31:27"},"nodeType":"YulFunctionCall","src":"59518:64:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"59508:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"59295:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"59306:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"59318:6:27","type":""}],"src":"59248:351:27"},{"body":{"nodeType":"YulBlock","src":"59649:147:27","statements":[{"nodeType":"YulAssignment","src":"59659:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"59682:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"59664:17:27"},"nodeType":"YulFunctionCall","src":"59664:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"59659:1:27"}]},{"nodeType":"YulAssignment","src":"59693:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"59716:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"59698:17:27"},"nodeType":"YulFunctionCall","src":"59698:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"59693:1:27"}]},{"nodeType":"YulAssignment","src":"59727:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"59738:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"59741:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59734:3:27"},"nodeType":"YulFunctionCall","src":"59734:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"59727:3:27"}]},{"body":{"nodeType":"YulBlock","src":"59767:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"59769:16:27"},"nodeType":"YulFunctionCall","src":"59769:18:27"},"nodeType":"YulExpressionStatement","src":"59769:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"59759:1:27"},{"name":"sum","nodeType":"YulIdentifier","src":"59762:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"59756:2:27"},"nodeType":"YulFunctionCall","src":"59756:10:27"},"nodeType":"YulIf","src":"59753:36:27"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"59636:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"59639:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"59645:3:27","type":""}],"src":"59605:191:27"},{"body":{"nodeType":"YulBlock","src":"59908:123:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"59930:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"59938:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59926:3:27"},"nodeType":"YulFunctionCall","src":"59926:14:27"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"59942:34:27","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"59919:6:27"},"nodeType":"YulFunctionCall","src":"59919:58:27"},"nodeType":"YulExpressionStatement","src":"59919:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"59998:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"60006:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59994:3:27"},"nodeType":"YulFunctionCall","src":"59994:15:27"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"60011:12:27","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"59987:6:27"},"nodeType":"YulFunctionCall","src":"59987:37:27"},"nodeType":"YulExpressionStatement","src":"59987:37:27"}]},"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"59900:6:27","type":""}],"src":"59802:229:27"},{"body":{"nodeType":"YulBlock","src":"60183:220:27","statements":[{"nodeType":"YulAssignment","src":"60193:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60259:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"60264:2:27","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"60200:58:27"},"nodeType":"YulFunctionCall","src":"60200:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"60193:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60365:3:27"}],"functionName":{"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulIdentifier","src":"60276:88:27"},"nodeType":"YulFunctionCall","src":"60276:93:27"},"nodeType":"YulExpressionStatement","src":"60276:93:27"},{"nodeType":"YulAssignment","src":"60378:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60389:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"60394:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60385:3:27"},"nodeType":"YulFunctionCall","src":"60385:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"60378:3:27"}]}]},"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"60171:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"60179:3:27","type":""}],"src":"60037:366:27"},{"body":{"nodeType":"YulBlock","src":"60580:248:27","statements":[{"nodeType":"YulAssignment","src":"60590:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60602:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"60613:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60598:3:27"},"nodeType":"YulFunctionCall","src":"60598:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60590:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60637:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"60648:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60633:3:27"},"nodeType":"YulFunctionCall","src":"60633:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"60656:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"60662:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"60652:3:27"},"nodeType":"YulFunctionCall","src":"60652:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"60626:6:27"},"nodeType":"YulFunctionCall","src":"60626:47:27"},"nodeType":"YulExpressionStatement","src":"60626:47:27"},{"nodeType":"YulAssignment","src":"60682:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"60816:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"60690:124:27"},"nodeType":"YulFunctionCall","src":"60690:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60682:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"60560:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"60575:4:27","type":""}],"src":"60409:419:27"},{"body":{"nodeType":"YulBlock","src":"60940:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"60962:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"60970:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60958:3:27"},"nodeType":"YulFunctionCall","src":"60958:14:27"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"60974:34:27","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"60951:6:27"},"nodeType":"YulFunctionCall","src":"60951:58:27"},"nodeType":"YulExpressionStatement","src":"60951:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"61030:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"61038:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61026:3:27"},"nodeType":"YulFunctionCall","src":"61026:15:27"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"61043:8:27","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"61019:6:27"},"nodeType":"YulFunctionCall","src":"61019:33:27"},"nodeType":"YulExpressionStatement","src":"61019:33:27"}]},"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"60932:6:27","type":""}],"src":"60834:225:27"},{"body":{"nodeType":"YulBlock","src":"61211:220:27","statements":[{"nodeType":"YulAssignment","src":"61221:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"61287:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"61292:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"61228:58:27"},"nodeType":"YulFunctionCall","src":"61228:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"61221:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"61393:3:27"}],"functionName":{"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulIdentifier","src":"61304:88:27"},"nodeType":"YulFunctionCall","src":"61304:93:27"},"nodeType":"YulExpressionStatement","src":"61304:93:27"},{"nodeType":"YulAssignment","src":"61406:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"61417:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"61422:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61413:3:27"},"nodeType":"YulFunctionCall","src":"61413:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"61406:3:27"}]}]},"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"61199:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"61207:3:27","type":""}],"src":"61065:366:27"},{"body":{"nodeType":"YulBlock","src":"61608:248:27","statements":[{"nodeType":"YulAssignment","src":"61618:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61630:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"61641:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61626:3:27"},"nodeType":"YulFunctionCall","src":"61626:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"61618:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61665:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"61676:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61661:3:27"},"nodeType":"YulFunctionCall","src":"61661:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"61684:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"61690:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"61680:3:27"},"nodeType":"YulFunctionCall","src":"61680:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"61654:6:27"},"nodeType":"YulFunctionCall","src":"61654:47:27"},"nodeType":"YulExpressionStatement","src":"61654:47:27"},{"nodeType":"YulAssignment","src":"61710:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"61844:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"61718:124:27"},"nodeType":"YulFunctionCall","src":"61718:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"61710:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61588:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"61603:4:27","type":""}],"src":"61437:419:27"},{"body":{"nodeType":"YulBlock","src":"61975:34:27","statements":[{"nodeType":"YulAssignment","src":"61985:18:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"62000:3:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"61985:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"61947:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"61952:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"61963:11:27","type":""}],"src":"61862:147:27"},{"body":{"nodeType":"YulBlock","src":"62123:278:27","statements":[{"nodeType":"YulVariableDeclaration","src":"62133:52:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"62179:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"62147:31:27"},"nodeType":"YulFunctionCall","src":"62147:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"62137:6:27","type":""}]},{"nodeType":"YulAssignment","src":"62194:95:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"62277:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"62282:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"62201:75:27"},"nodeType":"YulFunctionCall","src":"62201:88:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"62194:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"62337:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"62344:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62333:3:27"},"nodeType":"YulFunctionCall","src":"62333:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"62351:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"62356:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"62298:34:27"},"nodeType":"YulFunctionCall","src":"62298:65:27"},"nodeType":"YulExpressionStatement","src":"62298:65:27"},{"nodeType":"YulAssignment","src":"62372:23:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"62383:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"62388:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62379:3:27"},"nodeType":"YulFunctionCall","src":"62379:16:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"62372:3:27"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"62104:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"62111:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"62119:3:27","type":""}],"src":"62015:386:27"},{"body":{"nodeType":"YulBlock","src":"62541:137:27","statements":[{"nodeType":"YulAssignment","src":"62552:100:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"62639:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"62648:3:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"62559:79:27"},"nodeType":"YulFunctionCall","src":"62559:93:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"62552:3:27"}]},{"nodeType":"YulAssignment","src":"62662:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"62669:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"62662:3:27"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"62520:3:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"62526:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"62537:3:27","type":""}],"src":"62407:271:27"},{"body":{"nodeType":"YulBlock","src":"62790:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"62812:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"62820:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62808:3:27"},"nodeType":"YulFunctionCall","src":"62808:14:27"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"62824:31:27","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"62801:6:27"},"nodeType":"YulFunctionCall","src":"62801:55:27"},"nodeType":"YulExpressionStatement","src":"62801:55:27"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"62782:6:27","type":""}],"src":"62684:179:27"},{"body":{"nodeType":"YulBlock","src":"63015:220:27","statements":[{"nodeType":"YulAssignment","src":"63025:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"63091:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"63096:2:27","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"63032:58:27"},"nodeType":"YulFunctionCall","src":"63032:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"63025:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"63197:3:27"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"63108:88:27"},"nodeType":"YulFunctionCall","src":"63108:93:27"},"nodeType":"YulExpressionStatement","src":"63108:93:27"},{"nodeType":"YulAssignment","src":"63210:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"63221:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"63226:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63217:3:27"},"nodeType":"YulFunctionCall","src":"63217:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"63210:3:27"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"63003:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"63011:3:27","type":""}],"src":"62869:366:27"},{"body":{"nodeType":"YulBlock","src":"63412:248:27","statements":[{"nodeType":"YulAssignment","src":"63422:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"63434:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"63445:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63430:3:27"},"nodeType":"YulFunctionCall","src":"63430:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"63422:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"63469:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"63480:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63465:3:27"},"nodeType":"YulFunctionCall","src":"63465:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"63488:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"63494:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"63484:3:27"},"nodeType":"YulFunctionCall","src":"63484:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"63458:6:27"},"nodeType":"YulFunctionCall","src":"63458:47:27"},"nodeType":"YulExpressionStatement","src":"63458:47:27"},{"nodeType":"YulAssignment","src":"63514:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"63648:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"63522:124:27"},"nodeType":"YulFunctionCall","src":"63522:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"63514:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"63392:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"63407:4:27","type":""}],"src":"63241:419:27"},{"body":{"nodeType":"YulBlock","src":"63725:40:27","statements":[{"nodeType":"YulAssignment","src":"63736:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63752:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"63746:5:27"},"nodeType":"YulFunctionCall","src":"63746:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"63736:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63708:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"63718:6:27","type":""}],"src":"63666:99:27"},{"body":{"nodeType":"YulBlock","src":"63863:285:27","statements":[{"nodeType":"YulVariableDeclaration","src":"63873:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63920:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"63887:32:27"},"nodeType":"YulFunctionCall","src":"63887:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"63877:6:27","type":""}]},{"nodeType":"YulAssignment","src":"63935:78:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64001:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"64006:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"63942:58:27"},"nodeType":"YulFunctionCall","src":"63942:71:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"63935:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"64061:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"64068:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64057:3:27"},"nodeType":"YulFunctionCall","src":"64057:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"64075:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"64080:6:27"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"64022:34:27"},"nodeType":"YulFunctionCall","src":"64022:65:27"},"nodeType":"YulExpressionStatement","src":"64022:65:27"},{"nodeType":"YulAssignment","src":"64096:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64107:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"64134:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"64112:21:27"},"nodeType":"YulFunctionCall","src":"64112:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64103:3:27"},"nodeType":"YulFunctionCall","src":"64103:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"64096:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63844:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"63851:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"63859:3:27","type":""}],"src":"63771:377:27"},{"body":{"nodeType":"YulBlock","src":"64272:195:27","statements":[{"nodeType":"YulAssignment","src":"64282:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"64294:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"64305:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64290:3:27"},"nodeType":"YulFunctionCall","src":"64290:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"64282:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"64329:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"64340:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64325:3:27"},"nodeType":"YulFunctionCall","src":"64325:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"64348:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"64354:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"64344:3:27"},"nodeType":"YulFunctionCall","src":"64344:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"64318:6:27"},"nodeType":"YulFunctionCall","src":"64318:47:27"},"nodeType":"YulExpressionStatement","src":"64318:47:27"},{"nodeType":"YulAssignment","src":"64374:86:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"64446:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"64455:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"64382:63:27"},"nodeType":"YulFunctionCall","src":"64382:78:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"64374:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"64244:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"64256:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"64267:4:27","type":""}],"src":"64154:313:27"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // struct AssetAmount[]\n    function abi_decode_t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x60)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_AssetAmount_$66_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_AssetType_$72(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_AssetType_$72(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_AssetType_$72(value)\n    }\n\n    function convert_t_enum$_AssetType_$72_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_AssetType_$72(value)\n    }\n\n    function abi_encode_t_enum$_AssetType_$72_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_AssetType_$72_to_t_uint8(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct Asset -> struct Asset\n    function abi_encode_t_struct$_Asset_$57_memory_ptr_to_t_struct$_Asset_$57_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // assetType\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_enum$_AssetType_$72_to_t_uint8(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // assetAddress\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct AssetAmount -> struct AssetAmount\n    function abi_encode_t_struct$_AssetAmount_$66_memory_ptr_to_t_struct$_AssetAmount_$66_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // asset\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_struct$_Asset_$57_memory_ptr_to_t_struct$_Asset_$57_memory_ptr(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_AssetAmount_$66_memory_ptr_to_t_struct$_AssetAmount_$66_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_AssetAmount_$66_memory_ptr_to_t_struct$_AssetAmount_$66_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x60)\n    }\n\n    function array_nextElement_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct AssetAmount[] -> struct AssetAmount[]\n    function abi_encode_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_AssetAmount_$66_memory_ptr_to_t_struct$_AssetAmount_$66_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function cleanup_t_int16(value) -> cleaned {\n        cleaned := signextend(1, value)\n    }\n\n    function abi_encode_t_int16_to_t_int16(value, pos) {\n        mstore(pos, cleanup_t_int16(value))\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function abi_encode_t_int24_to_t_int24(value, pos) {\n        mstore(pos, cleanup_t_int24(value))\n    }\n\n    // struct WorkflowStepResult -> struct WorkflowStepResult\n    function abi_encode_t_struct$_WorkflowStepResult_$138_memory_ptr_to_t_struct$_WorkflowStepResult_$138_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // inputAssetAmounts\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // outputAssetAmounts\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // nextStepIndex\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_int16_to_t_int16(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_int24_to_t_int24(memberValue0, add(pos, 0x60))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_WorkflowStepResult_$138_memory_ptr__to_t_struct$_WorkflowStepResult_$138_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_WorkflowStepResult_$138_memory_ptr_to_t_struct$_WorkflowStepResult_$138_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint256t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_590e660aed693aa0f9d319191c32c446b71871c11dee5c13929b633f25f7a9ac(memPtr) {\n\n        mstore(add(memPtr, 0), \"there must be 2 input assets\")\n\n    }\n\n    function abi_encode_t_stringliteral_590e660aed693aa0f9d319191c32c446b71871c11dee5c13929b633f25f7a9ac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_590e660aed693aa0f9d319191c32c446b71871c11dee5c13929b633f25f7a9ac(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_590e660aed693aa0f9d319191c32c446b71871c11dee5c13929b633f25f7a9ac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_590e660aed693aa0f9d319191c32c446b71871c11dee5c13929b633f25f7a9ac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_enum$_AssetType_$72(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_AssetType_$72(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_AssetType_$72(value)\n    }\n\n    function abi_decode_tuple_t_enum$_AssetType_$72(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_AssetType_$72(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249(memPtr) {\n\n        mstore(add(memPtr, 0), \"one input asset must be an ERC20\")\n\n    }\n\n    function abi_encode_t_stringliteral_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5be4046836080a9875735714aa4619464f8335b1223e78d7a4d399a3723ce249_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    // struct Asset\n    function abi_decode_t_struct$_Asset_$57_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // assetType\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_enum$_AssetType_$72(add(headStart, offset), end))\n\n        }\n\n        {\n            // assetAddress\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct AssetAmount\n    function abi_decode_t_struct$_AssetAmount_$66_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // asset\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_struct$_Asset_$57_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount\n\n            let offset := 64\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_AssetAmount_$66_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_AssetAmount_$66_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_341516f60fb8577ba204e32e18bfdd1f3bcf9219299c2411ebc2e5ab9e051915(memPtr) {\n\n        mstore(add(memPtr, 0), \"one input asset must be native\")\n\n    }\n\n    function abi_encode_t_stringliteral_341516f60fb8577ba204e32e18bfdd1f3bcf9219299c2411ebc2e5ab9e051915_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_341516f60fb8577ba204e32e18bfdd1f3bcf9219299c2411ebc2e5ab9e051915(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_341516f60fb8577ba204e32e18bfdd1f3bcf9219299c2411ebc2e5ab9e051915__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_341516f60fb8577ba204e32e18bfdd1f3bcf9219299c2411ebc2e5ab9e051915_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5f03c7f0873af184bf69334aa0d702e8990fbd46f725ffc3fd003cc841705e0c(memPtr) {\n\n        mstore(add(memPtr, 0), \"the input asset must be an ERC20\")\n\n        mstore(add(memPtr, 32), \" or Native\")\n\n    }\n\n    function abi_encode_t_stringliteral_5f03c7f0873af184bf69334aa0d702e8990fbd46f725ffc3fd003cc841705e0c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_5f03c7f0873af184bf69334aa0d702e8990fbd46f725ffc3fd003cc841705e0c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5f03c7f0873af184bf69334aa0d702e8990fbd46f725ffc3fd003cc841705e0c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5f03c7f0873af184bf69334aa0d702e8990fbd46f725ffc3fd003cc841705e0c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // struct StargateBridgeActionArgs\n    function abi_decode_t_struct$_StargateBridgeActionArgs_$2372_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0180) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0180)\n\n        {\n            // dstActionAddress\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // dstUserAddress\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // dstChainId\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint16(add(headStart, offset), end))\n\n        }\n\n        {\n            // srcPoolId\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // dstPoolId\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // dstGasForCall\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // dstNativeAmount\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // minAmountOut\n\n            let offset := 224\n\n            mstore(add(value, 0xe0), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // minAmountOutIsPercent\n\n            let offset := 256\n\n            mstore(add(value, 0x0100), abi_decode_t_bool(add(headStart, offset), end))\n\n        }\n\n        {\n            // continuationWorkflow\n\n            let offset := calldataload(add(headStart, 288))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x0120), abi_decode_t_bytes_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // nonce\n\n            let offset := 320\n\n            mstore(add(value, 0x0140), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // includeContinuationWorkflowInEvent\n\n            let offset := 352\n\n            mstore(add(value, 0x0160), abi_decode_t_bool(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_StargateBridgeActionArgs_$2372_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_StargateBridgeActionArgs_$2372_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_uint16_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_uint16_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        mstore(add(headStart, 288), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value9,  tail)\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct IStargateRouter.lzTxObj -> struct IStargateRouter.lzTxObj\n    function abi_encode_t_struct$_lzTxObj_$1994_memory_ptr_to_t_struct$_lzTxObj_$1994_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // dstGasForCall\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // dstNativeAmount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // dstNativeAddr\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint256_t_uint256_t_address_payable_t_uint256_t_uint256_t_struct$_lzTxObj_$1994_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_uint256_t_uint256_t_address_payable_t_uint256_t_uint256_t_struct$_lzTxObj_$1994_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_struct$_lzTxObj_$1994_memory_ptr_to_t_struct$_lzTxObj_$1994_memory_ptr_fromStack(value6,  tail)\n\n        mstore(add(headStart, 224), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value7,  tail)\n\n        mstore(add(headStart, 256), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value8,  tail)\n\n    }\n\n    function store_literal_in_memory_8e1550899f8bc1bc6c149effec0f09a9ee45bec22ed4d270ef087ee96a82320e(memPtr) {\n\n        mstore(add(memPtr, 0), \"stargate-bridge\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e1550899f8bc1bc6c149effec0f09a9ee45bec22ed4d270ef087ee96a82320e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_8e1550899f8bc1bc6c149effec0f09a9ee45bec22ed4d270ef087ee96a82320e(pos)\n        end := add(pos, 32)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    // struct AssetAmount[] -> struct AssetAmount[]\n    function abi_encode_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_AssetAmount_$66_memory_ptr_to_t_struct$_AssetAmount_$66_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e1550899f8bc1bc6c149effec0f09a9ee45bec22ed4d270ef087ee96a82320e_t_uint16_t_uint256_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_string_memory_ptr_t_uint16_t_uint256_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e1550899f8bc1bc6c149effec0f09a9ee45bec22ed4d270ef087ee96a82320e_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function store_literal_in_memory_5a267dde6b27d43e272bb2037a542b88bf55a0b6a5c36fa1965ab7e904ec9984(memPtr) {\n\n        mstore(add(memPtr, 0), \"only Stargate is permitted to ca\")\n\n        mstore(add(memPtr, 32), \"ll sgReceive\")\n\n    }\n\n    function abi_encode_t_stringliteral_5a267dde6b27d43e272bb2037a542b88bf55a0b6a5c36fa1965ab7e904ec9984_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_5a267dde6b27d43e272bb2037a542b88bf55a0b6a5c36fa1965ab7e904ec9984(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5a267dde6b27d43e272bb2037a542b88bf55a0b6a5c36fa1965ab7e904ec9984__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5a267dde6b27d43e272bb2037a542b88bf55a0b6a5c36fa1965ab7e904ec9984_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function array_allocation_size_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function array_allocation_size_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_enum$_AssetType_$72_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_enum$_AssetType_$72(value)\n    }\n\n    // struct Asset\n    function abi_decode_t_struct$_Asset_$57_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // assetType\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_enum$_AssetType_$72_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // assetAddress\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct WorkflowStepInputAsset\n    function abi_decode_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x80)\n\n        {\n            // sourceIsCaller\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // amountIsPercent\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // asset\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_struct$_Asset_$57_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount\n\n            let offset := 128\n\n            mstore(add(value, 0x60), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct WorkflowStepInputAsset[]\n    function abi_decode_available_length_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0xa0))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0xa0) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct WorkflowStepInputAsset[]\n    function abi_decode_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function validator_revert_t_int16(value) {\n        if iszero(eq(value, cleanup_t_int16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int16(value)\n    }\n\n    // struct WorkflowStep\n    function abi_decode_t_struct$_WorkflowStep_$109_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xa0)\n\n        {\n            // stepTypeId\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint16_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // stepAddress\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // inputAssets\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x40), abi_decode_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // argData\n\n            let offset := mload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x60), abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // nextStepIndex\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_int16_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct WorkflowStep[]\n    function abi_decode_available_length_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_struct$_WorkflowStep_$109_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct WorkflowStep[]\n    function abi_decode_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // struct Workflow\n    function abi_decode_t_struct$_Workflow_$93_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // workflowRunnerAddress\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // steps\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x20), abi_decode_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct BridgePayload\n    function abi_decode_t_struct$_BridgePayload_$83_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x60)\n\n        {\n            // userAddress\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // nonce\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // workflow\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x40), abi_decode_t_struct$_Workflow_$93_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_BridgePayload_$83_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_BridgePayload_$83_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint16_to_t_uint16(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function array_length_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct WorkflowStepInputAsset -> struct WorkflowStepInputAsset\n    function abi_encode_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_to_t_struct$_WorkflowStepInputAsset_$122_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // sourceIsCaller\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amountIsPercent\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // asset\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_struct$_Asset_$57_memory_ptr_to_t_struct$_Asset_$57_memory_ptr(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_to_t_struct$_WorkflowStepInputAsset_$122_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_to_t_struct$_WorkflowStepInputAsset_$122_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xa0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct WorkflowStepInputAsset[] -> struct WorkflowStepInputAsset[]\n    function abi_encode_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_to_t_struct$_WorkflowStepInputAsset_$122_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct WorkflowStep -> struct WorkflowStep\n    function abi_encode_t_struct$_WorkflowStep_$109_memory_ptr_to_t_struct$_WorkflowStep_$109_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // stepTypeId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // stepAddress\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // inputAssets\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_WorkflowStepInputAsset_$122_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // argData\n\n            let memberValue0 := mload(add(value, 0x60))\n\n            mstore(add(pos, 0x60), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // nextStepIndex\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_int16_to_t_int16(memberValue0, add(pos, 0x80))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_WorkflowStep_$109_memory_ptr_to_t_struct$_WorkflowStep_$109_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_WorkflowStep_$109_memory_ptr_to_t_struct$_WorkflowStep_$109_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct WorkflowStep[] -> struct WorkflowStep[]\n    function abi_encode_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_WorkflowStep_$109_memory_ptr_to_t_struct$_WorkflowStep_$109_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    // struct Workflow -> struct Workflow\n    function abi_encode_t_struct$_Workflow_$93_memory_ptr_to_t_struct$_Workflow_$93_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // workflowRunnerAddress\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // steps\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    // struct BridgePayload -> struct BridgePayload\n    function abi_encode_t_struct$_BridgePayload_$83_memory_ptr_to_t_struct$_BridgePayload_$83_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // userAddress\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // nonce\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // workflow\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_struct$_Workflow_$93_memory_ptr_to_t_struct$_Workflow_$93_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_struct$_BridgePayload_$83_memory_ptr__to_t_address_t_uint256_t_struct$_BridgePayload_$83_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_struct$_BridgePayload_$83_memory_ptr_to_t_struct$_BridgePayload_$83_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    // struct Workflow -> struct Workflow\n    function abi_encode_t_struct$_Workflow_$93_memory_ptr_to_t_struct$_Workflow_$93_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // workflowRunnerAddress\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // steps\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_WorkflowStep_$109_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_struct$_Workflow_$93_memory_ptr_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr__to_t_address_t_uint256_t_struct$_Workflow_$93_memory_ptr_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Workflow_$93_memory_ptr_to_t_struct$_Workflow_$93_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AssetAmount_$66_memory_ptr_$dyn_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2378":[{"length":32,"start":281},{"length":32,"start":3091},{"length":32,"start":3334}],"2380":[{"length":32,"start":245},{"length":32,"start":1901},{"length":32,"start":2857},{"length":32,"start":3557}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D2091BF EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x50FD910E EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x7BB26CA7 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xAB8236F3 EQ PUSH2 0xCA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH2 0x117 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0xB27 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x1297 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x2 DUP7 DUP7 SWAP1 POP EQ PUSH2 0x191 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188 SWAP1 PUSH2 0x1B15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1A5 JUMPI PUSH2 0x1A4 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP7 DUP7 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1B9 JUMPI PUSH2 0x1B8 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E6 JUMPI PUSH2 0x1E5 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2E9 JUMPI PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1FF JUMPI PUSH2 0x1FE PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP7 DUP7 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x213 JUMPI PUSH2 0x212 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x240 JUMPI PUSH2 0x23F PUSH2 0x15DC JUMP JUMPDEST JUMPDEST EQ PUSH2 0x280 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x277 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x294 JUMPI PUSH2 0x293 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP2 PUSH1 0x80 ADD DUP2 SWAP1 MSTORE POP DUP6 DUP6 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x2C6 JUMPI PUSH2 0x2C5 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP2 PUSH1 0xA0 ADD DUP2 SWAP1 MSTORE POP PUSH2 0x47D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2FD JUMPI PUSH2 0x2FC PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP7 DUP7 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x311 JUMPI PUSH2 0x310 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x33E JUMPI PUSH2 0x33D PUSH2 0x15DC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x441 JUMPI PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x357 JUMPI PUSH2 0x356 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP7 DUP7 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x36B JUMPI PUSH2 0x36A PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x398 JUMPI PUSH2 0x397 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST EQ PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP1 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x3EC JUMPI PUSH2 0x3EB PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP2 PUSH1 0x80 ADD DUP2 SWAP1 MSTORE POP DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x41E JUMPI PUSH2 0x41D PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP2 PUSH1 0xA0 ADD DUP2 SWAP1 MSTORE POP PUSH2 0x47C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x473 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x491 JUMPI PUSH2 0x490 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP7 DUP7 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4D2 JUMPI PUSH2 0x4D1 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0x530 JUMPI POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4EC PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP7 DUP7 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x501 JUMPI PUSH2 0x500 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x52E JUMPI PUSH2 0x52D PUSH2 0x15DC JUMP JUMPDEST JUMPDEST EQ JUMPDEST PUSH2 0x56F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x566 SWAP1 PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x583 JUMPI PUSH2 0x582 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP7 DUP7 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x597 JUMPI PUSH2 0x596 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5C4 JUMPI PUSH2 0x5C3 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST SUB PUSH2 0x61F JUMPI PUSH2 0x61E DUP7 DUP7 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x5E0 JUMPI PUSH2 0x5DF PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x0 ADD PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5FB SWAP2 SWAP1 PUSH2 0x1DF7 JUMP JUMPDEST DUP8 DUP8 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x60F JUMPI PUSH2 0x60E PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xDC2 JUMP JUMPDEST JUMPDEST DUP4 DUP4 DUP2 ADD SWAP1 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1F9A JUMP JUMPDEST DUP2 PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x202B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 PUSH1 0x40 ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x100 ADD MLOAD ISZERO PUSH2 0x6C2 JUMPI PUSH3 0x186A0 DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0xE0 ADD MLOAD DUP8 DUP8 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x696 JUMPI PUSH2 0x695 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x6B4 SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST DUP2 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x6D5 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0xE0 ADD MLOAD DUP2 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH32 0xC919A44972F2A555D7B70313BA420F3ECE86780DB879B0E70E766C61AE84AD5C DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0xA0 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x80 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0x60 ADD MLOAD DUP11 PUSH1 0x20 ADD MLOAD PUSH2 0x120 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x763 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9FBF10FC DUP3 PUSH1 0x80 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x80 ADD MLOAD CALLER DUP8 PUSH1 0xA0 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP12 PUSH1 0x20 ADD MLOAD PUSH1 0xA0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x20 ADD MLOAD PUSH1 0xC0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x20 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x81A SWAP2 SWAP1 PUSH2 0x202B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 MSTORE POP DUP11 PUSH1 0x40 ADD MLOAD DUP12 PUSH1 0x20 ADD MLOAD PUSH2 0x120 ADD MLOAD PUSH1 0x40 MLOAD DUP12 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85F SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x88C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x120 ADD MLOAD MLOAD GT ISZERO PUSH2 0xA0B JUMPI PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8C1 JUMPI PUSH2 0x8C0 PUSH2 0x1870 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8FA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x8E7 PUSH2 0x130D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x8DF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 PUSH1 0xA0 ADD MLOAD DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x916 JUMPI PUSH2 0x915 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x60 ADD MLOAD DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x93A JUMPI PUSH2 0x939 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x160 ADD MLOAD PUSH2 0x9AD JUMPI PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x975 JUMPI PUSH2 0x974 PUSH2 0x1870 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9A7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH2 0x9B8 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x120 ADD MLOAD JUMPDEST SWAP1 POP PUSH32 0x92CABCCED306320FCB4C1A1D8C0CEC733AEA48602B9740E521A95AE20030009D DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x140 ADD MLOAD DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA00 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x246F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP8 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xA68 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0x60 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA38 JUMP JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA8D JUMPI PUSH2 0xA8C PUSH2 0x1870 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAC6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xAB3 PUSH2 0x130D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xAAB JUMPI SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAC SWAP1 PUSH2 0x2547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xBCB SWAP2 SWAP1 PUSH2 0x2A88 JUMP JUMPDEST SWAP1 POP PUSH32 0x68D4646B1F017626E64E0EC01E0509C83002732D5599A1B5CCACD00D5A3D4EA DUP5 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC00 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP5 SWAP1 POP PUSH2 0xC38 DUP2 PUSH32 0x0 DUP7 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC55 JUMPI PUSH2 0xC54 PUSH2 0x1870 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC8E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xC7B PUSH2 0x130D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xC73 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCBB JUMPI PUSH2 0xCBA PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCF7 JUMPI PUSH2 0xCF6 PUSH2 0x1B35 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 PUSH32 0x0 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF92B3D15 DUP6 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD72 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD9D JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0xDB5 JUMPI PUSH2 0xDB0 DUP4 DUP6 PUSH1 0x0 ADD MLOAD DUP9 PUSH2 0xF7D JUMP JUMPDEST PUSH2 0xDB6 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE22 SWAP3 SWAP2 SWAP1 PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE65 SWAP2 SWAP1 PUSH2 0x2EB6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA9 SWAP3 SWAP2 SWAP1 PUSH2 0x2EE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEEA SWAP2 SWAP1 PUSH2 0x2F0C JUMP JUMPDEST PUSH2 0xEF4 SWAP2 SWAP1 PUSH2 0x2F39 JUMP JUMPDEST SWAP1 POP PUSH2 0xF77 DUP5 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF15 SWAP3 SWAP2 SWAP1 PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1003 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xFFE DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF9C SWAP3 SWAP2 SWAP1 PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1003 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1065 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10CA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x10C5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1085 SWAP2 SWAP1 PUSH2 0x2EB6 JUMP JUMPDEST PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BB SWAP1 PUSH2 0x2FDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10D9 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x10E2 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111E SWAP1 PUSH2 0x3071 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1150 SWAP2 SWAP1 PUSH2 0x30CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x118D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11A3 DUP8 DUP4 DUP4 DUP8 PUSH2 0x11AF JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1211 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1209 JUMPI PUSH2 0x11C9 DUP6 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x1208 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FF SWAP1 PUSH2 0x3130 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x121C JUMP JUMPDEST PUSH2 0x121B DUP4 DUP4 PUSH2 0x1247 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x125A JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x3194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12DF PUSH2 0x132D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12FA PUSH2 0x130D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1307 PUSH2 0x130D JUMP JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1320 PUSH2 0x13C2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13E1 JUMPI PUSH2 0x13E0 PUSH2 0x15DC JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142F DUP3 PUSH2 0x1404 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x143F DUP2 PUSH2 0x1424 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x145A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1436 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1499 JUMPI PUSH2 0x1498 PUSH2 0x1474 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14B6 JUMPI PUSH2 0x14B5 PUSH2 0x1479 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x60 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x14D2 JUMPI PUSH2 0x14D1 PUSH2 0x147E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14EF JUMPI PUSH2 0x14EE PUSH2 0x1474 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x150C JUMPI PUSH2 0x150B PUSH2 0x1479 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1528 JUMPI PUSH2 0x1527 PUSH2 0x147E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1548 PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1567 JUMPI PUSH2 0x1566 PUSH2 0x146F JUMP JUMPDEST JUMPDEST PUSH2 0x1573 DUP8 DUP3 DUP9 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1596 JUMPI PUSH2 0x1595 PUSH2 0x146F JUMP JUMPDEST JUMPDEST PUSH2 0x15A2 DUP8 DUP3 DUP9 ADD PUSH2 0x14D9 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x161C JUMPI PUSH2 0x161B PUSH2 0x15DC JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x162D DUP3 PUSH2 0x160B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163D DUP3 PUSH2 0x161F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x164D DUP2 PUSH2 0x1632 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x165C DUP2 PUSH2 0x1424 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1678 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1644 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x168B PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A4 DUP2 PUSH2 0x1691 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x16C0 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1662 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x16D3 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x169B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E5 DUP4 DUP4 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1709 DUP3 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x1713 DUP2 DUP6 PUSH2 0x15BB JUMP JUMPDEST SWAP4 POP PUSH2 0x171E DUP4 PUSH2 0x15CC JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x174F JUMPI DUP2 MLOAD PUSH2 0x1736 DUP9 DUP3 PUSH2 0x16D9 JUMP JUMPDEST SWAP8 POP PUSH2 0x1741 DUP4 PUSH2 0x16F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1722 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1772 DUP2 PUSH2 0x175C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x178E DUP2 PUSH2 0x1778 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x17B1 DUP3 DUP3 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x17CB DUP3 DUP3 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x17E0 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x1769 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x17F3 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x1785 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1818 DUP2 DUP5 PUSH2 0x1794 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1837 DUP2 PUSH2 0x1820 JUMP JUMPDEST DUP2 EQ PUSH2 0x1842 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1854 DUP2 PUSH2 0x182E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x18A8 DUP3 PUSH2 0x185F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18C7 JUMPI PUSH2 0x18C6 PUSH2 0x1870 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18DA PUSH2 0x1460 JUMP JUMPDEST SWAP1 POP PUSH2 0x18E6 DUP3 DUP3 PUSH2 0x189F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1906 JUMPI PUSH2 0x1905 PUSH2 0x1870 JUMP JUMPDEST JUMPDEST PUSH2 0x190F DUP3 PUSH2 0x185F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x193E PUSH2 0x1939 DUP5 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x195A JUMPI PUSH2 0x1959 PUSH2 0x185A JUMP JUMPDEST JUMPDEST PUSH2 0x1965 DUP5 DUP3 DUP6 PUSH2 0x191C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1982 JUMPI PUSH2 0x1981 PUSH2 0x1474 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1992 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x192B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19A4 DUP2 PUSH2 0x1691 JUMP JUMPDEST DUP2 EQ PUSH2 0x19AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19C1 DUP2 PUSH2 0x199B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19D0 DUP2 PUSH2 0x1424 JUMP JUMPDEST DUP2 EQ PUSH2 0x19DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19ED DUP2 PUSH2 0x19C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1A10 JUMPI PUSH2 0x1A0F PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A1E DUP10 DUP3 DUP11 ADD PUSH2 0x1845 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A3F JUMPI PUSH2 0x1A3E PUSH2 0x146F JUMP JUMPDEST JUMPDEST PUSH2 0x1A4B DUP10 DUP3 DUP11 ADD PUSH2 0x196D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x1A5C DUP10 DUP3 DUP11 ADD PUSH2 0x19B2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x1A6D DUP10 DUP3 DUP11 ADD PUSH2 0x19DE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x1A7E DUP10 DUP3 DUP11 ADD PUSH2 0x19B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A9F JUMPI PUSH2 0x1A9E PUSH2 0x146F JUMP JUMPDEST JUMPDEST PUSH2 0x1AAB DUP10 DUP3 DUP11 ADD PUSH2 0x196D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7468657265206D757374206265203220696E7075742061737365747300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFF PUSH1 0x1C DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0A DUP3 PUSH2 0x1AC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B2E DUP2 PUSH2 0x1AF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1B71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B83 DUP2 PUSH2 0x1B64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B9F JUMPI PUSH2 0x1B9E PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BAD DUP5 DUP3 DUP6 ADD PUSH2 0x1B74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6520696E707574206173736574206D75737420626520616E204552433230 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEC PUSH1 0x20 DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF7 DUP3 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C1B DUP2 PUSH2 0x1BDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C42 JUMPI PUSH2 0x1C41 PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x1C4C PUSH1 0x40 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C5C DUP5 DUP3 DUP6 ADD PUSH2 0x1B74 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1C70 DUP5 DUP3 DUP6 ADD PUSH2 0x19DE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C92 JUMPI PUSH2 0x1C91 PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x1C9C PUSH1 0x40 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CAC DUP5 DUP3 DUP6 ADD PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1CC0 DUP5 DUP3 DUP6 ADD PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE2 JUMPI PUSH2 0x1CE1 PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CF0 DUP5 DUP3 DUP6 ADD PUSH2 0x1C7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6520696E707574206173736574206D757374206265206E61746976650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D2F PUSH1 0x1E DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D3A DUP3 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D5E DUP2 PUSH2 0x1D22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x74686520696E707574206173736574206D75737420626520616E204552433230 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206F72204E617469766500000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC1 PUSH1 0x2A DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCC DUP3 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF0 DUP2 PUSH2 0x1DB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E0D JUMPI PUSH2 0x1E0C PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E1B DUP5 DUP3 DUP6 ADD PUSH2 0x19DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E39 DUP2 PUSH2 0x1E24 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E56 DUP2 PUSH2 0x1E30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E73 JUMPI PUSH2 0x1E72 PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x1E7E PUSH2 0x180 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E8E DUP5 DUP3 DUP6 ADD PUSH2 0x19DE JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1EA2 DUP5 DUP3 DUP6 ADD PUSH2 0x19DE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x1EB6 DUP5 DUP3 DUP6 ADD PUSH2 0x1845 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1ECA DUP5 DUP3 DUP6 ADD PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x1EDE DUP5 DUP3 DUP6 ADD PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x1EF2 DUP5 DUP3 DUP6 ADD PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x1F06 DUP5 DUP3 DUP6 ADD PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x1F1A DUP5 DUP3 DUP6 ADD PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x1F2F DUP5 DUP3 DUP6 ADD PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F55 JUMPI PUSH2 0x1F54 PUSH2 0x1C27 JUMP JUMPDEST JUMPDEST PUSH2 0x1F61 DUP5 DUP3 DUP6 ADD PUSH2 0x196D JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP PUSH2 0x140 PUSH2 0x1F77 DUP5 DUP3 DUP6 ADD PUSH2 0x19B2 JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE POP PUSH2 0x160 PUSH2 0x1F8D DUP5 DUP3 DUP6 ADD PUSH2 0x1E47 JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FB0 JUMPI PUSH2 0x1FAF PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FCE JUMPI PUSH2 0x1FCD PUSH2 0x146F JUMP JUMPDEST JUMPDEST PUSH2 0x1FDA DUP5 DUP3 DUP6 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FFB DUP3 PUSH2 0x1FE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200D DUP3 PUSH2 0x1FF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2025 PUSH2 0x2020 DUP3 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x2002 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2037 DUP3 DUP5 PUSH2 0x2014 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2080 DUP3 PUSH2 0x1691 JUMP JUMPDEST SWAP2 POP PUSH2 0x208B DUP4 PUSH2 0x1691 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2099 DUP2 PUSH2 0x1691 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20B0 JUMPI PUSH2 0x20AF PUSH2 0x2046 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20F1 DUP3 PUSH2 0x1691 JUMP JUMPDEST SWAP2 POP PUSH2 0x20FC DUP4 PUSH2 0x1691 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x210C JUMPI PUSH2 0x210B PUSH2 0x20B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2120 DUP2 PUSH2 0x1691 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x212F DUP2 PUSH2 0x1820 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x216F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2154 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2186 DUP3 PUSH2 0x2135 JUMP JUMPDEST PUSH2 0x2190 DUP2 DUP6 PUSH2 0x2140 JUMP JUMPDEST SWAP4 POP PUSH2 0x21A0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2151 JUMP JUMPDEST PUSH2 0x21A9 DUP2 PUSH2 0x185F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x21CA PUSH1 0x0 DUP4 ADD DUP14 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x21D7 PUSH1 0x20 DUP4 ADD DUP13 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x21E4 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x21F1 PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x21FE PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x220B PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x2218 PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x2225 PUSH1 0xE0 DUP4 ADD DUP7 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x2233 PUSH2 0x100 DUP4 ADD DUP6 PUSH2 0x2117 JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x2246 DUP2 DUP5 PUSH2 0x217B JUMP JUMPDEST SWAP1 POP SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2262 DUP3 PUSH2 0x1404 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2272 DUP2 PUSH2 0x2257 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2294 DUP3 PUSH2 0x2135 JUMP JUMPDEST PUSH2 0x229E DUP2 DUP6 PUSH2 0x2278 JUMP JUMPDEST SWAP4 POP PUSH2 0x22AE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2151 JUMP JUMPDEST PUSH2 0x22B7 DUP2 PUSH2 0x185F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x22DA PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x169B JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x22ED PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x169B JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x2305 DUP3 DUP3 PUSH2 0x2289 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x2328 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x2335 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x2342 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x234F PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2269 JUMP JUMPDEST PUSH2 0x235C PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x2117 JUMP JUMPDEST PUSH2 0x2369 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x2117 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x237B DUP2 DUP7 PUSH2 0x22C2 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x238F DUP2 DUP6 PUSH2 0x217B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x23A4 DUP2 DUP5 PUSH2 0x217B JUMP JUMPDEST SWAP1 POP SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x73746172676174652D6272696467650000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EA PUSH1 0xF DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x23F5 DUP3 PUSH2 0x23B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x241C DUP3 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x2426 DUP2 DUP6 PUSH2 0x2400 JUMP JUMPDEST SWAP4 POP PUSH2 0x2431 DUP4 PUSH2 0x15CC JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2462 JUMPI DUP2 MLOAD PUSH2 0x2449 DUP9 DUP3 PUSH2 0x16D9 JUMP JUMPDEST SWAP8 POP PUSH2 0x2454 DUP4 PUSH2 0x16F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2435 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2488 DUP2 PUSH2 0x23DD JUMP JUMPDEST SWAP1 POP PUSH2 0x2497 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x24A4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2117 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x24B6 DUP2 DUP6 PUSH2 0x2411 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x24CA DUP2 DUP5 PUSH2 0x217B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x6F6E6C79205374617267617465206973207065726D697474656420746F206361 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C207367526563656976650000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2531 PUSH1 0x2C DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x253C DUP3 PUSH2 0x24D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2560 DUP2 PUSH2 0x2524 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2576 DUP2 PUSH2 0x19C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x258B DUP2 PUSH2 0x199B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25AC JUMPI PUSH2 0x25AB PUSH2 0x1870 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25CC DUP2 PUSH2 0x182E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25ED JUMPI PUSH2 0x25EC PUSH2 0x1870 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x260D DUP2 PUSH2 0x1E30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2622 DUP2 PUSH2 0x1B64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263E JUMPI PUSH2 0x263D PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x2648 PUSH1 0x40 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2658 DUP5 DUP3 DUP6 ADD PUSH2 0x2613 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x266C DUP5 DUP3 DUP6 ADD PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x268E JUMPI PUSH2 0x268D PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x2698 PUSH1 0x80 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x26A8 DUP5 DUP3 DUP6 ADD PUSH2 0x25FE JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x26BC DUP5 DUP3 DUP6 ADD PUSH2 0x25FE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x26D0 DUP5 DUP3 DUP6 ADD PUSH2 0x2628 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x26E4 DUP5 DUP3 DUP6 ADD PUSH2 0x257C JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2703 PUSH2 0x26FE DUP5 PUSH2 0x25D2 JUMP JUMPDEST PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA0 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2726 JUMPI PUSH2 0x2725 PUSH2 0x147E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x274F JUMPI DUP1 PUSH2 0x273B DUP9 DUP3 PUSH2 0x2678 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0xA0 DUP2 ADD SWAP1 POP PUSH2 0x2728 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x276E JUMPI PUSH2 0x276D PUSH2 0x1474 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x277E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x279A PUSH2 0x2795 DUP5 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x27B6 JUMPI PUSH2 0x27B5 PUSH2 0x185A JUMP JUMPDEST JUMPDEST PUSH2 0x27C1 DUP5 DUP3 DUP6 PUSH2 0x2151 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27DE JUMPI PUSH2 0x27DD PUSH2 0x1474 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x27EE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2787 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2800 DUP2 PUSH2 0x175C JUMP JUMPDEST DUP2 EQ PUSH2 0x280B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x281D DUP2 PUSH2 0x27F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2839 JUMPI PUSH2 0x2838 PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x2843 PUSH1 0xA0 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2853 DUP5 DUP3 DUP6 ADD PUSH2 0x25BD JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x2867 DUP5 DUP3 DUP6 ADD PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x288B JUMPI PUSH2 0x288A PUSH2 0x1C27 JUMP JUMPDEST JUMPDEST PUSH2 0x2897 DUP5 DUP3 DUP6 ADD PUSH2 0x2759 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28BB JUMPI PUSH2 0x28BA PUSH2 0x1C27 JUMP JUMPDEST JUMPDEST PUSH2 0x28C7 DUP5 DUP3 DUP6 ADD PUSH2 0x27C9 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x28DB DUP5 DUP3 DUP6 ADD PUSH2 0x280E JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28FA PUSH2 0x28F5 DUP5 PUSH2 0x2591 JUMP JUMPDEST PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x291D JUMPI PUSH2 0x291C PUSH2 0x147E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2964 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2942 JUMPI PUSH2 0x2941 PUSH2 0x1474 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x294F DUP10 DUP3 PUSH2 0x2823 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x291F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2983 JUMPI PUSH2 0x2982 PUSH2 0x1474 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x2993 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x28E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29B2 JUMPI PUSH2 0x29B1 PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x29BC PUSH1 0x40 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x29CC DUP5 DUP3 DUP6 ADD PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29F0 JUMPI PUSH2 0x29EF PUSH2 0x1C27 JUMP JUMPDEST JUMPDEST PUSH2 0x29FC DUP5 DUP3 DUP6 ADD PUSH2 0x296E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A1E JUMPI PUSH2 0x2A1D PUSH2 0x1C22 JUMP JUMPDEST JUMPDEST PUSH2 0x2A28 PUSH1 0x60 PUSH2 0x18D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A38 DUP5 DUP3 DUP6 ADD PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x2A4C DUP5 DUP3 DUP6 ADD PUSH2 0x257C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A70 JUMPI PUSH2 0x2A6F PUSH2 0x1C27 JUMP JUMPDEST JUMPDEST PUSH2 0x2A7C DUP5 DUP3 DUP6 ADD PUSH2 0x299C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A9E JUMPI PUSH2 0x2A9D PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ABC JUMPI PUSH2 0x2ABB PUSH2 0x146F JUMP JUMPDEST JUMPDEST PUSH2 0x2AC8 DUP5 DUP3 DUP6 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B06 DUP2 PUSH2 0x1820 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B41 DUP2 PUSH2 0x1E24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2B5D PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2B38 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2B70 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2B38 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2B83 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1662 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2B96 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x169B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA8 DUP4 DUP4 PUSH2 0x2B47 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCC DUP3 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x2BD6 DUP2 DUP6 PUSH2 0x2B17 JUMP JUMPDEST SWAP4 POP PUSH2 0x2BE1 DUP4 PUSH2 0x2B28 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C12 JUMPI DUP2 MLOAD PUSH2 0x2BF9 DUP9 DUP3 PUSH2 0x2B9C JUMP JUMPDEST SWAP8 POP PUSH2 0x2C04 DUP4 PUSH2 0x2BB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2BE5 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2C37 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2AFD JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2C4A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x2C62 DUP3 DUP3 PUSH2 0x2BC1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2C7C DUP3 DUP3 PUSH2 0x2289 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x2C91 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x1769 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA8 DUP4 DUP4 PUSH2 0x2C1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC8 DUP3 PUSH2 0x2AD1 JUMP JUMPDEST PUSH2 0x2CD2 DUP2 DUP6 PUSH2 0x2ADC JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x2CE4 DUP6 PUSH2 0x2AED JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2D20 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x2D01 DUP6 DUP3 PUSH2 0x2C9C JUMP JUMPDEST SWAP5 POP PUSH2 0x2D0C DUP4 PUSH2 0x2CB0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2CE8 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2D4A PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2D62 DUP3 DUP3 PUSH2 0x2CBD JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2D87 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2D9A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x169B JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x2DB2 DUP3 DUP3 PUSH2 0x2D32 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2DD4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x2DE1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2117 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2DF3 DUP2 DUP5 PUSH2 0x2D6F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2E15 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x1653 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2E2D DUP3 DUP3 PUSH2 0x2CBD JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2E4F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x2E5C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2117 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2E6E DUP2 DUP6 PUSH2 0x2DFD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2E82 DUP2 DUP5 PUSH2 0x2411 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EA2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x2EAF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2117 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ECC JUMPI PUSH2 0x2ECB PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EDA DUP5 DUP3 DUP6 ADD PUSH2 0x25FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EF8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x2F05 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1436 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F22 JUMPI PUSH2 0x2F21 PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F30 DUP5 DUP3 DUP6 ADD PUSH2 0x257C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F44 DUP3 PUSH2 0x1691 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F4F DUP4 PUSH2 0x1691 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2F67 JUMPI PUSH2 0x2F66 PUSH2 0x2046 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FC9 PUSH1 0x2A DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD4 DUP3 PUSH2 0x2F6D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FF8 DUP2 PUSH2 0x2FBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x305B PUSH1 0x26 DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3066 DUP3 PUSH2 0x2FFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x308A DUP2 PUSH2 0x304E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A7 DUP3 PUSH2 0x2135 JUMP JUMPDEST PUSH2 0x30B1 DUP2 DUP6 PUSH2 0x3091 JUMP JUMPDEST SWAP4 POP PUSH2 0x30C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2151 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30D9 DUP3 DUP5 PUSH2 0x309C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x311A PUSH1 0x1D DUP4 PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3125 DUP3 PUSH2 0x30E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3149 DUP2 PUSH2 0x310D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3166 DUP3 PUSH2 0x3150 JUMP JUMPDEST PUSH2 0x3170 DUP2 DUP6 PUSH2 0x1AB8 JUMP JUMPDEST SWAP4 POP PUSH2 0x3180 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2151 JUMP JUMPDEST PUSH2 0x3189 DUP2 PUSH2 0x185F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31AE DUP2 DUP5 PUSH2 0x315B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xAF BALANCE 0xE7 0xB7 0xBB REVERT 0xC5 0xCF DUP13 0xF9 EXTCODESIZE EXP PUSH20 0x94B9B6CE0CC8BFCC445CD21D50A44617235D6473 PUSH16 0x6C634300081200330000000000000000 ","sourceMap":"1823:6043:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1947:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1902:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:3225;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6552:1312;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1947:46;;;:::o;1902:41::-;;;:::o;3144:3225::-;3251:25;;:::i;:::-;3284:20;;:::i;:::-;3346:1;3318:17;;:24;;:29;3310:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3430:16;3390:56;;;;;;;;:::i;:::-;;:17;;3408:1;3390:20;;;;;;;:::i;:::-;;;;;;;:26;;:36;;;;;;;;;;:::i;:::-;:56;;;;;;;;:::i;:::-;;;3386:635;;3504:15;3464:55;;;;;;;;:::i;:::-;;:17;;3482:1;3464:20;;;;;;;:::i;:::-;;;;;;;:26;;:36;;;;;;;;;;:::i;:::-;:55;;;;;;;;:::i;:::-;;;3456:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;3590:17;;3608:1;3590:20;;;;;;;:::i;:::-;;;;;;;3564:46;;;;;;;;;;:::i;:::-;:6;:23;;:46;;;;3643:17;;3661:1;3643:20;;;;;;;:::i;:::-;;;;;;;3618:45;;;;;;;;;;:::i;:::-;:6;:22;;:45;;;;3386:635;;;3720:16;3680:56;;;;;;;;:::i;:::-;;:17;;3698:1;3680:20;;;;;;;:::i;:::-;;;;;;;:26;;:36;;;;;;;;;;:::i;:::-;:56;;;;;;;;:::i;:::-;;;3676:345;;3794:15;3754:55;;;;;;;;:::i;:::-;;:17;;3772:1;3754:20;;;;;;;:::i;:::-;;;;;;;:26;;:36;;;;;;;;;;:::i;:::-;:55;;;;;;;;:::i;:::-;;;3746:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;3880:17;;3898:1;3880:20;;;;;;;:::i;:::-;;;;;;;3854:46;;;;;;;;;;:::i;:::-;:6;:23;;:46;;;;3933:17;;3951:1;3933:20;;;;;;;:::i;:::-;;;;;;;3908:45;;;;;;;;;;:::i;:::-;:6;:22;;:45;;;;3676:345;;;3974:40;;;;;;;;;;:::i;:::-;;;;;;;;3676:345;3386:635;4081:15;4041:55;;;;;;;;:::i;:::-;;:17;;4059:1;4041:20;;;;;;;:::i;:::-;;;;;;;:26;;:36;;;;;;;;;;:::i;:::-;:55;;;;;;;;:::i;:::-;;;:115;;;;4140:16;4100:56;;;;;;;;:::i;:::-;;:17;;4118:1;4100:20;;;;;;;:::i;:::-;;;;;;;:26;;:36;;;;;;;;;;:::i;:::-;:56;;;;;;;;:::i;:::-;;;4041:115;4026:188;;;;;;;;;;;;:::i;:::-;;;;;;;;;4301:15;4261:55;;;;;;;;:::i;:::-;;:17;;4279:1;4261:20;;;;;;;:::i;:::-;;;;;;;:26;;:36;;;;;;;;;;:::i;:::-;:55;;;;;;;;:::i;:::-;;;4257:158;;4326:82;4339:17;;4357:1;4339:20;;;;;;;:::i;:::-;;;;;;;:26;;:39;;;;;;;;;;:::i;:::-;4380:17;;4398:1;4380:20;;;;;;;:::i;:::-;;;;;;;:27;;;4326:12;:82::i;:::-;4257:158;4446:7;;4435:47;;;;;;;:::i;:::-;4421:6;:11;;:61;;;;4599:6;:11;;;:28;;;4582:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;4549:6;:30;;:79;;;;4638:6;:11;;;:33;;;4634:209;;;4762:7;4734:6;:11;;;:24;;;4704:17;;4722:1;4704:20;;;;;;;:::i;:::-;;;;;;;:27;;;:54;;;;:::i;:::-;4703:66;;;;:::i;:::-;4681:6;:19;;:88;;;;;4634:209;;;4812:6;:11;;;:24;;;4790:6;:19;;:46;;;;;4634:209;4854:435;4887:6;:23;;;:30;;;4942:6;:22;;;:29;;;4995:6;:11;;;:28;;;5068:6;:11;;;:22;;;5098:6;:11;;;:21;;;5127:6;:11;;;:21;;;5156:6;:11;;;:25;;;5189:6;:11;;;:27;;;5224:6;:19;;;5251:6;:11;;;:32;;;4854:435;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5312:21;5296:43;;;5347:6;:23;;;:30;;;5386:6;:11;;;:22;;;5416:6;:11;;;:21;;;5445:6;:11;;;:21;;;5482:10;5519:6;:22;;;:29;;;5556:6;:19;;;5583:125;;;;;;;;5607:6;:11;;;:25;;;5583:125;;;;5634:6;:11;;;:27;;;5583:125;;;;5680:6;:11;;;:26;;;5663:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;5583:125;;;5716:6;:30;;;5754:6;:11;;;:32;;;5296:496;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5844:1;5802:6;:11;;;:32;;;:39;:43;5798:486;;;5855:35;5911:1;5893:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5855:58;;5941:6;:22;;;5921:14;5936:1;5921:17;;;;;;;;:::i;:::-;;;;;;;:42;;;;5998:6;:19;;;5971:14;5986:1;5971:17;;;;;;;;:::i;:::-;;;;;;;;:24;;:46;;;;;6025:29;6057:6;:11;;;:46;;;:96;;6151:1;6141:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6057:96;;;6106:6;:11;;;:32;;;6057:96;6025:128;;6166:111;6201:6;:11;;;:22;;;6225:6;:11;;;:17;;;6244:14;6260:16;6166:111;;;;;;;;;:::i;:::-;;;;;;;;5847:437;;5798:486;6297:67;;;;;;;;6316:17;;6297:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6353:1;6335:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6297:67;;;;6357:2;6297:67;;;;;;6361:2;6297:67;;;;;6290:74;;;3144:3225;;;;;;:::o;6552:1312::-;6911:21;6897:35;;:10;:35;;;6889:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;6987:34;7035:7;7024:36;;;;;;;;;;;;:::i;:::-;6987:73;;7071:52;7087:12;7101:6;7109:13;7071:52;;;;;;;;:::i;:::-;;;;;;;;7130:20;7160:12;7130:43;;7179:72;7211:13;7226:16;7244:6;7179:31;:72::i;:::-;7258:35;7314:1;7296:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7258:58;;7342:57;;;;;;;;7354:36;;;;;;;;7360:15;7354:36;;;;;;;;:::i;:::-;;;;;;7377:12;7354:36;;;;;7342:57;;;;7392:6;7342:57;;;7322:14;7337:1;7322:17;;;;;;;;:::i;:::-;;;;;;;:77;;;;7405:22;7446:16;7405:58;;7528:6;:23;;;7552:13;:25;;;7579:13;:19;;;7600:13;:22;;;7624:14;7528:111;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7524:336;;7781:72;7804:13;7819;:25;;;7846:6;7781:22;:72::i;:::-;7524:336;;;;6883:981;;;;6552:1312;;;;;;:::o;6373:175::-;6448:17;6475:12;6448:40;;6494:10;:18;;;6513:21;6536:6;6494:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6442:106;6373:175;;:::o;2084:310:16:-;2210:20;2275:5;2233;:15;;;2257:4;2264:7;2233:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2210:70;;2290:97;2310:5;2340:22;;;2364:7;2373:12;2317:69;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2290:19;:97::i;:::-;2200:194;2084:310;;;:::o;763:205::-;875:86;895:5;925:23;;;950:2;954:5;902:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;3873:223:17:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;;3873:223;;;;;:::o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;7:126:27:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:75::-;626:6;659:2;653:9;643:19;;593:75;:::o;674:117::-;783:1;780;773:12;797:117;906:1;903;896:12;920:117;1029:1;1026;1019:12;1043:117;1152:1;1149;1142:12;1166:117;1275:1;1272;1265:12;1317:597;1419:8;1429:6;1479:3;1472:4;1464:6;1460:17;1456:27;1446:122;;1487:79;;:::i;:::-;1446:122;1600:6;1587:20;1577:30;;1630:18;1622:6;1619:30;1616:117;;;1652:79;;:::i;:::-;1616:117;1766:4;1758:6;1754:17;1742:29;;1820:3;1812:4;1804:6;1800:17;1790:8;1786:32;1783:41;1780:128;;;1827:79;;:::i;:::-;1780:128;1317:597;;;;;:::o;1933:552::-;1990:8;2000:6;2050:3;2043:4;2035:6;2031:17;2027:27;2017:122;;2058:79;;:::i;:::-;2017:122;2171:6;2158:20;2148:30;;2201:18;2193:6;2190:30;2187:117;;;2223:79;;:::i;:::-;2187:117;2337:4;2329:6;2325:17;2313:29;;2391:3;2383:4;2375:6;2371:17;2361:8;2357:32;2354:41;2351:128;;;2398:79;;:::i;:::-;2351:128;1933:552;;;;;:::o;2491:960::-;2626:6;2634;2642;2650;2699:2;2687:9;2678:7;2674:23;2670:32;2667:119;;;2705:79;;:::i;:::-;2667:119;2853:1;2842:9;2838:17;2825:31;2883:18;2875:6;2872:30;2869:117;;;2905:79;;:::i;:::-;2869:117;3018:109;3119:7;3110:6;3099:9;3095:22;3018:109;:::i;:::-;3000:127;;;;2796:341;3204:2;3193:9;3189:18;3176:32;3235:18;3227:6;3224:30;3221:117;;;3257:79;;:::i;:::-;3221:117;3370:64;3426:7;3417:6;3406:9;3402:22;3370:64;:::i;:::-;3352:82;;;;3147:297;2491:960;;;;;;;:::o;3457:141::-;3551:6;3585:5;3579:12;3569:22;;3457:141;;;:::o;3604:201::-;3720:11;3754:6;3749:3;3742:19;3794:4;3789:3;3785:14;3770:29;;3604:201;;;;:::o;3811:159::-;3905:4;3928:3;3920:11;;3958:4;3953:3;3949:14;3941:22;;3811:159;;;:::o;3976:180::-;4024:77;4021:1;4014:88;4121:4;4118:1;4111:15;4145:4;4142:1;4135:15;4162:117;4247:1;4240:5;4237:12;4227:46;;4253:18;;:::i;:::-;4227:46;4162:117;:::o;4285:135::-;4334:7;4363:5;4352:16;;4369:45;4408:5;4369:45;:::i;:::-;4285:135;;;:::o;4426:::-;4486:9;4519:36;4549:5;4519:36;:::i;:::-;4506:49;;4426:135;;;:::o;4567:141::-;4654:47;4695:5;4654:47;:::i;:::-;4649:3;4642:60;4567:141;;:::o;4714:108::-;4791:24;4809:5;4791:24;:::i;:::-;4786:3;4779:37;4714:108;;:::o;4864:512::-;4993:4;4988:3;4984:14;5085:4;5078:5;5074:16;5068:23;5104:73;5171:4;5166:3;5162:14;5148:12;5104:73;:::i;:::-;5008:179;5277:4;5270:5;5266:16;5260:23;5296:63;5353:4;5348:3;5344:14;5330:12;5296:63;:::i;:::-;5197:172;4962:414;4864:512;;:::o;5382:77::-;5419:7;5448:5;5437:16;;5382:77;;;:::o;5465:108::-;5542:24;5560:5;5542:24;:::i;:::-;5537:3;5530:37;5465:108;;:::o;5627:546::-;5768:4;5763:3;5759:14;5856:4;5849:5;5845:16;5839:23;5875:105;5974:4;5969:3;5965:14;5951:12;5875:105;:::i;:::-;5783:207;6074:4;6067:5;6063:16;6057:23;6093:63;6150:4;6145:3;6141:14;6127:12;6093:63;:::i;:::-;6000:166;5737:436;5627:546;;:::o;6179:287::-;6302:10;6323:100;6419:3;6411:6;6323:100;:::i;:::-;6455:4;6450:3;6446:14;6432:28;;6179:287;;;;:::o;6472:140::-;6569:4;6601;6596:3;6592:14;6584:22;;6472:140;;;:::o;6670:928::-;6833:3;6862:81;6937:5;6862:81;:::i;:::-;6959:103;7055:6;7050:3;6959:103;:::i;:::-;6952:110;;7086:83;7163:5;7086:83;:::i;:::-;7192:7;7223:1;7208:365;7233:6;7230:1;7227:13;7208:365;;;7309:6;7303:13;7336:117;7449:3;7434:13;7336:117;:::i;:::-;7329:124;;7476:87;7556:6;7476:87;:::i;:::-;7466:97;;7268:305;7255:1;7252;7248:9;7243:14;;7208:365;;;7212:14;7589:3;7582:10;;6838:760;;;6670:928;;;;:::o;7604:90::-;7639:7;7682:5;7679:1;7668:20;7657:31;;7604:90;;;:::o;7700:102::-;7773:22;7789:5;7773:22;:::i;:::-;7768:3;7761:35;7700:102;;:::o;7808:90::-;7843:7;7886:5;7883:1;7872:20;7861:31;;7808:90;;;:::o;7904:102::-;7977:22;7993:5;7977:22;:::i;:::-;7972:3;7965:35;7904:102;;:::o;8074:1240::-;8213:3;8249:4;8244:3;8240:14;8349:4;8342:5;8338:16;8332:23;8402:3;8396:4;8392:14;8385:4;8380:3;8376:14;8369:38;8428:157;8580:4;8566:12;8428:157;:::i;:::-;8420:165;;8264:332;8692:4;8685:5;8681:16;8675:23;8745:3;8739:4;8735:14;8728:4;8723:3;8719:14;8712:38;8771:157;8923:4;8909:12;8771:157;:::i;:::-;8763:165;;8606:333;9030:4;9023:5;9019:16;9013:23;9049:59;9102:4;9097:3;9093:14;9079:12;9049:59;:::i;:::-;8949:169;9199:4;9192:5;9188:16;9182:23;9218:59;9271:4;9266:3;9262:14;9248:12;9218:59;:::i;:::-;9128:159;9304:4;9297:11;;8218:1096;8074:1240;;;;:::o;9320:413::-;9483:4;9521:2;9510:9;9506:18;9498:26;;9570:9;9564:4;9560:20;9556:1;9545:9;9541:17;9534:47;9598:128;9721:4;9712:6;9598:128;:::i;:::-;9590:136;;9320:413;;;;:::o;9739:89::-;9775:7;9815:6;9808:5;9804:18;9793:29;;9739:89;;;:::o;9834:120::-;9906:23;9923:5;9906:23;:::i;:::-;9899:5;9896:34;9886:62;;9944:1;9941;9934:12;9886:62;9834:120;:::o;9960:137::-;10005:5;10043:6;10030:20;10021:29;;10059:32;10085:5;10059:32;:::i;:::-;9960:137;;;;:::o;10103:117::-;10212:1;10209;10202:12;10226:102;10267:6;10318:2;10314:7;10309:2;10302:5;10298:14;10294:28;10284:38;;10226:102;;;:::o;10334:180::-;10382:77;10379:1;10372:88;10479:4;10476:1;10469:15;10503:4;10500:1;10493:15;10520:281;10603:27;10625:4;10603:27;:::i;:::-;10595:6;10591:40;10733:6;10721:10;10718:22;10697:18;10685:10;10682:34;10679:62;10676:88;;;10744:18;;:::i;:::-;10676:88;10784:10;10780:2;10773:22;10563:238;10520:281;;:::o;10807:129::-;10841:6;10868:20;;:::i;:::-;10858:30;;10897:33;10925:4;10917:6;10897:33;:::i;:::-;10807:129;;;:::o;10942:307::-;11003:4;11093:18;11085:6;11082:30;11079:56;;;11115:18;;:::i;:::-;11079:56;11153:29;11175:6;11153:29;:::i;:::-;11145:37;;11237:4;11231;11227:15;11219:23;;10942:307;;;:::o;11255:146::-;11352:6;11347:3;11342;11329:30;11393:1;11384:6;11379:3;11375:16;11368:27;11255:146;;;:::o;11407:423::-;11484:5;11509:65;11525:48;11566:6;11525:48;:::i;:::-;11509:65;:::i;:::-;11500:74;;11597:6;11590:5;11583:21;11635:4;11628:5;11624:16;11673:3;11664:6;11659:3;11655:16;11652:25;11649:112;;;11680:79;;:::i;:::-;11649:112;11770:54;11817:6;11812:3;11807;11770:54;:::i;:::-;11490:340;11407:423;;;;;:::o;11849:338::-;11904:5;11953:3;11946:4;11938:6;11934:17;11930:27;11920:122;;11961:79;;:::i;:::-;11920:122;12078:6;12065:20;12103:78;12177:3;12169:6;12162:4;12154:6;12150:17;12103:78;:::i;:::-;12094:87;;11910:277;11849:338;;;;:::o;12193:122::-;12266:24;12284:5;12266:24;:::i;:::-;12259:5;12256:35;12246:63;;12305:1;12302;12295:12;12246:63;12193:122;:::o;12321:139::-;12367:5;12405:6;12392:20;12383:29;;12421:33;12448:5;12421:33;:::i;:::-;12321:139;;;;:::o;12466:122::-;12539:24;12557:5;12539:24;:::i;:::-;12532:5;12529:35;12519:63;;12578:1;12575;12568:12;12519:63;12466:122;:::o;12594:139::-;12640:5;12678:6;12665:20;12656:29;;12694:33;12721:5;12694:33;:::i;:::-;12594:139;;;;:::o;12739:1411::-;12860:6;12868;12876;12884;12892;12900;12949:3;12937:9;12928:7;12924:23;12920:33;12917:120;;;12956:79;;:::i;:::-;12917:120;13076:1;13101:52;13145:7;13136:6;13125:9;13121:22;13101:52;:::i;:::-;13091:62;;13047:116;13230:2;13219:9;13215:18;13202:32;13261:18;13253:6;13250:30;13247:117;;;13283:79;;:::i;:::-;13247:117;13388:62;13442:7;13433:6;13422:9;13418:22;13388:62;:::i;:::-;13378:72;;13173:287;13499:2;13525:53;13570:7;13561:6;13550:9;13546:22;13525:53;:::i;:::-;13515:63;;13470:118;13627:2;13653:53;13698:7;13689:6;13678:9;13674:22;13653:53;:::i;:::-;13643:63;;13598:118;13755:3;13782:53;13827:7;13818:6;13807:9;13803:22;13782:53;:::i;:::-;13772:63;;13726:119;13912:3;13901:9;13897:19;13884:33;13944:18;13936:6;13933:30;13930:117;;;13966:79;;:::i;:::-;13930:117;14071:62;14125:7;14116:6;14105:9;14101:22;14071:62;:::i;:::-;14061:72;;13855:288;12739:1411;;;;;;;;:::o;14156:169::-;14240:11;14274:6;14269:3;14262:19;14314:4;14309:3;14305:14;14290:29;;14156:169;;;;:::o;14331:178::-;14471:30;14467:1;14459:6;14455:14;14448:54;14331:178;:::o;14515:366::-;14657:3;14678:67;14742:2;14737:3;14678:67;:::i;:::-;14671:74;;14754:93;14843:3;14754:93;:::i;:::-;14872:2;14867:3;14863:12;14856:19;;14515:366;;;:::o;14887:419::-;15053:4;15091:2;15080:9;15076:18;15068:26;;15140:9;15134:4;15130:20;15126:1;15115:9;15111:17;15104:47;15168:131;15294:4;15168:131;:::i;:::-;15160:139;;14887:419;;;:::o;15312:180::-;15360:77;15357:1;15350:88;15457:4;15454:1;15447:15;15481:4;15478:1;15471:15;15498:111;15583:1;15576:5;15573:12;15563:40;;15599:1;15596;15589:12;15563:40;15498:111;:::o;15615:163::-;15673:5;15711:6;15698:20;15689:29;;15727:45;15766:5;15727:45;:::i;:::-;15615:163;;;;:::o;15784:353::-;15855:6;15904:2;15892:9;15883:7;15879:23;15875:32;15872:119;;;15910:79;;:::i;:::-;15872:119;16030:1;16055:65;16112:7;16103:6;16092:9;16088:22;16055:65;:::i;:::-;16045:75;;16001:129;15784:353;;;;:::o;16143:182::-;16283:34;16279:1;16271:6;16267:14;16260:58;16143:182;:::o;16331:366::-;16473:3;16494:67;16558:2;16553:3;16494:67;:::i;:::-;16487:74;;16570:93;16659:3;16570:93;:::i;:::-;16688:2;16683:3;16679:12;16672:19;;16331:366;;;:::o;16703:419::-;16869:4;16907:2;16896:9;16892:18;16884:26;;16956:9;16950:4;16946:20;16942:1;16931:9;16927:17;16920:47;16984:131;17110:4;16984:131;:::i;:::-;16976:139;;16703:419;;;:::o;17128:117::-;17237:1;17234;17227:12;17251:117;17360:1;17357;17350:12;17394:595;17464:5;17508:4;17496:9;17491:3;17487:19;17483:30;17480:117;;;17516:79;;:::i;:::-;17480:117;17615:21;17631:4;17615:21;:::i;:::-;17606:30;;17700:1;17740:61;17797:3;17788:6;17777:9;17773:22;17740:61;:::i;:::-;17733:4;17726:5;17722:16;17715:87;17646:167;17880:2;17921:49;17966:3;17957:6;17946:9;17942:22;17921:49;:::i;:::-;17914:4;17907:5;17903:16;17896:75;17823:159;17394:595;;;;:::o;18021:600::-;18097:5;18141:4;18129:9;18124:3;18120:19;18116:30;18113:117;;;18149:79;;:::i;:::-;18113:117;18248:21;18264:4;18248:21;:::i;:::-;18239:30;;18329:1;18369:70;18435:3;18426:6;18415:9;18411:22;18369:70;:::i;:::-;18362:4;18355:5;18351:16;18344:96;18279:172;18512:2;18553:49;18598:3;18589:6;18578:9;18574:22;18553:49;:::i;:::-;18546:4;18539:5;18535:16;18528:75;18461:153;18021:600;;;;:::o;18627:383::-;18713:6;18762:2;18750:9;18741:7;18737:23;18733:32;18730:119;;;18768:79;;:::i;:::-;18730:119;18888:1;18913:80;18985:7;18976:6;18965:9;18961:22;18913:80;:::i;:::-;18903:90;;18859:144;18627:383;;;;:::o;19016:180::-;19156:32;19152:1;19144:6;19140:14;19133:56;19016:180;:::o;19202:366::-;19344:3;19365:67;19429:2;19424:3;19365:67;:::i;:::-;19358:74;;19441:93;19530:3;19441:93;:::i;:::-;19559:2;19554:3;19550:12;19543:19;;19202:366;;;:::o;19574:419::-;19740:4;19778:2;19767:9;19763:18;19755:26;;19827:9;19821:4;19817:20;19813:1;19802:9;19798:17;19791:47;19855:131;19981:4;19855:131;:::i;:::-;19847:139;;19574:419;;;:::o;19999:229::-;20139:34;20135:1;20127:6;20123:14;20116:58;20208:12;20203:2;20195:6;20191:15;20184:37;19999:229;:::o;20234:366::-;20376:3;20397:67;20461:2;20456:3;20397:67;:::i;:::-;20390:74;;20473:93;20562:3;20473:93;:::i;:::-;20591:2;20586:3;20582:12;20575:19;;20234:366;;;:::o;20606:419::-;20772:4;20810:2;20799:9;20795:18;20787:26;;20859:9;20853:4;20849:20;20845:1;20834:9;20830:17;20823:47;20887:131;21013:4;20887:131;:::i;:::-;20879:139;;20606:419;;;:::o;21031:329::-;21090:6;21139:2;21127:9;21118:7;21114:23;21110:32;21107:119;;;21145:79;;:::i;:::-;21107:119;21265:1;21290:53;21335:7;21326:6;21315:9;21311:22;21290:53;:::i;:::-;21280:63;;21236:117;21031:329;;;;:::o;21366:90::-;21400:7;21443:5;21436:13;21429:21;21418:32;;21366:90;;;:::o;21462:116::-;21532:21;21547:5;21532:21;:::i;:::-;21525:5;21522:32;21512:60;;21568:1;21565;21558:12;21512:60;21462:116;:::o;21584:133::-;21627:5;21665:6;21652:20;21643:29;;21681:30;21705:5;21681:30;:::i;:::-;21584:133;;;;:::o;21762:2513::-;21853:5;21897:6;21885:9;21880:3;21876:19;21872:32;21869:119;;;21907:79;;:::i;:::-;21869:119;22006:23;22022:6;22006:23;:::i;:::-;21997:32;;22100:1;22140:49;22185:3;22176:6;22165:9;22161:22;22140:49;:::i;:::-;22133:4;22126:5;22122:16;22115:75;22039:162;22270:2;22311:49;22356:3;22347:6;22336:9;22332:22;22311:49;:::i;:::-;22304:4;22297:5;22293:16;22286:75;22211:161;22437:2;22478:48;22522:3;22513:6;22502:9;22498:22;22478:48;:::i;:::-;22471:4;22464:5;22460:16;22453:74;22382:156;22602:2;22643:49;22688:3;22679:6;22668:9;22664:22;22643:49;:::i;:::-;22636:4;22629:5;22625:16;22618:75;22548:156;22768:3;22810:49;22855:3;22846:6;22835:9;22831:22;22810:49;:::i;:::-;22803:4;22796:5;22792:16;22785:75;22714:157;22939:3;22981:49;23026:3;23017:6;23006:9;23002:22;22981:49;:::i;:::-;22974:4;22967:5;22963:16;22956:75;22881:161;23112:3;23154:49;23199:3;23190:6;23179:9;23175:22;23154:49;:::i;:::-;23147:4;23140:5;23136:16;23129:75;23052:163;23282:3;23324:49;23369:3;23360:6;23349:9;23345:22;23324:49;:::i;:::-;23317:4;23310:5;23306:16;23299:75;23225:160;23461:3;23505:46;23547:3;23538:6;23527:9;23523:22;23505:46;:::i;:::-;23496:6;23489:5;23485:18;23478:74;23395:168;23666:3;23655:9;23651:19;23638:33;23698:18;23690:6;23687:30;23684:117;;;23720:79;;:::i;:::-;23684:117;23842:58;23896:3;23887:6;23876:9;23872:22;23842:58;:::i;:::-;23833:6;23826:5;23822:18;23815:86;23573:339;23972:3;24016:49;24061:3;24052:6;24041:9;24037:22;24016:49;:::i;:::-;24007:6;24000:5;23996:18;23989:77;23922:155;24166:3;24210:46;24252:3;24243:6;24232:9;24228:22;24210:46;:::i;:::-;24201:6;24194:5;24190:18;24183:74;24087:181;21762:2513;;;;:::o;24281:573::-;24382:6;24431:2;24419:9;24410:7;24406:23;24402:32;24399:119;;;24437:79;;:::i;:::-;24399:119;24585:1;24574:9;24570:17;24557:31;24615:18;24607:6;24604:30;24601:117;;;24637:79;;:::i;:::-;24601:117;24742:95;24829:7;24820:6;24809:9;24805:22;24742:95;:::i;:::-;24732:105;;24528:319;24281:573;;;;:::o;24860:94::-;24893:8;24941:5;24937:2;24933:14;24912:35;;24860:94;;;:::o;24960:::-;24999:7;25028:20;25042:5;25028:20;:::i;:::-;25017:31;;24960:94;;;:::o;25060:100::-;25099:7;25128:26;25148:5;25128:26;:::i;:::-;25117:37;;25060:100;;;:::o;25166:157::-;25271:45;25291:24;25309:5;25291:24;:::i;:::-;25271:45;:::i;:::-;25266:3;25259:58;25166:157;;:::o;25329:256::-;25441:3;25456:75;25527:3;25518:6;25456:75;:::i;:::-;25556:2;25551:3;25547:12;25540:19;;25576:3;25569:10;;25329:256;;;;:::o;25591:180::-;25639:77;25636:1;25629:88;25736:4;25733:1;25726:15;25760:4;25757:1;25750:15;25777:410;25817:7;25840:20;25858:1;25840:20;:::i;:::-;25835:25;;25874:20;25892:1;25874:20;:::i;:::-;25869:25;;25929:1;25926;25922:9;25951:30;25969:11;25951:30;:::i;:::-;25940:41;;26130:1;26121:7;26117:15;26114:1;26111:22;26091:1;26084:9;26064:83;26041:139;;26160:18;;:::i;:::-;26041:139;25825:362;25777:410;;;;:::o;26193:180::-;26241:77;26238:1;26231:88;26338:4;26335:1;26328:15;26362:4;26359:1;26352:15;26379:185;26419:1;26436:20;26454:1;26436:20;:::i;:::-;26431:25;;26470:20;26488:1;26470:20;:::i;:::-;26465:25;;26509:1;26499:35;;26514:18;;:::i;:::-;26499:35;26556:1;26553;26549:9;26544:14;;26379:185;;;;:::o;26570:118::-;26657:24;26675:5;26657:24;:::i;:::-;26652:3;26645:37;26570:118;;:::o;26694:115::-;26779:23;26796:5;26779:23;:::i;:::-;26774:3;26767:36;26694:115;;:::o;26815:98::-;26866:6;26900:5;26894:12;26884:22;;26815:98;;;:::o;26919:168::-;27002:11;27036:6;27031:3;27024:19;27076:4;27071:3;27067:14;27052:29;;26919:168;;;;:::o;27093:246::-;27174:1;27184:113;27198:6;27195:1;27192:13;27184:113;;;27283:1;27278:3;27274:11;27268:18;27264:1;27259:3;27255:11;27248:39;27220:2;27217:1;27213:10;27208:15;;27184:113;;;27331:1;27322:6;27317:3;27313:16;27306:27;27155:184;27093:246;;;:::o;27345:373::-;27431:3;27459:38;27491:5;27459:38;:::i;:::-;27513:70;27576:6;27571:3;27513:70;:::i;:::-;27506:77;;27592:65;27650:6;27645:3;27638:4;27631:5;27627:16;27592:65;:::i;:::-;27682:29;27704:6;27682:29;:::i;:::-;27677:3;27673:39;27666:46;;27435:283;27345:373;;;;:::o;27724:1302::-;28085:4;28123:3;28112:9;28108:19;28100:27;;28137:71;28205:1;28194:9;28190:17;28181:6;28137:71;:::i;:::-;28218:72;28286:2;28275:9;28271:18;28262:6;28218:72;:::i;:::-;28300;28368:2;28357:9;28353:18;28344:6;28300:72;:::i;:::-;28382:70;28448:2;28437:9;28433:18;28424:6;28382:70;:::i;:::-;28462:73;28530:3;28519:9;28515:19;28506:6;28462:73;:::i;:::-;28545;28613:3;28602:9;28598:19;28589:6;28545:73;:::i;:::-;28628;28696:3;28685:9;28681:19;28672:6;28628:73;:::i;:::-;28711;28779:3;28768:9;28764:19;28755:6;28711:73;:::i;:::-;28794;28862:3;28851:9;28847:19;28838:6;28794:73;:::i;:::-;28915:9;28909:4;28905:20;28899:3;28888:9;28884:19;28877:49;28943:76;29014:4;29005:6;28943:76;:::i;:::-;28935:84;;27724:1302;;;;;;;;;;;;;:::o;29032:104::-;29077:7;29106:24;29124:5;29106:24;:::i;:::-;29095:35;;29032:104;;;:::o;29142:142::-;29245:32;29271:5;29245:32;:::i;:::-;29240:3;29233:45;29142:142;;:::o;29290:158::-;29363:11;29397:6;29392:3;29385:19;29437:4;29432:3;29428:14;29413:29;;29290:158;;;;:::o;29454:353::-;29530:3;29558:38;29590:5;29558:38;:::i;:::-;29612:60;29665:6;29660:3;29612:60;:::i;:::-;29605:67;;29681:65;29739:6;29734:3;29727:4;29720:5;29716:16;29681:65;:::i;:::-;29771:29;29793:6;29771:29;:::i;:::-;29766:3;29762:39;29755:46;;29534:273;29454:353;;;;:::o;29885:807::-;30004:3;30040:4;30035:3;30031:14;30136:4;30129:5;30125:16;30119:23;30155:63;30212:4;30207:3;30203:14;30189:12;30155:63;:::i;:::-;30055:173;30321:4;30314:5;30310:16;30304:23;30340:63;30397:4;30392:3;30388:14;30374:12;30340:63;:::i;:::-;30238:175;30504:4;30497:5;30493:16;30487:23;30557:3;30551:4;30547:14;30540:4;30535:3;30531:14;30524:38;30583:71;30649:4;30635:12;30583:71;:::i;:::-;30575:79;;30423:242;30682:4;30675:11;;30009:683;29885:807;;;;:::o;30698:1461::-;31115:4;31153:3;31142:9;31138:19;31130:27;;31167:69;31233:1;31222:9;31218:17;31209:6;31167:69;:::i;:::-;31246:72;31314:2;31303:9;31299:18;31290:6;31246:72;:::i;:::-;31328;31396:2;31385:9;31381:18;31372:6;31328:72;:::i;:::-;31410:88;31494:2;31483:9;31479:18;31470:6;31410:88;:::i;:::-;31508:73;31576:3;31565:9;31561:19;31552:6;31508:73;:::i;:::-;31591;31659:3;31648:9;31644:19;31635:6;31591:73;:::i;:::-;31712:9;31706:4;31702:20;31696:3;31685:9;31681:19;31674:49;31740:108;31843:4;31834:6;31740:108;:::i;:::-;31732:116;;31896:9;31890:4;31886:20;31880:3;31869:9;31865:19;31858:49;31924:76;31995:4;31986:6;31924:76;:::i;:::-;31916:84;;32048:9;32042:4;32038:20;32032:3;32021:9;32017:19;32010:49;32076:76;32147:4;32138:6;32076:76;:::i;:::-;32068:84;;30698:1461;;;;;;;;;;;;:::o;32165:165::-;32305:17;32301:1;32293:6;32289:14;32282:41;32165:165;:::o;32336:366::-;32478:3;32499:67;32563:2;32558:3;32499:67;:::i;:::-;32492:74;;32575:93;32664:3;32575:93;:::i;:::-;32693:2;32688:3;32684:12;32677:19;;32336:366;;;:::o;32708:211::-;32834:11;32868:6;32863:3;32856:19;32908:4;32903:3;32899:14;32884:29;;32708:211;;;;:::o;32977:948::-;33150:3;33179:81;33254:5;33179:81;:::i;:::-;33276:113;33382:6;33377:3;33276:113;:::i;:::-;33269:120;;33413:83;33490:5;33413:83;:::i;:::-;33519:7;33550:1;33535:365;33560:6;33557:1;33554:13;33535:365;;;33636:6;33630:13;33663:117;33776:3;33761:13;33663:117;:::i;:::-;33656:124;;33803:87;33883:6;33803:87;:::i;:::-;33793:97;;33595:305;33582:1;33579;33575:9;33570:14;;33535:365;;;33539:14;33916:3;33909:10;;33155:770;;;32977:948;;;;:::o;33931:1203::-;34329:4;34367:3;34356:9;34352:19;34344:27;;34417:9;34411:4;34407:20;34403:1;34392:9;34388:17;34381:47;34445:131;34571:4;34445:131;:::i;:::-;34437:139;;34586:70;34652:2;34641:9;34637:18;34628:6;34586:70;:::i;:::-;34666:72;34734:2;34723:9;34719:18;34710:6;34666:72;:::i;:::-;34785:9;34779:4;34775:20;34770:2;34759:9;34755:18;34748:48;34813:162;34970:4;34961:6;34813:162;:::i;:::-;34805:170;;35023:9;35017:4;35013:20;35007:3;34996:9;34992:19;34985:49;35051:76;35122:4;35113:6;35051:76;:::i;:::-;35043:84;;33931:1203;;;;;;;:::o;35140:231::-;35280:34;35276:1;35268:6;35264:14;35257:58;35349:14;35344:2;35336:6;35332:15;35325:39;35140:231;:::o;35377:366::-;35519:3;35540:67;35604:2;35599:3;35540:67;:::i;:::-;35533:74;;35616:93;35705:3;35616:93;:::i;:::-;35734:2;35729:3;35725:12;35718:19;;35377:366;;;:::o;35749:419::-;35915:4;35953:2;35942:9;35938:18;35930:26;;36002:9;35996:4;35992:20;35988:1;35977:9;35973:17;35966:47;36030:131;36156:4;36030:131;:::i;:::-;36022:139;;35749:419;;;:::o;36174:143::-;36231:5;36262:6;36256:13;36247:22;;36278:33;36305:5;36278:33;:::i;:::-;36174:143;;;;:::o;36323:::-;36380:5;36411:6;36405:13;36396:22;;36427:33;36454:5;36427:33;:::i;:::-;36323:143;;;;:::o;36472:340::-;36578:4;36668:18;36660:6;36657:30;36654:56;;;36690:18;;:::i;:::-;36654:56;36740:4;36732:6;36728:17;36720:25;;36800:4;36794;36790:15;36782:23;;36472:340;;;:::o;36818:141::-;36874:5;36905:6;36899:13;36890:22;;36921:32;36947:5;36921:32;:::i;:::-;36818:141;;;;:::o;36965:350::-;37081:4;37171:18;37163:6;37160:30;37157:56;;;37193:18;;:::i;:::-;37157:56;37243:4;37235:6;37231:17;37223:25;;37303:4;37297;37293:15;37285:23;;36965:350;;;:::o;37321:137::-;37375:5;37406:6;37400:13;37391:22;;37422:30;37446:5;37422:30;:::i;:::-;37321:137;;;;:::o;37464:167::-;37533:5;37564:6;37558:13;37549:22;;37580:45;37619:5;37580:45;:::i;:::-;37464:167;;;;:::o;37657:628::-;37738:5;37782:4;37770:9;37765:3;37761:19;37757:30;37754:117;;;37790:79;;:::i;:::-;37754:117;37889:21;37905:4;37889:21;:::i;:::-;37880:30;;37974:1;38014:72;38082:3;38073:6;38062:9;38058:22;38014:72;:::i;:::-;38007:4;38000:5;37996:16;37989:98;37920:178;38165:2;38206:60;38262:3;38253:6;38242:9;38238:22;38206:60;:::i;:::-;38199:4;38192:5;38188:16;38181:86;38108:170;37657:628;;;;:::o;38328:1005::-;38427:5;38471:4;38459:9;38454:3;38450:19;38446:30;38443:117;;;38479:79;;:::i;:::-;38443:117;38578:21;38594:4;38578:21;:::i;:::-;38569:30;;38668:1;38708:57;38761:3;38752:6;38741:9;38737:22;38708:57;:::i;:::-;38701:4;38694:5;38690:16;38683:83;38609:168;38847:2;38888:57;38941:3;38932:6;38921:9;38917:22;38888:57;:::i;:::-;38881:4;38874:5;38870:16;38863:83;38787:170;39017:2;39058:81;39135:3;39126:6;39115:9;39111:22;39058:81;:::i;:::-;39051:4;39044:5;39040:16;39033:107;38967:184;39212:3;39254:60;39310:3;39301:6;39290:9;39286:22;39254:60;:::i;:::-;39247:4;39240:5;39236:16;39229:86;39161:165;38328:1005;;;;:::o;39378:849::-;39524:5;39549:120;39565:103;39661:6;39565:103;:::i;:::-;39549:120;:::i;:::-;39540:129;;39689:5;39718:6;39711:5;39704:21;39752:4;39745:5;39741:16;39734:23;;39805:4;39797:6;39793:17;39785:6;39781:30;39834:3;39826:6;39823:15;39820:122;;;39853:79;;:::i;:::-;39820:122;39968:6;39951:270;39985:6;39980:3;39977:15;39951:270;;;40060:3;40089:87;40172:3;40160:10;40089:87;:::i;:::-;40084:3;40077:100;40206:4;40201:3;40197:14;40190:21;;40027:194;40011:4;40006:3;40002:14;39995:21;;39951:270;;;39955:21;39530:697;;39378:849;;;;;:::o;40272:463::-;40393:5;40442:3;40435:4;40427:6;40423:17;40419:27;40409:122;;40450:79;;:::i;:::-;40409:122;40560:6;40554:13;40585:144;40725:3;40717:6;40710:4;40702:6;40698:17;40585:144;:::i;:::-;40576:153;;40399:336;40272:463;;;;:::o;40741:432::-;40829:5;40854:65;40870:48;40911:6;40870:48;:::i;:::-;40854:65;:::i;:::-;40845:74;;40942:6;40935:5;40928:21;40980:4;40973:5;40969:16;41018:3;41009:6;41004:3;41000:16;40997:25;40994:112;;;41025:79;;:::i;:::-;40994:112;41115:52;41160:6;41155:3;41150;41115:52;:::i;:::-;40835:338;40741:432;;;;;:::o;41192:353::-;41258:5;41307:3;41300:4;41292:6;41288:17;41284:27;41274:122;;41315:79;;:::i;:::-;41274:122;41425:6;41419:13;41450:89;41535:3;41527:6;41520:4;41512:6;41508:17;41450:89;:::i;:::-;41441:98;;41264:281;41192:353;;;;:::o;41551:118::-;41622:22;41638:5;41622:22;:::i;:::-;41615:5;41612:33;41602:61;;41659:1;41656;41649:12;41602:61;41551:118;:::o;41675:139::-;41730:5;41761:6;41755:13;41746:22;;41777:31;41802:5;41777:31;:::i;:::-;41675:139;;;;:::o;41847:1536::-;41936:5;41980:4;41968:9;41963:3;41959:19;41955:30;41952:117;;;41988:79;;:::i;:::-;41952:117;42087:21;42103:4;42087:21;:::i;:::-;42078:30;;42173:1;42213:59;42268:3;42259:6;42248:9;42244:22;42213:59;:::i;:::-;42206:4;42199:5;42195:16;42188:85;42118:166;42350:2;42391:60;42447:3;42438:6;42427:9;42423:22;42391:60;:::i;:::-;42384:4;42377:5;42373:16;42366:86;42294:169;42550:2;42539:9;42535:18;42529:25;42581:18;42573:6;42570:30;42567:117;;;42603:79;;:::i;:::-;42567:117;42723:124;42843:3;42834:6;42823:9;42819:22;42723:124;:::i;:::-;42716:4;42709:5;42705:16;42698:150;42473:386;42942:2;42931:9;42927:18;42921:25;42973:18;42965:6;42962:30;42959:117;;;42995:79;;:::i;:::-;42959:117;43115:69;43180:3;43171:6;43160:9;43156:22;43115:69;:::i;:::-;43108:4;43101:5;43097:16;43090:95;42869:327;43264:3;43306:58;43360:3;43351:6;43340:9;43336:22;43306:58;:::i;:::-;43299:4;43292:5;43288:16;43281:84;43206:170;41847:1536;;;;:::o;43418:1017::-;43554:5;43579:110;43595:93;43681:6;43595:93;:::i;:::-;43579:110;:::i;:::-;43570:119;;43709:5;43738:6;43731:5;43724:21;43772:4;43765:5;43761:16;43754:23;;43825:4;43817:6;43813:17;43805:6;43801:30;43854:3;43846:6;43843:15;43840:122;;;43873:79;;:::i;:::-;43840:122;43988:6;43971:458;44005:6;44000:3;43997:15;43971:458;;;44087:3;44081:10;44123:18;44110:11;44107:35;44104:122;;;44145:79;;:::i;:::-;44104:122;44269:11;44261:6;44257:24;44307:77;44380:3;44368:10;44307:77;:::i;:::-;44302:3;44295:90;44414:4;44409:3;44405:14;44398:21;;44047:382;;44031:4;44026:3;44022:14;44015:21;;43971:458;;;43975:21;43560:875;;43418:1017;;;;;:::o;44470:443::-;44581:5;44630:3;44623:4;44615:6;44611:17;44607:27;44597:122;;44638:79;;:::i;:::-;44597:122;44748:6;44742:13;44773:134;44903:3;44895:6;44888:4;44880:6;44876:17;44773:134;:::i;:::-;44764:143;;44587:326;44470:443;;;;:::o;44942:831::-;45026:5;45070:4;45058:9;45053:3;45049:19;45045:30;45042:117;;;45078:79;;:::i;:::-;45042:117;45177:21;45193:4;45177:21;:::i;:::-;45168:30;;45274:1;45314:60;45370:3;45361:6;45350:9;45346:22;45314:60;:::i;:::-;45307:4;45300:5;45296:16;45289:86;45208:178;45467:2;45456:9;45452:18;45446:25;45498:18;45490:6;45487:30;45484:117;;;45520:79;;:::i;:::-;45484:117;45640:114;45750:3;45741:6;45730:9;45726:22;45640:114;:::i;:::-;45633:4;45626:5;45622:16;45615:140;45396:370;44942:831;;;;:::o;45807:972::-;45896:5;45940:4;45928:9;45923:3;45919:19;45915:30;45912:117;;;45948:79;;:::i;:::-;45912:117;46047:21;46063:4;46047:21;:::i;:::-;46038:30;;46134:1;46174:60;46230:3;46221:6;46210:9;46206:22;46174:60;:::i;:::-;46167:4;46160:5;46156:16;46149:86;46078:168;46306:2;46347:60;46403:3;46394:6;46383:9;46379:22;46347:60;:::i;:::-;46340:4;46333:5;46329:16;46322:86;46256:163;46503:2;46492:9;46488:18;46482:25;46534:18;46526:6;46523:30;46520:117;;;46556:79;;:::i;:::-;46520:117;46676:84;46756:3;46747:6;46736:9;46732:22;46676:84;:::i;:::-;46669:4;46662:5;46658:16;46651:110;46429:343;45807:972;;;;:::o;46785:562::-;46884:6;46933:2;46921:9;46912:7;46908:23;46904:32;46901:119;;;46939:79;;:::i;:::-;46901:119;47080:1;47069:9;47065:17;47059:24;47110:18;47102:6;47099:30;47096:117;;;47132:79;;:::i;:::-;47096:117;47237:93;47322:7;47313:6;47302:9;47298:22;47237:93;:::i;:::-;47227:103;;47030:310;46785:562;;;;:::o;47353:143::-;47449:6;47483:5;47477:12;47467:22;;47353:143;;;:::o;47502:203::-;47620:11;47654:6;47649:3;47642:19;47694:4;47689:3;47685:14;47670:29;;47502:203;;;;:::o;47711:161::-;47807:4;47830:3;47822:11;;47860:4;47855:3;47851:14;47843:22;;47711:161;;;:::o;47878:105::-;47953:23;47970:5;47953:23;:::i;:::-;47948:3;47941:36;47878:105;;:::o;47989:153::-;48095:6;48129:5;48123:12;48113:22;;47989:153;;;:::o;48148:213::-;48276:11;48310:6;48305:3;48298:19;48350:4;48345:3;48341:14;48326:29;;48148:213;;;;:::o;48367:171::-;48473:4;48496:3;48488:11;;48526:4;48521:3;48517:14;48509:22;;48367:171;;;:::o;48544:99::-;48615:21;48630:5;48615:21;:::i;:::-;48610:3;48603:34;48544:99;;:::o;48719:927::-;48884:4;48879:3;48875:14;48981:4;48974:5;48970:16;48964:23;49000:57;49051:4;49046:3;49042:14;49028:12;49000:57;:::i;:::-;48899:168;49160:4;49153:5;49149:16;49143:23;49179:57;49230:4;49225:3;49221:14;49207:12;49179:57;:::i;:::-;49077:169;49329:4;49322:5;49318:16;49312:23;49348:105;49447:4;49442:3;49438:14;49424:12;49348:105;:::i;:::-;49256:207;49547:4;49540:5;49536:16;49530:23;49566:63;49623:4;49618:3;49614:14;49600:12;49566:63;:::i;:::-;49473:166;48853:793;48719:927;;:::o;49652:335::-;49799:10;49820:124;49940:3;49932:6;49820:124;:::i;:::-;49976:4;49971:3;49967:14;49953:28;;49652:335;;;;:::o;49993:152::-;50102:4;50134;50129:3;50125:14;50117:22;;49993:152;;;:::o;50225:1024::-;50412:3;50441:93;50528:5;50441:93;:::i;:::-;50550:115;50658:6;50653:3;50550:115;:::i;:::-;50543:122;;50689:95;50778:5;50689:95;:::i;:::-;50807:7;50838:1;50823:401;50848:6;50845:1;50842:13;50823:401;;;50924:6;50918:13;50951:141;51088:3;51073:13;50951:141;:::i;:::-;50944:148;;51115:99;51207:6;51115:99;:::i;:::-;51105:109;;50883:341;50870:1;50867;50863:9;50858:14;;50823:401;;;50827:14;51240:3;51233:10;;50417:832;;;50225:1024;;;;:::o;51305:1329::-;51422:3;51458:4;51453:3;51449:14;51551:4;51544:5;51540:16;51534:23;51570:61;51625:4;51620:3;51616:14;51602:12;51570:61;:::i;:::-;51473:168;51730:4;51723:5;51719:16;51713:23;51749:63;51806:4;51801:3;51797:14;51783:12;51749:63;:::i;:::-;51651:171;51911:4;51904:5;51900:16;51894:23;51964:3;51958:4;51954:14;51947:4;51942:3;51938:14;51931:38;51990:181;52166:4;52152:12;51990:181;:::i;:::-;51982:189;;51832:350;52267:4;52260:5;52256:16;52250:23;52320:3;52314:4;52310:14;52303:4;52298:3;52294:14;52287:38;52346:71;52412:4;52398:12;52346:71;:::i;:::-;52338:79;;52192:236;52519:4;52512:5;52508:16;52502:23;52538:59;52591:4;52586:3;52582:14;52568:12;52538:59;:::i;:::-;52438:169;52624:4;52617:11;;51427:1207;51305:1329;;;;:::o;52640:272::-;52767:10;52802:104;52902:3;52894:6;52802:104;:::i;:::-;52788:118;;52640:272;;;;:::o;52918:142::-;53017:4;53049;53044:3;53040:14;53032:22;;52918:142;;;:::o;53120:1123::-;53287:3;53316:83;53393:5;53316:83;:::i;:::-;53415:105;53513:6;53508:3;53415:105;:::i;:::-;53408:112;;53546:3;53591:4;53583:6;53579:17;53574:3;53570:27;53621:85;53700:5;53621:85;:::i;:::-;53729:7;53760:1;53745:453;53770:6;53767:1;53764:13;53745:453;;;53841:9;53835:4;53831:20;53826:3;53819:33;53892:6;53886:13;53920:122;54037:4;54022:13;53920:122;:::i;:::-;53912:130;;54065:89;54147:6;54065:89;:::i;:::-;54055:99;;54183:4;54178:3;54174:14;54167:21;;53805:393;53792:1;53789;53785:9;53780:14;;53745:453;;;53749:14;54214:4;54207:11;;54234:3;54227:10;;53292:951;;;;;53120:1123;;;;:::o;54291:700::-;54398:3;54434:4;54429:3;54425:14;54538:4;54531:5;54527:16;54521:23;54557:63;54614:4;54609:3;54605:14;54591:12;54557:63;:::i;:::-;54449:181;54713:4;54706:5;54702:16;54696:23;54766:3;54760:4;54756:14;54749:4;54744:3;54740:14;54733:38;54792:161;54948:4;54934:12;54792:161;:::i;:::-;54784:169;;54640:324;54981:4;54974:11;;54403:588;54291:700;;;;:::o;55049:828::-;55176:3;55212:4;55207:3;55203:14;55306:4;55299:5;55295:16;55289:23;55325:63;55382:4;55377:3;55373:14;55359:12;55325:63;:::i;:::-;55227:171;55481:4;55474:5;55470:16;55464:23;55500:63;55557:4;55552:3;55548:14;55534:12;55500:63;:::i;:::-;55408:165;55659:4;55652:5;55648:16;55642:23;55712:3;55706:4;55702:14;55695:4;55690:3;55686:14;55679:38;55738:101;55834:4;55820:12;55738:101;:::i;:::-;55730:109;;55583:267;55867:4;55860:11;;55181:696;55049:828;;;;:::o;55883:609::-;56090:4;56128:2;56117:9;56113:18;56105:26;;56141:71;56209:1;56198:9;56194:17;56185:6;56141:71;:::i;:::-;56222:72;56290:2;56279:9;56275:18;56266:6;56222:72;:::i;:::-;56341:9;56335:4;56331:20;56326:2;56315:9;56311:18;56304:48;56369:116;56480:4;56471:6;56369:116;:::i;:::-;56361:124;;55883:609;;;;;;:::o;56540:710::-;56657:3;56693:4;56688:3;56684:14;56797:4;56790:5;56786:16;56780:23;56816:63;56873:4;56868:3;56864:14;56850:12;56816:63;:::i;:::-;56708:181;56972:4;56965:5;56961:16;56955:23;57025:3;57019:4;57015:14;57008:4;57003:3;56999:14;56992:38;57051:161;57207:4;57193:12;57051:161;:::i;:::-;57043:169;;56899:324;57240:4;57233:11;;56662:588;56540:710;;;;:::o;57256:959::-;57585:4;57623:3;57612:9;57608:19;57600:27;;57637:71;57705:1;57694:9;57690:17;57681:6;57637:71;:::i;:::-;57718:72;57786:2;57775:9;57771:18;57762:6;57718:72;:::i;:::-;57837:9;57831:4;57827:20;57822:2;57811:9;57807:18;57800:48;57865:106;57966:4;57957:6;57865:106;:::i;:::-;57857:114;;58018:9;58012:4;58008:20;58003:2;57992:9;57988:18;57981:48;58046:162;58203:4;58194:6;58046:162;:::i;:::-;58038:170;;57256:959;;;;;;;:::o;58221:332::-;58342:4;58380:2;58369:9;58365:18;58357:26;;58393:71;58461:1;58450:9;58446:17;58437:6;58393:71;:::i;:::-;58474:72;58542:2;58531:9;58527:18;58518:6;58474:72;:::i;:::-;58221:332;;;;;:::o;58559:345::-;58626:6;58675:2;58663:9;58654:7;58650:23;58646:32;58643:119;;;58681:79;;:::i;:::-;58643:119;58801:1;58826:61;58879:7;58870:6;58859:9;58855:22;58826:61;:::i;:::-;58816:71;;58772:125;58559:345;;;;:::o;58910:332::-;59031:4;59069:2;59058:9;59054:18;59046:26;;59082:71;59150:1;59139:9;59135:17;59126:6;59082:71;:::i;:::-;59163:72;59231:2;59220:9;59216:18;59207:6;59163:72;:::i;:::-;58910:332;;;;;:::o;59248:351::-;59318:6;59367:2;59355:9;59346:7;59342:23;59338:32;59335:119;;;59373:79;;:::i;:::-;59335:119;59493:1;59518:64;59574:7;59565:6;59554:9;59550:22;59518:64;:::i;:::-;59508:74;;59464:128;59248:351;;;;:::o;59605:191::-;59645:3;59664:20;59682:1;59664:20;:::i;:::-;59659:25;;59698:20;59716:1;59698:20;:::i;:::-;59693:25;;59741:1;59738;59734:9;59727:16;;59762:3;59759:1;59756:10;59753:36;;;59769:18;;:::i;:::-;59753:36;59605:191;;;;:::o;59802:229::-;59942:34;59938:1;59930:6;59926:14;59919:58;60011:12;60006:2;59998:6;59994:15;59987:37;59802:229;:::o;60037:366::-;60179:3;60200:67;60264:2;60259:3;60200:67;:::i;:::-;60193:74;;60276:93;60365:3;60276:93;:::i;:::-;60394:2;60389:3;60385:12;60378:19;;60037:366;;;:::o;60409:419::-;60575:4;60613:2;60602:9;60598:18;60590:26;;60662:9;60656:4;60652:20;60648:1;60637:9;60633:17;60626:47;60690:131;60816:4;60690:131;:::i;:::-;60682:139;;60409:419;;;:::o;60834:225::-;60974:34;60970:1;60962:6;60958:14;60951:58;61043:8;61038:2;61030:6;61026:15;61019:33;60834:225;:::o;61065:366::-;61207:3;61228:67;61292:2;61287:3;61228:67;:::i;:::-;61221:74;;61304:93;61393:3;61304:93;:::i;:::-;61422:2;61417:3;61413:12;61406:19;;61065:366;;;:::o;61437:419::-;61603:4;61641:2;61630:9;61626:18;61618:26;;61690:9;61684:4;61680:20;61676:1;61665:9;61661:17;61654:47;61718:131;61844:4;61718:131;:::i;:::-;61710:139;;61437:419;;;:::o;61862:147::-;61963:11;62000:3;61985:18;;61862:147;;;;:::o;62015:386::-;62119:3;62147:38;62179:5;62147:38;:::i;:::-;62201:88;62282:6;62277:3;62201:88;:::i;:::-;62194:95;;62298:65;62356:6;62351:3;62344:4;62337:5;62333:16;62298:65;:::i;:::-;62388:6;62383:3;62379:16;62372:23;;62123:278;62015:386;;;;:::o;62407:271::-;62537:3;62559:93;62648:3;62639:6;62559:93;:::i;:::-;62552:100;;62669:3;62662:10;;62407:271;;;;:::o;62684:179::-;62824:31;62820:1;62812:6;62808:14;62801:55;62684:179;:::o;62869:366::-;63011:3;63032:67;63096:2;63091:3;63032:67;:::i;:::-;63025:74;;63108:93;63197:3;63108:93;:::i;:::-;63226:2;63221:3;63217:12;63210:19;;62869:366;;;:::o;63241:419::-;63407:4;63445:2;63434:9;63430:18;63422:26;;63494:9;63488:4;63484:20;63480:1;63469:9;63465:17;63458:47;63522:131;63648:4;63522:131;:::i;:::-;63514:139;;63241:419;;;:::o;63666:99::-;63718:6;63752:5;63746:12;63736:22;;63666:99;;;:::o;63771:377::-;63859:3;63887:39;63920:5;63887:39;:::i;:::-;63942:71;64006:6;64001:3;63942:71;:::i;:::-;63935:78;;64022:65;64080:6;64075:3;64068:4;64061:5;64057:16;64022:65;:::i;:::-;64112:29;64134:6;64112:29;:::i;:::-;64107:3;64103:39;64096:46;;63863:285;63771:377;;;;:::o;64154:313::-;64267:4;64305:2;64294:9;64290:18;64282:26;;64354:9;64348:4;64344:20;64340:1;64329:9;64325:17;64318:47;64382:78;64455:4;64446:6;64382:78;:::i;:::-;64374:86;;64154:313;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2556000","executionCost":"infinite","totalCost":"infinite"},"external":{"execute(((uint8,address),uint256)[],bytes)":"infinite","frontDoorAddress()":"infinite","sgReceive(uint16,bytes,uint256,address,uint256,bytes)":"infinite","stargateRouterAddress()":"infinite"},"internal":{"approveErc20(address,uint256)":"infinite"}},"methodIdentifiers":{"execute(((uint8,address),uint256)[],bytes)":"7bb26ca7","frontDoorAddress()":"50fd910e","sgReceive(uint16,bytes,uint256,address,uint256,bytes)":"ab8236f3","stargateRouterAddress()":"1d2091bf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_frontDoorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stargateRouterAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"workflowRunnerAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"stepTypeId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"stepAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"sourceIsCaller\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"amountIsPercent\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct WorkflowStepInputAsset[]\",\"name\":\"inputAssets\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"argData\",\"type\":\"bytes\"},{\"internalType\":\"int16\",\"name\":\"nextStepIndex\",\"type\":\"int16\"}],\"internalType\":\"struct WorkflowStep[]\",\"name\":\"steps\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Workflow\",\"name\":\"workflow\",\"type\":\"tuple\"}],\"indexed\":false,\"internalType\":\"struct BridgePayload\",\"name\":\"bridgePayload\",\"type\":\"tuple\"}],\"name\":\"SgReceiveCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nativeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstActionAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"srcPoolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dstPoolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"continuationWorkflow\",\"type\":\"bytes\"}],\"name\":\"StargateBridgeParamsEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stepType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct AssetAmount[]\",\"name\":\"expectedAssets\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"continuationWorkflow\",\"type\":\"bytes\"}],\"name\":\"WorkflowBridged\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"inputAssetAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"argData\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"inputAssetAmounts\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"outputAssetAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"int16\",\"name\":\"nextStepIndex\",\"type\":\"int16\"},{\"internalType\":\"int24\",\"name\":\"fee\",\"type\":\"int24\"}],\"internalType\":\"struct WorkflowStepResult\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frontDoorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"sgReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stargateRouterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"SgReceiveCalled(address,uint256,(address,uint256,(address,(uint16,address,(bool,bool,(uint8,address),uint256)[],bytes,int16)[])))\":{\"params\":{\"bridgePayload\":\"the payload that was sent along with the erc20.\",\"tokenAddress\":\"the address of the erc20 that was transfered from the source chain to this chain.abi\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"SgReceiveCalled(address,uint256,(address,uint256,(address,(uint16,address,(bool,bool,(uint8,address),uint256)[],bytes,int16)[])))\":{\"notice\":\"This event is emitted on the destination chain when Stargate invokes our sgReceive method\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StargateBridgeAction.sol\":\"StargateBridgeAction\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@freemarket/core/contracts/IWorkflowRunner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './model/AssetAmount.sol';\\nimport './model/Workflow.sol';\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\n\\n/// @notice An interface defining the entry point to the engine for executing workflows.\\ninterface IWorkflowRunner {\\n  /// @notice Initiate the execution of a workflow.\\n  /// @param workflow The workflow to execute.\\n  function executeWorkflow(Workflow calldata workflow) external payable;\\n\\n  /// @notice Continue a workflow that started on a different chain.\\n  /// @notice This is not callable by 3rd parties, only approved bridge integrations call this method.\\n  function continueWorkflow(\\n    address userAddress,\\n    uint256 nonce,\\n    Workflow memory workflow,\\n    AssetAmount[] memory startingAssets\\n  ) external payable;\\n}\\n\",\"keccak256\":\"0xef6461c7c07007e97af766fc8d2e338c457d13faf0f88d495ffcd39d232d6749\",\"license\":\"MIT\"},\"@freemarket/core/contracts/IWorkflowStep.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./model/Asset.sol\\\";\\nimport \\\"./model/AssetAmount.sol\\\";\\nimport \\\"./model/WorkflowStepResult.sol\\\";\\n\\n/// @title The interface between WorkflowRunner and each Step implementation.abi\\n/// @author Marty Saxton\\n/// @notice All steps must implement this interface.\\ninterface IWorkflowStep {\\n    /// @notice called by WorkflowRunner to execute a workflow step.\\n    /// @param assetAmounts AssetAmounts to be used by the step\\n    /// @param argData Step specific arguments in ABI encoding\\n    /// @return the outcome of the step invocation\\n    function execute(AssetAmount[] calldata assetAmounts, bytes calldata argData)\\n        external\\n        payable\\n        returns (WorkflowStepResult memory);\\n}\\n\",\"keccak256\":\"0xce8590c782238edd5fa7293798bc02411f7b408ad4caeaaab2ac052e97ab1cdf\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/Asset.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./AssetType.sol\\\";\\n\\nstruct Asset {\\n    AssetType assetType;\\n    address assetAddress; // 0x0 for ETH, the ERC20 address.  If it's an account balance, this could represent the token of the account\\n}\\n\",\"keccak256\":\"0x2031c32d59aa2c1c6081156d4d06c9c6aff579a0b8f5d2f81ad86ff503e9e8a8\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetAmount.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './Asset.sol';\\n\\nstruct AssetAmount {\\n  Asset asset;\\n  uint256 amount;\\n}\\n\",\"keccak256\":\"0x4f57b823b38d6e8727dfa94708f63573854b74e44553f6f609bca64cc718ff0e\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetType.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nenum AssetType {\\n    Native,\\n    ERC20,\\n    ERC721\\n}\\n\",\"keccak256\":\"0xb9592fa2334517b52dae64c34f0254b4d75b20b60da00c5fc5c6e0316487e963\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/BridgePayload.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\nimport './Workflow.sol';\\n\\n// The payload passed form the source chain to the destination chains to continue a multi-chain workflow\\nstruct BridgePayload {\\n  // the end user's address on the destination chain\\n  address userAddress;\\n  // a (statistically) unique id to correlate the sending chain's workflow segment with the target chain's workflow segment\\n  uint256 nonce;\\n  // the 'continuation' workflow that executes on the target chain\\n  Workflow workflow;\\n}\\n\",\"keccak256\":\"0xac79004ae00205b53dcc3ee6b39f767d7705992d91ee9c618c78987d90f4b720\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/Workflow.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './WorkflowStep.sol';\\n\\n// The main workflow data structure.\\nstruct Workflow {\\n  // The address of the WorkflowRunner contract, allowing the caller to specify an older version of the runner.\\n  // If this is the zero address, the most current version of the runner will be used.\\n  // If a non-zero address is specified, it must be a whitelisted address of a previous WorkflowRunner contract.\\n  address workflowRunnerAddress;\\n  // The nodes in the directed graph of steps.\\n  // The start step is defined to be at index 0.\\n  // The 'edges' in the graph are defined within each WorkflowStep,\\n  // but can be overriden in the return value of a step.\\n  WorkflowStep[] steps;\\n}\\n\",\"keccak256\":\"0x072a08c653c65ca63534905aabbffe989c8749cefb2ef7d8cd9c12e0d92094af\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/WorkflowStep.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./WorkflowStepInputAsset.sol\\\";\\n\\n// Parameters for a workflow step\\nstruct WorkflowStep {\\n    // The logical identifer of the step (e.g., 10 represents WrapEtherStep).\\n    uint16 stepTypeId;\\n    // The contract address of a specific version of the action.\\n    // Individual step contracts may be upgraded over time, and this allows\\n    // workflows 'freeze' the version of contract for this step\\n    // A value of address(0) means use the latest and greatest version  of\\n    // this step based only on stepTypeId.\\n    address stepAddress;\\n    // The input assets to this step.\\n    WorkflowStepInputAsset[] inputAssets;\\n    // Additional step-specific parameters for this step, typically serialized in standard abi encoding.\\n    bytes argData;\\n    // The index of the next step in the directed graph of steps. (see the Workflow.steps array)\\n    int16 nextStepIndex;\\n}\\n\",\"keccak256\":\"0x6441da101e655b2593b54896d8698dad0efe3458e2ec5a28db65f264913d12c0\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/WorkflowStepInputAsset.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './Asset.sol';\\n\\n// an input asset to a WorkflowStep\\nstruct WorkflowStepInputAsset {\\n  // if true, the source of the asset is the caller of the workflow, otherwise it is the output of some previous step\\n  bool sourceIsCaller;\\n  // if true 'amount' is treated as a percent, with 4 decimals of precision (1000000 represents 100%)\\n  bool amountIsPercent;\\n  // the input asset\\n  Asset asset;\\n  // the amount of the input asset\\n  uint256 amount;\\n}\\n\",\"keccak256\":\"0x2a478c09e1deb0268eba6ba5f3721d2e2a4b666b9f0735cfa0735dc9ebe70c4b\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/WorkflowStepResult.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './AssetAmount.sol';\\n\\n// The return value from the execution of a step.\\nstruct WorkflowStepResult {\\n  // The amounts of each input asset that resulted from the step execution.\\n  AssetAmount[] inputAssetAmounts;\\n  // The amounts of each output asset that resulted from the step execution.\\n  AssetAmount[] outputAssetAmounts;\\n  // The index of the next step in a workflow.\\n  // This value allows the step to override the default nextStepIndex\\n  // statically defined\\n  // -1 means terminate the workflow\\n  // -2 means do not override the statically defined nextStepIndex in WorkflowStep\\n  int16 nextStepIndex;\\n  // the fee to be withheald out of the output assets (in decibips)\\n  // -1 means use the default fee\\n  int24 fee;\\n}\\n\",\"keccak256\":\"0xfc2e23b8851d12ef7cc6f72414af0fafacda3ffe04656f396e837ffa6d2e21ee\",\"license\":\"MIT\"},\"@freemarket/step-sdk/contracts/LibActionHelpers.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport '@freemarket/core/contracts/model/AssetType.sol';\\nimport '@freemarket/core/contracts/model/WorkflowStepResult.sol';\\n\\nlibrary LibActionHelpers {\\n  function singleAssetResult(AssetType assetType, address assetAddress, uint256 amount) internal pure returns (WorkflowStepResult memory) {\\n    Asset memory asset = Asset(assetType, assetAddress);\\n    AssetAmount[] memory ouputAssetAmounts = new AssetAmount[](1);\\n    ouputAssetAmounts[0] = AssetAmount(asset, amount);\\n    return WorkflowStepResult(new AssetAmount[](0), ouputAssetAmounts, -2, -1);\\n  }\\n\\n  function singleTokenResult(address assetAddress, uint256 amount) internal pure returns (WorkflowStepResult memory) {\\n    return singleAssetResult(AssetType.ERC20, assetAddress, amount);\\n  }\\n\\n  function noOutputAssetsResult() internal pure returns (WorkflowStepResult memory) {\\n    return singleAssetResult(AssetType.Native, address(0), 0);\\n  }\\n}\\n\",\"keccak256\":\"0x3017f42ec45c2ee13e81220ac9833f47456f6ee9002fbefd9fdb12055ad7e863\",\"license\":\"MIT\"},\"@freemarket/step-sdk/contracts/LibStepResultBuilder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport '@freemarket/core/contracts/model/AssetType.sol';\\nimport '@freemarket/core/contracts/model/WorkflowStepResult.sol';\\n\\nstruct StepResultBuilder {\\n  uint256 inputIndex;\\n  uint256 outputIndex;\\n  WorkflowStepResult result;\\n}\\n\\nlibrary LibStepResultBuilder {\\n  function create(uint256 inputAssetCount, uint256 outputAssetCount) internal pure returns (StepResultBuilder memory) {\\n    AssetAmount[] memory inputAssetAmounts = new AssetAmount[](inputAssetCount);\\n    AssetAmount[] memory ouputAssetAmounts = new AssetAmount[](outputAssetCount);\\n    return StepResultBuilder(0, 0, WorkflowStepResult(inputAssetAmounts, ouputAssetAmounts, -2, -1));\\n  }\\n\\n  function addInputToken(\\n    StepResultBuilder memory builder,\\n    address tokenAddress,\\n    uint256 amount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.inputAssetAmounts[builder.inputIndex++] = AssetAmount(Asset(AssetType.ERC20, tokenAddress), amount);\\n    return builder;\\n  }\\n\\n  function addInputAssetAmount(\\n    StepResultBuilder memory builder,\\n    AssetAmount memory assetAmount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.inputAssetAmounts[builder.inputIndex++] = assetAmount;\\n    return builder;\\n  }\\n\\n  function addOutputToken(\\n    StepResultBuilder memory builder,\\n    address tokenAddress,\\n    uint256 amount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.outputAssetAmounts[builder.outputIndex++] = AssetAmount(Asset(AssetType.ERC20, tokenAddress), amount);\\n    return builder;\\n  }\\n\\n  function addInputNative(StepResultBuilder memory builder, uint256 amount) internal pure returns (StepResultBuilder memory) {\\n    builder.result.inputAssetAmounts[builder.inputIndex++] = AssetAmount(Asset(AssetType.Native, address(0)), amount);\\n    return builder;\\n  }\\n\\n  function addOutputNative(StepResultBuilder memory builder, uint256 amount) internal pure returns (StepResultBuilder memory) {\\n    builder.result.outputAssetAmounts[builder.outputIndex++] = AssetAmount(Asset(AssetType.Native, address(0)), amount);\\n    return builder;\\n  }\\n\\n  function addOutputAssetAmount(\\n    StepResultBuilder memory builder,\\n    AssetAmount memory assetAmount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.outputAssetAmounts[builder.outputIndex++] = assetAmount;\\n    return builder;\\n  }\\n\\n  function setNextStepIndex(StepResultBuilder memory builder, int16 nextStepIndex) internal pure returns (StepResultBuilder memory) {\\n    builder.result.nextStepIndex = nextStepIndex;\\n    return builder;\\n  }\\n\\n  function setFee(StepResultBuilder memory builder, int24 feeInDeciBips) internal pure returns (StepResultBuilder memory) {\\n    builder.result.fee = feeInDeciBips;\\n    return builder;\\n  }\\n}\\n\",\"keccak256\":\"0xabc9d9235341ee0c69e8834cd227646063bfb6961f4fb509901537076b0e7589\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/IStargateReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.13;\\n\\ninterface IStargateReceiver {\\n  function sgReceive(\\n    uint16 _srcChainId, // the remote chainId sending the tokens\\n    bytes memory _srcAddress, // the remote Bridge address\\n    uint256 _nonce,\\n    address _token, // the token contract on the local chain\\n    uint256 amountLD, // the qty of local _token contract tokens\\n    bytes memory payload\\n  ) external;\\n}\\n\",\"keccak256\":\"0x26033fad335fad67a88b8f1d3d761b595ff882ba513cf759926d4c2fab2ef4b4\",\"license\":\"BUSL-1.1\"},\"contracts/IStargateRouter.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.13;\\n\\n// abicoder v2 is enabled by default: https://docs.soliditylang.org/en/v0.8.0/080-breaking-changes.html\\n// pragma abicoder v2;\\n\\ninterface IStargateRouter {\\n  function factory() external view returns (address);\\n\\n  struct lzTxObj {\\n    uint256 dstGasForCall;\\n    uint256 dstNativeAmount;\\n    bytes dstNativeAddr;\\n  }\\n\\n  function addLiquidity(\\n    uint256 _poolId,\\n    uint256 _amountLD,\\n    address _to\\n  ) external;\\n\\n  function swap(\\n    uint16 _dstChainId,\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    address payable _refundAddress,\\n    uint256 _amountLD,\\n    uint256 _minAmountLD,\\n    lzTxObj memory _lzTxParams,\\n    bytes calldata _to,\\n    bytes calldata _payload\\n  ) external payable;\\n\\n  function redeemRemote(\\n    uint16 _dstChainId,\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    address payable _refundAddress,\\n    uint256 _amountLP,\\n    uint256 _minAmountLD,\\n    bytes calldata _to,\\n    lzTxObj memory _lzTxParams\\n  ) external payable;\\n\\n  function instantRedeemLocal(\\n    uint16 _srcPoolId,\\n    uint256 _amountLP,\\n    address _to\\n  ) external returns (uint256);\\n\\n  function redeemLocal(\\n    uint16 _dstChainId,\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    address payable _refundAddress,\\n    uint256 _amountLP,\\n    bytes calldata _to,\\n    lzTxObj memory _lzTxParams\\n  ) external payable;\\n\\n  function sendCredits(\\n    uint16 _dstChainId,\\n    uint256 _srcPoolId,\\n    uint256 _dstPoolId,\\n    address payable _refundAddress\\n  ) external payable;\\n\\n  function quoteLayerZeroFee(\\n    uint16 _dstChainId,\\n    uint8 _functionType,\\n    bytes calldata _toAddress,\\n    bytes calldata _transferAndCallPayload,\\n    lzTxObj memory _lzTxParams\\n  ) external view returns (uint256, uint256);\\n}\\n\",\"keccak256\":\"0xb2cc74a6db000da1443cc79d48c843f57e233a4dfd542bbce3a43748fffae32a\",\"license\":\"BUSL-1.1\"},\"contracts/StargateBridgeAction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './WorkflowContinuingStep.sol';\\nimport '@freemarket/core/contracts/model/Asset.sol';\\nimport '@freemarket/core/contracts/model/AssetAmount.sol';\\nimport '@freemarket/core/contracts/model/BridgePayload.sol';\\nimport '@freemarket/core/contracts/IWorkflowRunner.sol';\\nimport '@freemarket/step-sdk/contracts/LibActionHelpers.sol';\\nimport './IStargateRouter.sol';\\nimport './IStargateReceiver.sol';\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\\nimport '@freemarket/step-sdk/contracts/LibStepResultBuilder.sol';\\n\\nusing LibStepResultBuilder for StepResultBuilder;\\n\\n// StargateBridgeAction specific arguments\\nstruct StargateBridgeActionArgs {\\n  //  addr of the StargateSwapAction on the target chain.\\n  address dstActionAddress;\\n  // addr of the user (caller on the source chain)\\n  address dstUserAddress;\\n  // stargate destination chain\\n  uint16 dstChainId;\\n  // stargate source pool (implies source asset)\\n  uint256 srcPoolId;\\n  // stargate destination pool (implies destination asset)\\n  uint256 dstPoolId;\\n  // gas to execute workflow continuation on destination chain\\n  uint256 dstGasForCall;\\n  // amount of native asset to send to dstUserAddress\\n  uint256 dstNativeAmount;\\n  // minimum amount of output asset (else the tx on the source chain will revert)\\n  uint256 minAmountOut;\\n  // if true, minAmountOut passed to stargate\\n  bool minAmountOutIsPercent;\\n  // the abi-encoded workflow that will execute on the destination chain\\n  bytes continuationWorkflow;\\n  // the value used to correlate the source chain transaction with the target chain transaction\\n  uint256 nonce;\\n  // whether the continuation workflow should be included in the event\\n  bool includeContinuationWorkflowInEvent;\\n}\\n\\ncontract StargateBridgeAction is WorkflowContinuingStep, IStargateReceiver {\\n  address public immutable frontDoorAddress;\\n  address public immutable stargateRouterAddress;\\n\\n  /// @notice This event is emitted on the destination chain when Stargate invokes our sgReceive method\\n  /// @param tokenAddress the address of the erc20 that was transfered from the source chain to this chain.abi\\n  /// @param bridgePayload the payload that was sent along with the erc20.\\n  event SgReceiveCalled(address tokenAddress, uint256 amount, BridgePayload bridgePayload);\\n\\n  event StargateBridgeParamsEvent(\\n    uint256 nativeAmount,\\n    uint256 assetAmount,\\n    address dstActionAddress,\\n    uint16 dstChainId,\\n    uint256 srcPoolId,\\n    uint256 dstPoolId,\\n    uint256 dstGasForCall,\\n    uint256 dstNativeAmount,\\n    uint256 minAmountOut,\\n    bytes continuationWorkflow\\n  );\\n\\n  constructor(address _frontDoorAddress, address _stargateRouterAddress) {\\n    frontDoorAddress = _frontDoorAddress;\\n    stargateRouterAddress = _stargateRouterAddress;\\n  }\\n\\n  //  need to gather things up into a struct to prevent 'Stack too deep'\\n  struct Locals {\\n    uint256 lengthPrefix;\\n    StargateBridgeActionArgs args;\\n    bytes dstActionAddressEncoded;\\n    uint256 minAmountOut;\\n    AssetAmount nativeInputAsset;\\n    AssetAmount erc20InputAsset;\\n  }\\n\\n  function execute(AssetAmount[] calldata inputAssetAmounts, bytes calldata argData) public payable returns (WorkflowStepResult memory) {\\n    Locals memory locals;\\n    require(inputAssetAmounts.length == 2, 'there must be 2 input assets');\\n    if (inputAssetAmounts[0].asset.assetType == AssetType.Native) {\\n      require(inputAssetAmounts[1].asset.assetType == AssetType.ERC20, 'one input asset must be an ERC20');\\n      locals.nativeInputAsset = inputAssetAmounts[0];\\n      locals.erc20InputAsset = inputAssetAmounts[1];\\n    } else if (inputAssetAmounts[1].asset.assetType == AssetType.Native) {\\n      require(inputAssetAmounts[0].asset.assetType == AssetType.ERC20, 'one input asset must be an ERC20');\\n      locals.nativeInputAsset = inputAssetAmounts[1];\\n      locals.erc20InputAsset = inputAssetAmounts[0];\\n    } else {\\n      revert('one input asset must be native');\\n    }\\n    require(\\n      inputAssetAmounts[0].asset.assetType == AssetType.ERC20 || inputAssetAmounts[0].asset.assetType == AssetType.Native,\\n      'the input asset must be an ERC20 or Native'\\n    );\\n\\n    // approve sg to take the token\\n    if (inputAssetAmounts[0].asset.assetType == AssetType.ERC20) {\\n      approveErc20(inputAssetAmounts[0].asset.assetAddress, inputAssetAmounts[0].amount);\\n    }\\n\\n    locals.args = abi.decode(argData, (StargateBridgeActionArgs));\\n\\n    // address payable refundAddress = payable(msg.sender);\\n    locals.dstActionAddressEncoded = abi.encodePacked(locals.args.dstActionAddress);\\n    if (locals.args.minAmountOutIsPercent) {\\n      locals.minAmountOut = (inputAssetAmounts[0].amount * locals.args.minAmountOut) / 100_000;\\n    } else {\\n      locals.minAmountOut = locals.args.minAmountOut;\\n    }\\n\\n    emit StargateBridgeParamsEvent(\\n      locals.nativeInputAsset.amount, // native amount\\n      locals.erc20InputAsset.amount, // token amount\\n      locals.args.dstActionAddress, // dest addr for money and sgReceive\\n      locals.args.dstChainId,\\n      locals.args.srcPoolId,\\n      locals.args.dstPoolId,\\n      locals.args.dstGasForCall,\\n      locals.args.dstNativeAmount,\\n      locals.minAmountOut,\\n      locals.args.continuationWorkflow\\n    );\\n\\n    IStargateRouter(stargateRouterAddress).swap{value: locals.nativeInputAsset.amount}(\\n      locals.args.dstChainId,\\n      locals.args.srcPoolId,\\n      locals.args.dstPoolId,\\n      payable(msg.sender), // refundAddreess\\n      locals.erc20InputAsset.amount,\\n      locals.minAmountOut,\\n      IStargateRouter.lzTxObj(locals.args.dstGasForCall, locals.args.dstNativeAmount, abi.encodePacked(locals.args.dstUserAddress)),\\n      locals.dstActionAddressEncoded,\\n      locals.args.continuationWorkflow\\n    );\\n    if (locals.args.continuationWorkflow.length > 0) {\\n      AssetAmount[] memory expectedAssets = new AssetAmount[](1);\\n      expectedAssets[0] = locals.erc20InputAsset;\\n      expectedAssets[0].amount = locals.minAmountOut;\\n      bytes memory continuationFlow = locals.args.includeContinuationWorkflowInEvent ? locals.args.continuationWorkflow : new bytes(0);\\n      emit WorkflowBridged('stargate-bridge', locals.args.dstChainId, locals.args.nonce, expectedAssets, continuationFlow);\\n    }\\n\\n    return WorkflowStepResult(inputAssetAmounts, new AssetAmount[](0), -2, -1);\\n  }\\n\\n  function approveErc20(address tokenAddress, uint256 amount) internal {\\n    IERC20 inputToken = IERC20(tokenAddress);\\n    inputToken.approve(stargateRouterAddress, amount);\\n  }\\n\\n  function sgReceive(\\n    uint16, // the remote chainId sending the tokens\\n    bytes memory, // the remote Bridge address\\n    uint256, // stargate nonce, use unknown\\n    address tokenAddress, // the token contract on the local chain\\n    uint256 amount, // the qty of local token contract tokens\\n    bytes memory payload\\n  ) external {\\n    require(msg.sender == stargateRouterAddress, 'only Stargate is permitted to call sgReceive');\\n    BridgePayload memory bridgePayload = abi.decode(payload, (BridgePayload));\\n    emit SgReceiveCalled(tokenAddress, amount, bridgePayload);\\n\\n    IERC20 startingToken = IERC20(tokenAddress);\\n    SafeERC20.safeIncreaseAllowance(startingToken, frontDoorAddress, amount);\\n\\n    AssetAmount[] memory startingAssets = new AssetAmount[](1);\\n    startingAssets[0] = AssetAmount(Asset(AssetType.ERC20, tokenAddress), amount);\\n    IWorkflowRunner runner = IWorkflowRunner(frontDoorAddress);\\n    // TODO set value when the bridged asset is native\\n    try runner.continueWorkflow(bridgePayload.userAddress, bridgePayload.nonce, bridgePayload.workflow, startingAssets) {\\n      // if the workflow succeeds, we're done\\n    } catch {\\n      // if the workflow fails, we need to return the tokens to the user\\n      SafeERC20.safeTransfer(startingToken, bridgePayload.userAddress, amount);\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xdf1eaba38033998ddf2b2fa19d0a2b6863588bb2e04b27c9518c93dcc6817da7\",\"license\":\"MIT\"},\"contracts/WorkflowContinuingStep.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport '@freemarket/core/contracts/IWorkflowStep.sol';\\n\\nabstract contract WorkflowContinuingStep is IWorkflowStep {\\n  event WorkflowBridged(string stepType, uint16 targetChain, uint256 nonce, AssetAmount[] expectedAssets, bytes continuationWorkflow);\\n}\\n\",\"keccak256\":\"0x79ac1f05d595deae9fbfccc591fb2342b2a1d1e4af57676ebd67894cc7195460\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"SgReceiveCalled(address,uint256,(address,uint256,(address,(uint16,address,(bool,bool,(uint8,address),uint256)[],bytes,int16)[])))":{"notice":"This event is emitted on the destination chain when Stargate invokes our sgReceive method"}},"kind":"user","methods":{},"version":1}}},"contracts/WorkflowContinuingStep.sol":{"WorkflowContinuingStep":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"stepType","type":"string"},{"indexed":false,"internalType":"uint16","name":"targetChain","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"components":[{"components":[{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"}],"internalType":"struct Asset","name":"asset","type":"tuple"},{"internalType":"uint256","name":"amount","type":"uint256"}],"indexed":false,"internalType":"struct AssetAmount[]","name":"expectedAssets","type":"tuple[]"},{"indexed":false,"internalType":"bytes","name":"continuationWorkflow","type":"bytes"}],"name":"WorkflowBridged","type":"event"},{"inputs":[{"components":[{"components":[{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"}],"internalType":"struct Asset","name":"asset","type":"tuple"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct AssetAmount[]","name":"assetAmounts","type":"tuple[]"},{"internalType":"bytes","name":"argData","type":"bytes"}],"name":"execute","outputs":[{"components":[{"components":[{"components":[{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"}],"internalType":"struct Asset","name":"asset","type":"tuple"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct AssetAmount[]","name":"inputAssetAmounts","type":"tuple[]"},{"components":[{"components":[{"internalType":"enum AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"assetAddress","type":"address"}],"internalType":"struct Asset","name":"asset","type":"tuple"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct AssetAmount[]","name":"outputAssetAmounts","type":"tuple[]"},{"internalType":"int16","name":"nextStepIndex","type":"int16"},{"internalType":"int24","name":"fee","type":"int24"}],"internalType":"struct WorkflowStepResult","name":"","type":"tuple"}],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{"execute(((uint8,address),uint256)[],bytes)":{"params":{"argData":"Step specific arguments in ABI encoding","assetAmounts":"AssetAmounts to be used by the step"},"returns":{"_0":"the outcome of the step invocation"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"execute(((uint8,address),uint256)[],bytes)":"7bb26ca7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stepType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct AssetAmount[]\",\"name\":\"expectedAssets\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"continuationWorkflow\",\"type\":\"bytes\"}],\"name\":\"WorkflowBridged\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"assetAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"argData\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"inputAssetAmounts\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"outputAssetAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"int16\",\"name\":\"nextStepIndex\",\"type\":\"int16\"},{\"internalType\":\"int24\",\"name\":\"fee\",\"type\":\"int24\"}],\"internalType\":\"struct WorkflowStepResult\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execute(((uint8,address),uint256)[],bytes)\":{\"params\":{\"argData\":\"Step specific arguments in ABI encoding\",\"assetAmounts\":\"AssetAmounts to be used by the step\"},\"returns\":{\"_0\":\"the outcome of the step invocation\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute(((uint8,address),uint256)[],bytes)\":{\"notice\":\"called by WorkflowRunner to execute a workflow step.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WorkflowContinuingStep.sol\":\"WorkflowContinuingStep\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@freemarket/core/contracts/IWorkflowStep.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./model/Asset.sol\\\";\\nimport \\\"./model/AssetAmount.sol\\\";\\nimport \\\"./model/WorkflowStepResult.sol\\\";\\n\\n/// @title The interface between WorkflowRunner and each Step implementation.abi\\n/// @author Marty Saxton\\n/// @notice All steps must implement this interface.\\ninterface IWorkflowStep {\\n    /// @notice called by WorkflowRunner to execute a workflow step.\\n    /// @param assetAmounts AssetAmounts to be used by the step\\n    /// @param argData Step specific arguments in ABI encoding\\n    /// @return the outcome of the step invocation\\n    function execute(AssetAmount[] calldata assetAmounts, bytes calldata argData)\\n        external\\n        payable\\n        returns (WorkflowStepResult memory);\\n}\\n\",\"keccak256\":\"0xce8590c782238edd5fa7293798bc02411f7b408ad4caeaaab2ac052e97ab1cdf\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/Asset.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./AssetType.sol\\\";\\n\\nstruct Asset {\\n    AssetType assetType;\\n    address assetAddress; // 0x0 for ETH, the ERC20 address.  If it's an account balance, this could represent the token of the account\\n}\\n\",\"keccak256\":\"0x2031c32d59aa2c1c6081156d4d06c9c6aff579a0b8f5d2f81ad86ff503e9e8a8\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetAmount.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './Asset.sol';\\n\\nstruct AssetAmount {\\n  Asset asset;\\n  uint256 amount;\\n}\\n\",\"keccak256\":\"0x4f57b823b38d6e8727dfa94708f63573854b74e44553f6f609bca64cc718ff0e\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetType.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nenum AssetType {\\n    Native,\\n    ERC20,\\n    ERC721\\n}\\n\",\"keccak256\":\"0xb9592fa2334517b52dae64c34f0254b4d75b20b60da00c5fc5c6e0316487e963\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/WorkflowStepResult.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './AssetAmount.sol';\\n\\n// The return value from the execution of a step.\\nstruct WorkflowStepResult {\\n  // The amounts of each input asset that resulted from the step execution.\\n  AssetAmount[] inputAssetAmounts;\\n  // The amounts of each output asset that resulted from the step execution.\\n  AssetAmount[] outputAssetAmounts;\\n  // The index of the next step in a workflow.\\n  // This value allows the step to override the default nextStepIndex\\n  // statically defined\\n  // -1 means terminate the workflow\\n  // -2 means do not override the statically defined nextStepIndex in WorkflowStep\\n  int16 nextStepIndex;\\n  // the fee to be withheald out of the output assets (in decibips)\\n  // -1 means use the default fee\\n  int24 fee;\\n}\\n\",\"keccak256\":\"0xfc2e23b8851d12ef7cc6f72414af0fafacda3ffe04656f396e837ffa6d2e21ee\",\"license\":\"MIT\"},\"contracts/WorkflowContinuingStep.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport '@freemarket/core/contracts/IWorkflowStep.sol';\\n\\nabstract contract WorkflowContinuingStep is IWorkflowStep {\\n  event WorkflowBridged(string stepType, uint16 targetChain, uint256 nonce, AssetAmount[] expectedAssets, bytes continuationWorkflow);\\n}\\n\",\"keccak256\":\"0x79ac1f05d595deae9fbfccc591fb2342b2a1d1e4af57676ebd67894cc7195460\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"execute(((uint8,address),uint256)[],bytes)":{"notice":"called by WorkflowRunner to execute a workflow step."}},"version":1}}}}}}