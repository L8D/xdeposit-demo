{
  "address": "0x22b1c5C2C9251622f7eFb76E356104E5aF0e996A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wrappedEtherContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "thisAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "NativeWrapped",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "contractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum AssetType",
                  "name": "assetType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Asset",
              "name": "asset",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct AssetAmount[]",
          "name": "inputAssetAmounts",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "enum AssetType",
                      "name": "assetType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetAddress",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct Asset",
                  "name": "asset",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct AssetAmount[]",
              "name": "inputAssetAmounts",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "enum AssetType",
                      "name": "assetType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetAddress",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct Asset",
                  "name": "asset",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct AssetAmount[]",
              "name": "outputAssetAmounts",
              "type": "tuple[]"
            },
            {
              "internalType": "int16",
              "name": "nextStepIndex",
              "type": "int16"
            }
          ],
          "internalType": "struct WorkflowStepResult",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x176e0a1d20458f6250773bcda62befb525eee98fc2b2ddba775209b7c516563a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x22b1c5C2C9251622f7eFb76E356104E5aF0e996A",
    "transactionIndex": 0,
    "gasUsed": "705833",
    "logsBloom": "0x
    "blockHash": "0xaaf0416474e21e15bd3ad3601ce0c21e35f177ac526f1c038c2dda4f282bed92",
    "transactionHash": "0x176e0a1d20458f6250773bcda62befb525eee98fc2b2ddba775209b7c516563a",
    "logs": [],
    "blockNumber": 16889316,
    "cumulativeGasUsed": "705833",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
  ],
  "numDeployments": 1,
  "solcInputHash": "c6a2441060e144dc850f19f7fa68c943",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wrappedEtherContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"thisAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeWrapped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"inputAssetAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"inputAssetAmounts\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"outputAssetAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"int16\",\"name\":\"nextStepIndex\",\"type\":\"int16\"}],\"internalType\":\"struct WorkflowStepResult\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WrapNativeAction.sol\":\"WrapNativeAction\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@freemarket/core/contracts/IWorkflowStep.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./model/Asset.sol\\\";\\nimport \\\"./model/AssetAmount.sol\\\";\\nimport \\\"./model/WorkflowStepResult.sol\\\";\\n\\n/// @title The interface between WorkflowRunner and each Step implementation.abi\\n/// @author Marty Saxton\\n/// @notice All steps must implement this interface.\\ninterface IWorkflowStep {\\n    /// @notice called by WorkflowRunner to execute a workflow step.\\n    /// @param assetAmounts AssetAmounts to be used by the step\\n    /// @param argData Step specific arguments in ABI encoding\\n    /// @return the outcome of the step invocation\\n    function execute(AssetAmount[] calldata assetAmounts, bytes calldata argData)\\n        external\\n        payable\\n        returns (WorkflowStepResult memory);\\n}\\n\",\"keccak256\":\"0xce8590c782238edd5fa7293798bc02411f7b408ad4caeaaab2ac052e97ab1cdf\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/Asset.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./AssetType.sol\\\";\\n\\nstruct Asset {\\n    AssetType assetType;\\n    address assetAddress; // 0x0 for ETH, the ERC20 address.  If it's an account balance, this could represent the token of the account\\n}\\n\",\"keccak256\":\"0x2031c32d59aa2c1c6081156d4d06c9c6aff579a0b8f5d2f81ad86ff503e9e8a8\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetAmount.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './Asset.sol';\\n\\nstruct AssetAmount {\\n  Asset asset;\\n  uint256 amount;\\n}\\n\",\"keccak256\":\"0x4f57b823b38d6e8727dfa94708f63573854b74e44553f6f609bca64cc718ff0e\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetType.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nenum AssetType {\\n    Native,\\n    ERC20,\\n    ERC721\\n}\\n\",\"keccak256\":\"0xb9592fa2334517b52dae64c34f0254b4d75b20b60da00c5fc5c6e0316487e963\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/WorkflowStepResult.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./AssetAmount.sol\\\";\\n\\n// The return value from the execution of a step.\\nstruct WorkflowStepResult {\\n    // The amounts of each input asset that resulted from the step execution.\\n    AssetAmount[] inputAssetAmounts;\\n    // The amounts of each output asset that resulted from the step execution.\\n    AssetAmount[] outputAssetAmounts;\\n    // The index of the next step in a workflow.\\n    // This value allows the step to override the default nextStepIndex\\n    // statically defined\\n    // -1 means terminate the workflow\\n    // -2 means do not override the statically defined nextStepIndex in WorkflowStep\\n    int16 nextStepIndex;\\n}\\n\",\"keccak256\":\"0xf533dd649e5cc237552e8f6054ad120d92cea47e3ad5970cfdacef901414624f\",\"license\":\"MIT\"},\"@freemarket/step-sdk/contracts/LibActionHelpers.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"@freemarket/core/contracts/model/AssetType.sol\\\";\\nimport \\\"@freemarket/core/contracts/model/WorkflowStepResult.sol\\\";\\n\\nlibrary LibActionHelpers {\\n    function singleAssetResult(AssetType assetType, address assetAddress, uint256 amount)\\n        internal\\n        pure\\n        returns (WorkflowStepResult memory)\\n    {\\n        Asset memory asset = Asset(assetType, assetAddress);\\n        AssetAmount[] memory ouputAssetAmounts = new AssetAmount[](1);\\n        ouputAssetAmounts[0] = AssetAmount(asset, amount);\\n        return WorkflowStepResult(new AssetAmount[](0), ouputAssetAmounts, -2);\\n    }\\n\\n    function singleTokenResult(address assetAddress, uint256 amount)\\n        internal\\n        pure\\n        returns (WorkflowStepResult memory)\\n    {\\n        return singleAssetResult(AssetType.ERC20, assetAddress, amount);\\n    }\\n\\n    function noOutputAssetsResult() internal pure returns (WorkflowStepResult memory) {\\n        return singleAssetResult(AssetType.Native, address(0), 0);\\n    }\\n}\\n\",\"keccak256\":\"0x70d61ca9349780d000babacf0153f0d8a94e27cd153403e26cbf639a73e10b29\",\"license\":\"MIT\"},\"@freemarket/step-sdk/contracts/LibStepResultBuilder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"@freemarket/core/contracts/model/AssetType.sol\\\";\\nimport \\\"@freemarket/core/contracts/model/WorkflowStepResult.sol\\\";\\n\\nstruct StepResultBuilder {\\n    uint256 inputIndex;\\n    uint256 outputIndex;\\n    WorkflowStepResult result;\\n}\\n\\nlibrary LibStepResultBuilder {\\n    function create(uint256 inputAssetCount, uint256 outputAssetCount)\\n        internal\\n        pure\\n        returns (StepResultBuilder memory)\\n    {\\n        AssetAmount[] memory inputAssetAmounts = new AssetAmount[](inputAssetCount);\\n        AssetAmount[] memory ouputAssetAmounts = new AssetAmount[](outputAssetCount);\\n        return StepResultBuilder(0, 0, WorkflowStepResult(inputAssetAmounts, ouputAssetAmounts, -2));\\n    }\\n\\n    function addInputToken(StepResultBuilder memory builder, address tokenAddress, uint256 amount)\\n        internal\\n        pure\\n        returns (StepResultBuilder memory)\\n    {\\n        builder.result.inputAssetAmounts[builder.inputIndex++] =\\n            AssetAmount(Asset(AssetType.ERC20, tokenAddress), amount);\\n        return builder;\\n    }\\n\\n    function addInputAssetAmount(StepResultBuilder memory builder, AssetAmount memory assetAmount)\\n        internal\\n        pure\\n        returns (StepResultBuilder memory)\\n    {\\n        builder.result.inputAssetAmounts[builder.inputIndex++] = assetAmount;\\n        return builder;\\n    }\\n\\n    function addOutputToken(StepResultBuilder memory builder, address tokenAddress, uint256 amount)\\n        internal\\n        pure\\n        returns (StepResultBuilder memory)\\n    {\\n        builder.result.outputAssetAmounts[builder.outputIndex++] =\\n            AssetAmount(Asset(AssetType.ERC20, tokenAddress), amount);\\n        return builder;\\n    }\\n\\n    function addInputNative(StepResultBuilder memory builder, uint256 amount)\\n        internal\\n        pure\\n        returns (StepResultBuilder memory)\\n    {\\n        builder.result.inputAssetAmounts[builder.inputIndex++] = AssetAmount(Asset(AssetType.ERC20, address(0)), amount);\\n        return builder;\\n    }\\n\\n    function addOutputNative(StepResultBuilder memory builder, uint256 amount)\\n        internal\\n        pure\\n        returns (StepResultBuilder memory)\\n    {\\n        builder.result.outputAssetAmounts[builder.outputIndex++] =\\n            AssetAmount(Asset(AssetType.ERC20, address(0)), amount);\\n        return builder;\\n    }\\n\\n    function addOutputAssetAmount(StepResultBuilder memory builder, AssetAmount memory assetAmount)\\n        internal\\n        pure\\n        returns (StepResultBuilder memory)\\n    {\\n        builder.result.outputAssetAmounts[builder.outputIndex++] = assetAmount;\\n        return builder;\\n    }\\n\\n    function setNextStepIndex(StepResultBuilder memory builder, int16 nextStepIndex)\\n        internal\\n        pure\\n        returns (StepResultBuilder memory)\\n    {\\n        builder.result.nextStepIndex = nextStepIndex;\\n        return builder;\\n    }\\n}\\n\",\"keccak256\":\"0xbf7e5a6c06d4a71832bd5ac7f456bdb30fc3d3330cb1d88fe5eec6d6d714b83f\",\"license\":\"MIT\"},\"contracts/Weth.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.13;\\n\\ninterface Weth {\\n    function name() external view returns (string memory);\\n\\n    function approve(address guy, uint256 wad) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function transferFrom(address src, address dst, uint256 wad) external returns (bool);\\n\\n    function withdraw(uint256 wad) external;\\n\\n    function decimals() external view returns (uint8);\\n\\n    function balanceOf(address) external view returns (uint256);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function transfer(address dst, uint256 wad) external returns (bool);\\n\\n    function deposit() external payable;\\n\\n    function allowance(address, address) external view returns (uint256);\\n\\n    // fallback() external payable;\\n\\n    event Approval(address indexed src, address indexed guy, uint256 wad);\\n    event Transfer(address indexed src, address indexed dst, uint256 wad);\\n    event Deposit(address indexed dst, uint256 wad);\\n    event Withdrawal(address indexed src, uint256 wad);\\n}\\n\",\"keccak256\":\"0x03307f9d9e5917620a9c13f9d8ba15a0f9ec1cc446332283c12f672a5ec48a9c\",\"license\":\"UNLICENSED\"},\"contracts/WrapNativeAction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"@freemarket/core/contracts/IWorkflowStep.sol\\\";\\nimport \\\"@freemarket/step-sdk/contracts/LibStepResultBuilder.sol\\\";\\nimport \\\"@freemarket/step-sdk/contracts/LibActionHelpers.sol\\\";\\nimport \\\"./Weth.sol\\\";\\n\\n\\nusing LibStepResultBuilder for StepResultBuilder;\\n\\ncontract WrapNativeAction is IWorkflowStep {\\n    address public immutable contractAddress;\\n\\n    event NativeWrapped(address thisAddr, uint256 amount);\\n\\n    constructor(address wrappedEtherContractAddress) {\\n        contractAddress = wrappedEtherContractAddress;\\n    }\\n\\n    function execute(AssetAmount[] calldata inputAssetAmounts, bytes calldata)\\n        external\\n        payable\\n        returns (WorkflowStepResult memory)\\n    {\\n        require(inputAssetAmounts.length == 1);\\n\\n        uint256 amount = inputAssetAmounts[0].amount;\\n        emit NativeWrapped(address(this), amount);\\n        Weth weth = Weth(contractAddress);\\n        weth.deposit{value: amount}();\\n\\n        WorkflowStepResult memory rv = LibStepResultBuilder.create(1, 1).addInputAssetAmount(inputAssetAmounts[0])\\n            .addOutputToken(contractAddress, amount).result;\\n\\n\\n        return rv;\\n    }\\n}\\n\",\"keccak256\":\"0x591ae9bfb593629da3ef6bdd660f26c1672d8ab1f9b58ea2f72898763878a119\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610cea380380610cea833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b608051610bc5610125600039600081816101000152818161018901526102140152610bc56000f3fe6080604052600436106100295760003560e01c80637bb26ca71461002e578063f6b4dfb41461005e575b600080fd5b610048600480360381019061004391906105b8565b610089565b604051610055919061088a565b60405180910390f35b34801561006a57600080fd5b50610073610212565b60405161008091906108bb565b60405180910390f35b61009161043c565b600185859050146100a157600080fd5b6000858560008181106100b7576100b66108d6565b5b9050606002016040013590507f2c58f4d3d48c3b93bf8f7fd23f32658ccb97894f02022d2189ffa9903d37bfb830826040516100f4929190610914565b60405180910390a160007f000000000000000000000000000000000000000000000000000000000000000090508073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561016957600080fd5b505af115801561017d573d6000803e3d6000fd5b505050505060006101fe7f0000000000000000000000000000000000000000000000000000000000000000846101ef8b8b60008181106101c0576101bf6108d6565b5b9050606002018036038101906101d69190610aeb565b6101e1600180610236565b61035290919063ffffffff16565b61039e9092919063ffffffff16565b604001519050809350505050949350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61023e610460565b60008367ffffffffffffffff81111561025a57610259610953565b5b60405190808252806020026020018201604052801561029357816020015b610280610487565b8152602001906001900390816102785790505b50905060008367ffffffffffffffff8111156102b2576102b1610953565b5b6040519080825280602002602001820160405280156102eb57816020015b6102d8610487565b8152602001906001900390816102d05790505b5090506040518060600160405280600081526020016000815260200160405180606001604052808581526020018481526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60010b8152508152509250505092915050565b61035a610460565b8183604001516000015184600001805180919061037690610b47565b8152508151811061038a576103896108d6565b5b602002602001018190525082905092915050565b6103a6610460565b60405180604001604052806040518060400160405280600160028111156103d0576103cf610665565b5b81526020018673ffffffffffffffffffffffffffffffffffffffff1681525081526020018381525084604001516020015185602001805180919061041390610b47565b81525081518110610427576104266108d6565b5b60200260200101819052508390509392505050565b60405180606001604052806060815260200160608152602001600060010b81525090565b6040518060600160405280600081526020016000815260200161048161043c565b81525090565b604051806040016040528061049a6104a7565b8152602001600081525090565b6040518060400160405280600060028111156104c6576104c5610665565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610522576105216104fd565b5b8235905067ffffffffffffffff81111561053f5761053e610502565b5b60208301915083606082028301111561055b5761055a610507565b5b9250929050565b60008083601f840112610578576105776104fd565b5b8235905067ffffffffffffffff81111561059557610594610502565b5b6020830191508360018202830111156105b1576105b0610507565b5b9250929050565b600080600080604085870312156105d2576105d16104f3565b5b600085013567ffffffffffffffff8111156105f0576105ef6104f8565b5b6105fc8782880161050c565b9450945050602085013567ffffffffffffffff81111561061f5761061e6104f8565b5b61062b87828801610562565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106106a5576106a4610665565b5b50565b60008190506106b682610694565b919050565b60006106c6826106a8565b9050919050565b6106d6816106bb565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610707826106dc565b9050919050565b610717816106fc565b82525050565b60408201600082015161073360008501826106cd565b506020820151610746602085018261070e565b50505050565b6000819050919050565b61075f8161074c565b82525050565b60608201600082015161077b600085018261071d565b50602082015161078e6040850182610756565b50505050565b60006107a08383610765565b60608301905092915050565b6000602082019050919050565b60006107c482610639565b6107ce8185610644565b93506107d983610655565b8060005b8381101561080a5781516107f18882610794565b97506107fc836107ac565b9250506001810190506107dd565b5085935050505092915050565b60008160010b9050919050565b61082d81610817565b82525050565b6000606083016000830151848203600086015261085082826107b9565b9150506020830151848203602086015261086a82826107b9565b915050604083015161087f6040860182610824565b508091505092915050565b600060208201905081810360008301526108a48184610833565b905092915050565b6108b5816106fc565b82525050565b60006020820190506108d060008301846108ac565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61090e8161074c565b82525050565b600060408201905061092960008301856108ac565b6109366020830184610905565b9392505050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61098b82610942565b810181811067ffffffffffffffff821117156109aa576109a9610953565b5b80604052505050565b60006109bd6104e9565b90506109c98282610982565b919050565b600381106109db57600080fd5b50565b6000813590506109ed816109ce565b92915050565b6109fc816106fc565b8114610a0757600080fd5b50565b600081359050610a19816109f3565b92915050565b600060408284031215610a3557610a3461093d565b5b610a3f60406109b3565b90506000610a4f848285016109de565b6000830152506020610a6384828501610a0a565b60208301525092915050565b610a788161074c565b8114610a8357600080fd5b50565b600081359050610a9581610a6f565b92915050565b600060608284031215610ab157610ab061093d565b5b610abb60406109b3565b90506000610acb84828501610a1f565b6000830152506040610adf84828501610a86565b60208301525092915050565b600060608284031215610b0157610b006104f3565b5b6000610b0f84828501610a9b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b528261074c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b8457610b83610b18565b5b60018201905091905056fea2646970667358221220b44fbaae6e48d18ad8146c67df6d667055b45e5bd84b6c431a828b83a2ccd41e64736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100295760003560e01c80637bb26ca71461002e578063f6b4dfb41461005e575b600080fd5b610048600480360381019061004391906105b8565b610089565b604051610055919061088a565b60405180910390f35b34801561006a57600080fd5b50610073610212565b60405161008091906108bb565b60405180910390f35b61009161043c565b600185859050146100a157600080fd5b6000858560008181106100b7576100b66108d6565b5b9050606002016040013590507f2c58f4d3d48c3b93bf8f7fd23f32658ccb97894f02022d2189ffa9903d37bfb830826040516100f4929190610914565b60405180910390a160007f000000000000000000000000000000000000000000000000000000000000000090508073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561016957600080fd5b505af115801561017d573d6000803e3d6000fd5b505050505060006101fe7f0000000000000000000000000000000000000000000000000000000000000000846101ef8b8b60008181106101c0576101bf6108d6565b5b9050606002018036038101906101d69190610aeb565b6101e1600180610236565b61035290919063ffffffff16565b61039e9092919063ffffffff16565b604001519050809350505050949350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61023e610460565b60008367ffffffffffffffff81111561025a57610259610953565b5b60405190808252806020026020018201604052801561029357816020015b610280610487565b8152602001906001900390816102785790505b50905060008367ffffffffffffffff8111156102b2576102b1610953565b5b6040519080825280602002602001820160405280156102eb57816020015b6102d8610487565b8152602001906001900390816102d05790505b5090506040518060600160405280600081526020016000815260200160405180606001604052808581526020018481526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60010b8152508152509250505092915050565b61035a610460565b8183604001516000015184600001805180919061037690610b47565b8152508151811061038a576103896108d6565b5b602002602001018190525082905092915050565b6103a6610460565b60405180604001604052806040518060400160405280600160028111156103d0576103cf610665565b5b81526020018673ffffffffffffffffffffffffffffffffffffffff1681525081526020018381525084604001516020015185602001805180919061041390610b47565b81525081518110610427576104266108d6565b5b60200260200101819052508390509392505050565b60405180606001604052806060815260200160608152602001600060010b81525090565b6040518060600160405280600081526020016000815260200161048161043c565b81525090565b604051806040016040528061049a6104a7565b8152602001600081525090565b6040518060400160405280600060028111156104c6576104c5610665565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610522576105216104fd565b5b8235905067ffffffffffffffff81111561053f5761053e610502565b5b60208301915083606082028301111561055b5761055a610507565b5b9250929050565b60008083601f840112610578576105776104fd565b5b8235905067ffffffffffffffff81111561059557610594610502565b5b6020830191508360018202830111156105b1576105b0610507565b5b9250929050565b600080600080604085870312156105d2576105d16104f3565b5b600085013567ffffffffffffffff8111156105f0576105ef6104f8565b5b6105fc8782880161050c565b9450945050602085013567ffffffffffffffff81111561061f5761061e6104f8565b5b61062b87828801610562565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106106a5576106a4610665565b5b50565b60008190506106b682610694565b919050565b60006106c6826106a8565b9050919050565b6106d6816106bb565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610707826106dc565b9050919050565b610717816106fc565b82525050565b60408201600082015161073360008501826106cd565b506020820151610746602085018261070e565b50505050565b6000819050919050565b61075f8161074c565b82525050565b60608201600082015161077b600085018261071d565b50602082015161078e6040850182610756565b50505050565b60006107a08383610765565b60608301905092915050565b6000602082019050919050565b60006107c482610639565b6107ce8185610644565b93506107d983610655565b8060005b8381101561080a5781516107f18882610794565b97506107fc836107ac565b9250506001810190506107dd565b5085935050505092915050565b60008160010b9050919050565b61082d81610817565b82525050565b6000606083016000830151848203600086015261085082826107b9565b9150506020830151848203602086015261086a82826107b9565b915050604083015161087f6040860182610824565b508091505092915050565b600060208201905081810360008301526108a48184610833565b905092915050565b6108b5816106fc565b82525050565b60006020820190506108d060008301846108ac565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61090e8161074c565b82525050565b600060408201905061092960008301856108ac565b6109366020830184610905565b9392505050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61098b82610942565b810181811067ffffffffffffffff821117156109aa576109a9610953565b5b80604052505050565b60006109bd6104e9565b90506109c98282610982565b919050565b600381106109db57600080fd5b50565b6000813590506109ed816109ce565b92915050565b6109fc816106fc565b8114610a0757600080fd5b50565b600081359050610a19816109f3565b92915050565b600060408284031215610a3557610a3461093d565b5b610a3f60406109b3565b90506000610a4f848285016109de565b6000830152506020610a6384828501610a0a565b60208301525092915050565b610a788161074c565b8114610a8357600080fd5b50565b600081359050610a9581610a6f565b92915050565b600060608284031215610ab157610ab061093d565b5b610abb60406109b3565b90506000610acb84828501610a1f565b6000830152506040610adf84828501610a86565b60208301525092915050565b600060608284031215610b0157610b006104f3565b5b6000610b0f84828501610a9b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b528261074c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b8457610b83610b18565b5b60018201905091905056fea2646970667358221220b44fbaae6e48d18ad8146c67df6d667055b45e5bd84b6c431a828b83a2ccd41e64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}