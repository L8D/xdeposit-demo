{
  "address": "0x0d9b22deDa314fE07eD13520A8d77567eFFb5DDF",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wrappedEtherContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "thisAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "NativeUnwrapped",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum AssetType",
                  "name": "assetType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Asset",
              "name": "asset",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct AssetAmount[]",
          "name": "assetAmounts",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "enum AssetType",
                      "name": "assetType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetAddress",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct Asset",
                  "name": "asset",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct AssetAmount[]",
              "name": "inputAssetAmounts",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "enum AssetType",
                      "name": "assetType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetAddress",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct Asset",
                  "name": "asset",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct AssetAmount[]",
              "name": "outputAssetAmounts",
              "type": "tuple[]"
            },
            {
              "internalType": "int16",
              "name": "nextStepIndex",
              "type": "int16"
            },
            {
              "internalType": "int24",
              "name": "fee",
              "type": "int24"
            }
          ],
          "internalType": "struct WorkflowStepResult",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wethContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x7f42e1f64721563e459f66152c1b0cfd9fa551135f0e407181895c2ef4f5314e",
  "receipt": {
    "to": null,
    "from": "0x242b2eeCE36061FF84EC0Ea69d4902373858fB2F",
    "contractAddress": "0x0d9b22deDa314fE07eD13520A8d77567eFFb5DDF",
    "transactionIndex": 1,
    "gasUsed": "5663185",
    "logsBloom": "0x
    "blockHash": "0x588fae3e5ffe65426d8ec5de41cb08344e00dfd83277ed50b336807d0e055c1d",
    "transactionHash": "0x7f42e1f64721563e459f66152c1b0cfd9fa551135f0e407181895c2ef4f5314e",
    "logs": [],
    "blockNumber": 95002036,
    "cumulativeGasUsed": "5663185",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"
  ],
  "numDeployments": 3,
  "solcInputHash": "126f562631ae5a5bc960c9c4528f0e00",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wrappedEtherContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"thisAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeUnwrapped\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"assetAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"inputAssetAmounts\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"outputAssetAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"int16\",\"name\":\"nextStepIndex\",\"type\":\"int16\"},{\"internalType\":\"int24\",\"name\":\"fee\",\"type\":\"int24\"}],\"internalType\":\"struct WorkflowStepResult\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wethContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UnwrapNativeAction.sol\":\"UnwrapNativeAction\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@freemarket/core/contracts/IWorkflowStep.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./model/Asset.sol\\\";\\nimport \\\"./model/AssetAmount.sol\\\";\\nimport \\\"./model/WorkflowStepResult.sol\\\";\\n\\n/// @title The interface between WorkflowRunner and each Step implementation.abi\\n/// @author Marty Saxton\\n/// @notice All steps must implement this interface.\\ninterface IWorkflowStep {\\n    /// @notice called by WorkflowRunner to execute a workflow step.\\n    /// @param assetAmounts AssetAmounts to be used by the step\\n    /// @param argData Step specific arguments in ABI encoding\\n    /// @return the outcome of the step invocation\\n    function execute(AssetAmount[] calldata assetAmounts, bytes calldata argData)\\n        external\\n        payable\\n        returns (WorkflowStepResult memory);\\n}\\n\",\"keccak256\":\"0xce8590c782238edd5fa7293798bc02411f7b408ad4caeaaab2ac052e97ab1cdf\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/Asset.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./AssetType.sol\\\";\\n\\nstruct Asset {\\n    AssetType assetType;\\n    address assetAddress; // 0x0 for ETH, the ERC20 address.  If it's an account balance, this could represent the token of the account\\n}\\n\",\"keccak256\":\"0x2031c32d59aa2c1c6081156d4d06c9c6aff579a0b8f5d2f81ad86ff503e9e8a8\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetAmount.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './Asset.sol';\\n\\nstruct AssetAmount {\\n  Asset asset;\\n  uint256 amount;\\n}\\n\",\"keccak256\":\"0x4f57b823b38d6e8727dfa94708f63573854b74e44553f6f609bca64cc718ff0e\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetType.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nenum AssetType {\\n    Native,\\n    ERC20,\\n    ERC721\\n}\\n\",\"keccak256\":\"0xb9592fa2334517b52dae64c34f0254b4d75b20b60da00c5fc5c6e0316487e963\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/WorkflowStepResult.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './AssetAmount.sol';\\n\\n// The return value from the execution of a step.\\nstruct WorkflowStepResult {\\n  // The amounts of each input asset that resulted from the step execution.\\n  AssetAmount[] inputAssetAmounts;\\n  // The amounts of each output asset that resulted from the step execution.\\n  AssetAmount[] outputAssetAmounts;\\n  // The index of the next step in a workflow.\\n  // This value allows the step to override the default nextStepIndex\\n  // statically defined\\n  // -1 means terminate the workflow\\n  // -2 means do not override the statically defined nextStepIndex in WorkflowStep\\n  int16 nextStepIndex;\\n  // the fee to be withheald out of the output assets (in decibips)\\n  // -1 means use the default fee\\n  int24 fee;\\n}\\n\",\"keccak256\":\"0xfc2e23b8851d12ef7cc6f72414af0fafacda3ffe04656f396e837ffa6d2e21ee\",\"license\":\"MIT\"},\"@freemarket/step-sdk/contracts/LibActionHelpers.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport '@freemarket/core/contracts/model/AssetType.sol';\\nimport '@freemarket/core/contracts/model/WorkflowStepResult.sol';\\n\\nlibrary LibActionHelpers {\\n  function singleAssetResult(AssetType assetType, address assetAddress, uint256 amount) internal pure returns (WorkflowStepResult memory) {\\n    Asset memory asset = Asset(assetType, assetAddress);\\n    AssetAmount[] memory ouputAssetAmounts = new AssetAmount[](1);\\n    ouputAssetAmounts[0] = AssetAmount(asset, amount);\\n    return WorkflowStepResult(new AssetAmount[](0), ouputAssetAmounts, -2, -1);\\n  }\\n\\n  function singleTokenResult(address assetAddress, uint256 amount) internal pure returns (WorkflowStepResult memory) {\\n    return singleAssetResult(AssetType.ERC20, assetAddress, amount);\\n  }\\n\\n  function noOutputAssetsResult() internal pure returns (WorkflowStepResult memory) {\\n    return singleAssetResult(AssetType.Native, address(0), 0);\\n  }\\n}\\n\",\"keccak256\":\"0x3017f42ec45c2ee13e81220ac9833f47456f6ee9002fbefd9fdb12055ad7e863\",\"license\":\"MIT\"},\"@freemarket/step-sdk/contracts/LibStepResultBuilder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport '@freemarket/core/contracts/model/AssetType.sol';\\nimport '@freemarket/core/contracts/model/WorkflowStepResult.sol';\\n\\nstruct StepResultBuilder {\\n  uint256 inputIndex;\\n  uint256 outputIndex;\\n  WorkflowStepResult result;\\n}\\n\\nlibrary LibStepResultBuilder {\\n  function create(uint256 inputAssetCount, uint256 outputAssetCount) internal pure returns (StepResultBuilder memory) {\\n    AssetAmount[] memory inputAssetAmounts = new AssetAmount[](inputAssetCount);\\n    AssetAmount[] memory ouputAssetAmounts = new AssetAmount[](outputAssetCount);\\n    return StepResultBuilder(0, 0, WorkflowStepResult(inputAssetAmounts, ouputAssetAmounts, -2, -1));\\n  }\\n\\n  function addInputToken(\\n    StepResultBuilder memory builder,\\n    address tokenAddress,\\n    uint256 amount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.inputAssetAmounts[builder.inputIndex++] = AssetAmount(Asset(AssetType.ERC20, tokenAddress), amount);\\n    return builder;\\n  }\\n\\n  function addInputAssetAmount(\\n    StepResultBuilder memory builder,\\n    AssetAmount memory assetAmount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.inputAssetAmounts[builder.inputIndex++] = assetAmount;\\n    return builder;\\n  }\\n\\n  function addOutputToken(\\n    StepResultBuilder memory builder,\\n    address tokenAddress,\\n    uint256 amount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.outputAssetAmounts[builder.outputIndex++] = AssetAmount(Asset(AssetType.ERC20, tokenAddress), amount);\\n    return builder;\\n  }\\n\\n  function addInputNative(StepResultBuilder memory builder, uint256 amount) internal pure returns (StepResultBuilder memory) {\\n    builder.result.inputAssetAmounts[builder.inputIndex++] = AssetAmount(Asset(AssetType.Native, address(0)), amount);\\n    return builder;\\n  }\\n\\n  function addOutputNative(StepResultBuilder memory builder, uint256 amount) internal pure returns (StepResultBuilder memory) {\\n    builder.result.outputAssetAmounts[builder.outputIndex++] = AssetAmount(Asset(AssetType.Native, address(0)), amount);\\n    return builder;\\n  }\\n\\n  function addOutputAssetAmount(\\n    StepResultBuilder memory builder,\\n    AssetAmount memory assetAmount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.outputAssetAmounts[builder.outputIndex++] = assetAmount;\\n    return builder;\\n  }\\n\\n  function setNextStepIndex(StepResultBuilder memory builder, int16 nextStepIndex) internal pure returns (StepResultBuilder memory) {\\n    builder.result.nextStepIndex = nextStepIndex;\\n    return builder;\\n  }\\n\\n  function setFee(StepResultBuilder memory builder, int24 feeInDeciBips) internal pure returns (StepResultBuilder memory) {\\n    builder.result.fee = feeInDeciBips;\\n    return builder;\\n  }\\n}\\n\",\"keccak256\":\"0xabc9d9235341ee0c69e8834cd227646063bfb6961f4fb509901537076b0e7589\",\"license\":\"MIT\"},\"contracts/IWeth.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.13;\\n\\ninterface IWeth {\\n  function deposit() external payable;\\n\\n  function withdraw(uint) external;\\n}\\n\",\"keccak256\":\"0xe00c4f29d37fcfa230bcd8a33dab24923b4da32bf943e6e33741c9d8ececc938\",\"license\":\"UNLICENSED\"},\"contracts/UnwrapNativeAction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport '@freemarket/core/contracts/IWorkflowStep.sol';\\nimport '@freemarket/step-sdk/contracts/LibActionHelpers.sol';\\nimport './IWeth.sol';\\nimport '@freemarket/step-sdk/contracts/LibStepResultBuilder.sol';\\n\\n\\nusing LibStepResultBuilder for StepResultBuilder;\\n\\ncontract UnwrapNativeAction is IWorkflowStep {\\n  address public immutable wethContractAddress;\\n\\n  event NativeUnwrapped(address thisAddr, uint256 amount);\\n\\n  constructor(address wrappedEtherContractAddress) {\\n    wethContractAddress = wrappedEtherContractAddress;\\n  }\\n\\n  function execute(AssetAmount[] calldata assetAmounts, bytes calldata) external payable returns (WorkflowStepResult memory) {\\n\\n    uint256 amount = assetAmounts[0].amount;\\n    emit NativeUnwrapped(address(this), amount);\\n    IWeth weth = IWeth(wethContractAddress);\\n    weth.withdraw(amount);\\n    return LibStepResultBuilder.create(1, 1).addInputToken(wethContractAddress, amount).addOutputNative(amount).result;\\n  }\\n}\\n\",\"keccak256\":\"0x394406abf94050f208ef7421f81b7ad0fd1f550769ddb24a939fd024e21af6a1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610bcd380380610bcd833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b608051610aa961012460003960008181608b0152818161011401526101a90152610aa96000f3fe6080604052600436106100295760003560e01c806360b4eb981461002e5780637bb26ca714610059575b600080fd5b34801561003a57600080fd5b50610043610089565b604051610050919061057a565b60405180910390f35b610073600480360381019061006e919061065a565b6100ad565b6040516100809190610929565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6100b5610482565b6000858560008181106100cb576100ca61094b565b5b9050606002016040013590507fc6db34506f140e2481bf061902098593c6e2737f38b80822a4214fbbb92c49b23082604051610108929190610989565b60405180910390a160007f000000000000000000000000000000000000000000000000000000000000000090508073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d836040518263ffffffff1660e01b815260040161016e91906109b2565b600060405180830381600087803b15801561018857600080fd5b505af115801561019c573d6000803e3d6000fd5b505050506101f1826101e37f0000000000000000000000000000000000000000000000000000000000000000856101d4600180610201565b6103469092919063ffffffff16565b6103e490919063ffffffff16565b6040015192505050949350505050565b6102096104b0565b60008367ffffffffffffffff811115610225576102246109cd565b5b60405190808252806020026020018201604052801561025e57816020015b61024b6104d7565b8152602001906001900390816102435790505b50905060008367ffffffffffffffff81111561027d5761027c6109cd565b5b6040519080825280602002602001820160405280156102b657816020015b6102a36104d7565b81526020019060019003908161029b5790505b5090506040518060600160405280600081526020016000815260200160405180608001604052808581526020018481526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60010b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60020b8152508152509250505092915050565b61034e6104b0565b604051806040016040528060405180604001604052806001600281111561037857610377610707565b5b81526020018673ffffffffffffffffffffffffffffffffffffffff168152508152602001838152508460400151600001518560000180518091906103bb90610a2b565b815250815181106103cf576103ce61094b565b5b60200260200101819052508390509392505050565b6103ec6104b0565b604051806040016040528060405180604001604052806000600281111561041657610415610707565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525081526020018381525083604001516020015184602001805180919061045a90610a2b565b8152508151811061046e5761046d61094b565b5b602002602001018190525082905092915050565b60405180608001604052806060815260200160608152602001600060010b8152602001600060020b81525090565b604051806060016040528060008152602001600081526020016104d1610482565b81525090565b60405180604001604052806104ea6104f7565b8152602001600081525090565b60405180604001604052806000600281111561051657610515610707565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061056482610539565b9050919050565b61057481610559565b82525050565b600060208201905061058f600083018461056b565b92915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126105c4576105c361059f565b5b8235905067ffffffffffffffff8111156105e1576105e06105a4565b5b6020830191508360608202830111156105fd576105fc6105a9565b5b9250929050565b60008083601f84011261061a5761061961059f565b5b8235905067ffffffffffffffff811115610637576106366105a4565b5b602083019150836001820283011115610653576106526105a9565b5b9250929050565b6000806000806040858703121561067457610673610595565b5b600085013567ffffffffffffffff8111156106925761069161059a565b5b61069e878288016105ae565b9450945050602085013567ffffffffffffffff8111156106c1576106c061059a565b5b6106cd87828801610604565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061074757610746610707565b5b50565b600081905061075882610736565b919050565b60006107688261074a565b9050919050565b6107788161075d565b82525050565b61078781610559565b82525050565b6040820160008201516107a3600085018261076f565b5060208201516107b6602085018261077e565b50505050565b6000819050919050565b6107cf816107bc565b82525050565b6060820160008201516107eb600085018261078d565b5060208201516107fe60408501826107c6565b50505050565b600061081083836107d5565b60608301905092915050565b6000602082019050919050565b6000610834826106db565b61083e81856106e6565b9350610849836106f7565b8060005b8381101561087a5781516108618882610804565b975061086c8361081c565b92505060018101905061084d565b5085935050505092915050565b60008160010b9050919050565b61089d81610887565b82525050565b60008160020b9050919050565b6108b9816108a3565b82525050565b600060808301600083015184820360008601526108dc8282610829565b915050602083015184820360208601526108f68282610829565b915050604083015161090b6040860182610894565b50606083015161091e60608601826108b0565b508091505092915050565b6000602082019050818103600083015261094381846108bf565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b610983816107bc565b82525050565b600060408201905061099e600083018561056b565b6109ab602083018461097a565b9392505050565b60006020820190506109c7600083018461097a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a36826107bc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a6857610a676109fc565b5b60018201905091905056fea26469706673582212202cc8806dd910001994e34a4fa0e75da535386de73ad03bfe7c4f6ae69365e2c564736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100295760003560e01c806360b4eb981461002e5780637bb26ca714610059575b600080fd5b34801561003a57600080fd5b50610043610089565b604051610050919061057a565b60405180910390f35b610073600480360381019061006e919061065a565b6100ad565b6040516100809190610929565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6100b5610482565b6000858560008181106100cb576100ca61094b565b5b9050606002016040013590507fc6db34506f140e2481bf061902098593c6e2737f38b80822a4214fbbb92c49b23082604051610108929190610989565b60405180910390a160007f000000000000000000000000000000000000000000000000000000000000000090508073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d836040518263ffffffff1660e01b815260040161016e91906109b2565b600060405180830381600087803b15801561018857600080fd5b505af115801561019c573d6000803e3d6000fd5b505050506101f1826101e37f0000000000000000000000000000000000000000000000000000000000000000856101d4600180610201565b6103469092919063ffffffff16565b6103e490919063ffffffff16565b6040015192505050949350505050565b6102096104b0565b60008367ffffffffffffffff811115610225576102246109cd565b5b60405190808252806020026020018201604052801561025e57816020015b61024b6104d7565b8152602001906001900390816102435790505b50905060008367ffffffffffffffff81111561027d5761027c6109cd565b5b6040519080825280602002602001820160405280156102b657816020015b6102a36104d7565b81526020019060019003908161029b5790505b5090506040518060600160405280600081526020016000815260200160405180608001604052808581526020018481526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60010b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60020b8152508152509250505092915050565b61034e6104b0565b604051806040016040528060405180604001604052806001600281111561037857610377610707565b5b81526020018673ffffffffffffffffffffffffffffffffffffffff168152508152602001838152508460400151600001518560000180518091906103bb90610a2b565b815250815181106103cf576103ce61094b565b5b60200260200101819052508390509392505050565b6103ec6104b0565b604051806040016040528060405180604001604052806000600281111561041657610415610707565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525081526020018381525083604001516020015184602001805180919061045a90610a2b565b8152508151811061046e5761046d61094b565b5b602002602001018190525082905092915050565b60405180608001604052806060815260200160608152602001600060010b8152602001600060020b81525090565b604051806060016040528060008152602001600081526020016104d1610482565b81525090565b60405180604001604052806104ea6104f7565b8152602001600081525090565b60405180604001604052806000600281111561051657610515610707565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061056482610539565b9050919050565b61057481610559565b82525050565b600060208201905061058f600083018461056b565b92915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126105c4576105c361059f565b5b8235905067ffffffffffffffff8111156105e1576105e06105a4565b5b6020830191508360608202830111156105fd576105fc6105a9565b5b9250929050565b60008083601f84011261061a5761061961059f565b5b8235905067ffffffffffffffff811115610637576106366105a4565b5b602083019150836001820283011115610653576106526105a9565b5b9250929050565b6000806000806040858703121561067457610673610595565b5b600085013567ffffffffffffffff8111156106925761069161059a565b5b61069e878288016105ae565b9450945050602085013567ffffffffffffffff8111156106c1576106c061059a565b5b6106cd87828801610604565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061074757610746610707565b5b50565b600081905061075882610736565b919050565b60006107688261074a565b9050919050565b6107788161075d565b82525050565b61078781610559565b82525050565b6040820160008201516107a3600085018261076f565b5060208201516107b6602085018261077e565b50505050565b6000819050919050565b6107cf816107bc565b82525050565b6060820160008201516107eb600085018261078d565b5060208201516107fe60408501826107c6565b50505050565b600061081083836107d5565b60608301905092915050565b6000602082019050919050565b6000610834826106db565b61083e81856106e6565b9350610849836106f7565b8060005b8381101561087a5781516108618882610804565b975061086c8361081c565b92505060018101905061084d565b5085935050505092915050565b60008160010b9050919050565b61089d81610887565b82525050565b60008160020b9050919050565b6108b9816108a3565b82525050565b600060808301600083015184820360008601526108dc8282610829565b915050602083015184820360208601526108f68282610829565b915050604083015161090b6040860182610894565b50606083015161091e60608601826108b0565b508091505092915050565b6000602082019050818103600083015261094381846108bf565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b610983816107bc565b82525050565b600060408201905061099e600083018561056b565b6109ab602083018461097a565b9392505050565b60006020820190506109c7600083018461097a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a36826107bc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a6857610a676109fc565b5b60018201905091905056fea26469706673582212202cc8806dd910001994e34a4fa0e75da535386de73ad03bfe7c4f6ae69365e2c564736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}